<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/><title></title>
    <link href="styles.css" rel="stylesheet" type="text/css"/>
    </head>
    <body><dl></dl><ol><li>Which of the following is considered by the text to be the most
important consideration when designing a class?
<ol class="multiple-choice"><li>Each class should represent an appropriate mathematical
concept.</li><li class="correct">Each class should represent a single concept or object from the
problem domain.</li><li>Each class should represent no more than three specific
concepts.</li><li>Each class should represent multiple concepts only if they are
closely related.</li></ol><dl><dt>Section</dt><dd>9.1 Object-Oriented Programming</dd><dt>Title</dt><dd>Which of the following is considered by the text to be the most important consideration when designing a class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.1 Object-Oriented Programming</dd><dt>id</dt><dd>testbank-py-1-ch09-01</dd></dl></li><li>Which of the following questions should you ask yourself in
order to determine if you have named your class properly?
<ol class="multiple-choice"><li>Does the class name contain 8 or fewer characters?</li><li>Is the class name a verb?</li><li class="correct">Can I visualize an object of the class?</li><li>Does the class name describe the tasks that this class will
accomplish?</li></ol><dl><dt>Section</dt><dd>9.1 Object-Oriented Programming</dd><dt>Title</dt><dd>How do I ensure I have named a class properly?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.1 Object-Oriented Programming</dd><dt>id</dt><dd>testbank-py-1-ch09-02</dd></dl></li><li>Which statement is NOT a description of encapsulation?
<ol class="multiple-choice"><li>The act of hiding the implementation details</li><li class="correct">A collection of methods through which the objects of the class
can be manipulated</li><li>Enables changes in the implementation without affecting users
of a class</li><li>Mechanism for restricting access to some of the object's
components</li></ol><dl><dt>Section</dt><dd>9.1 Object-Oriented Programming</dd><dt>Title</dt><dd>Which statement best describes the public interface for a class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.1 Object-Oriented Programming</dd><dt>id</dt><dd>testbank-py-1-ch09-06</dd></dl></li><li>Which of the following statements is <strong>not</strong>
legal?
<ol class="multiple-choice"><li class="correct"><code>[&quot;Hello&quot;, &quot;World&quot;].lower()</code></li><li><code>&quot;Hello, World&quot;.lower()</code></li><li><code>[&quot;Hello&quot;, &quot;World&quot;].pop()</code></li><li><code>[&quot;Hello, World&quot;].pop()</code></li></ol><dl><dt>Section</dt><dd>9.1 Object Oriented Programming</dd><dt>Title</dt><dd>Which statement is not legal?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.1 Object-Oriented Programming</dd><dt>id</dt><dd>testbank-py-1-ch09-07</dd></dl></li><li>Which of the following is NOT a true statement regarding
object-oriented programming?
<ol class="multiple-choice">
  <li class="correct">Object oriented programming views the program as a list of tasks to perform.</li>
  <li>Object oriented programs usually contain different types of objects, each corresponding to a particular kind of complex data, real-world object or concept.</li>
  <li>Object oriented programming is a style where tasks are solved by collaborating objects.</li>
  <li>Object oriented programs are organized around &quot;objects&quot; rather than &quot;actions&quot; and &quot;data&quot; rather than &quot;logic&quot;.</li>
</ol><dl><dt>Section</dt><dd>9.1 Object-Oriented Programming</dd><dt>Title</dt><dd>Which of the following is NOT a true statement regarding object-oriented programming?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch09-03</dd><dt>section</dt><dd>9.1 Object-Oriented Programming</dd><dt>id</dt><dd>testbank-py-2-ch09-03</dd></dl></li><li>Which statement about classes is true?
  <ol class="multiple-choice">
    <li>A class contains data and methods that act upon that data.</li>
    <li>A class decomposes tasks into functions.</li>
    <li>A class describes a set of objects with different behaviors.</li>
    <li class="correct">A class describes a set of objects that all have the same behavior.</li>
</ol><dl><dt>Section</dt><dd>9.1 Object-Oriented Programming</dd><dt>Title</dt><dd>Which statement about classes is true?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch09-04</dd><dt>section</dt><dd>9.1 Object-Oriented Programming</dd><dt>id</dt><dd>testbank-py-2-ch09-04</dd></dl></li><li>Which statement is correct about the public interface for a class?

<ol class="multiple-choice">
  <li>The public interface for a class is a description of its class variables, and the types of information they are supposed to store.</li>
  <li class="correct">The public interface for a class is the set of all methods provided by a class, together with a description of their behavior.</li>
  <li>The public interface for a class is the set of all its methods, along with the code in the method bodies.
  </li>
  <li>The public interface for a class is the name of the class without any additional information.</li>
</ol><dl><dt>Section</dt><dd>9.1 Object-Oriented Programming</dd><dt>Title</dt><dd>Which statement is correct about the public interface for a class?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch09-05</dd><dt>section</dt><dd>9.1 Object-Oriented Programming</dd><dt>id</dt><dd>testbank-py-2-ch09-05</dd></dl></li><li>What is the purpose of an object's instance variables?
<ol class="multiple-choice"><li class="correct">Store the data required for executing its methods</li><li>Store the data for all objects created by the same class</li><li>To provide access to the data of an object</li><li>To create variables with public visibility</li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>What is the purpose of an object's instance variables?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-08</dd></dl></li><li>Naming conventions for Python dictate that instance variables
should start with an underscore to represent:
<ol class="multiple-choice"><li>public visibility</li><li class="correct">private visibility</li><li>encapsulation</li><li>public interface</li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>Why do instance variables start with an underscore?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-09</dd></dl></li><li>What is the purpose of a method?
<ol class="multiple-choice"><li>Enables changes in the implementation without affecting users
of a class</li><li class="correct">To access the instance variables of the object on which it
acts</li><li>Store the data for all objects created by the same class</li><li>Provide comments about the program implementation</li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>What is the purpose of a method?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-11</dd></dl></li><li>What is the purpose of the <code>self</code> parameter?
<ol class="multiple-choice"><li>Enables changes in the implementation without affecting users
of a class</li><li>To create variables with public visibility</li><li>Store the data for all objects created by the same class</li><li class="correct">Refers to the object on which the method was invoked</li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>What is the purpose of the self parameter?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-13</dd></dl></li><li>According to the textbook, what is the best practice for
updating instance variables?
<ol class="multiple-choice"><li>Directly access the variables</li><li class="correct">Restrict access to instance variables, only allow updates
through methods</li><li>Restrict access to instance variables, only allow updates
through functions</li><li>Provide both direct and indirect access to instance
variables</li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>According to the textbook, what is the best practice for updating instance variables?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-14</dd></dl></li><li>Assume a class exists named <code>Fruit</code>. Which of the
follow statements constructs an object of the <code>Fruit</code>
class?
<ol class="multiple-choice"><li><code>def Fruit() :</code></li><li><code>class Fruit() :</code></li><li class="correct"><code>x = Fruit()</code></li><li><code>x = Fruit.create()</code></li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Class</dd><dt>Title</dt><dd>Which statement creates an object?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-16</dd></dl></li><li>Which of the following statements is used to begin the
implementation of a new class named <code>Fruit</code>?
<ol class="multiple-choice"><li class="correct"><code>class Fruit :</code></li><li><code>def Fruit :</code></li><li><code>object Fruit :</code></li><li><code>x = Fruit()</code></li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>Which statement is used to begin the implementation of a new class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-17</dd></dl></li><li>What is the name of the instance variable in the following code
segment?
<pre>
class Fruit :
   def getColor(self) :
      return self._color
</pre><ol class="multiple-choice"><li class="correct"><code>_color</code></li><li><code>Fruit</code></li><li><code>getColor</code></li><li><code>self</code></li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>What is the name of the instance variable in the following code segment?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-18</dd></dl></li><li>What is the name of the method in the following code segment?
<pre>
class Fruit :
   def getColor(self) :
      return self._color
</pre><ol class="multiple-choice"><li><code>_color</code></li><li><code>Fruit</code></li><li class="correct"><code>getColor</code></li><li><code>self</code></li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>What is the name of the method in the following code segment?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-19</dd></dl></li><li>How many methods are there in the following class?
<pre>
class Person :
   def getName(self) :
      return self._name

   def getSalary(self) :
      return self._salary

   def giveRaise(self, howMuch) :
      self._salary = self._salary + howMuch
</pre><ol class="multiple-choice"><li><code>0</code></li><li><code>1</code></li><li><code>2</code></li><li class="correct"><code>3</code></li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>How many methods are there in a class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-20</dd></dl></li><li>Consider the following class:
<pre>
class Counter :
  def getValue(self) :
     return self._value

  def click(self) :
     self._value = self._value + 1

  def unClick(self) :
     self._value = self._value - 1

  def reset(self) :
     self._value = 0
</pre>
Which method creates a new instance variable?
<ol class="multiple-choice"><li><code>click</code></li><li><code>getValue</code></li><li class="correct"><code>reset</code></li><li><code>unClick</code></li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>Which method creates a new instance variable?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-21</dd></dl></li><li>The following two objects are created from the
  <code>Counter</code> class: <code>studentCounter</code>, and
  <code>teacherCounter</code> to represent the total number of students and 
  the total number of teachers
  respectively. If the <code>Counter</code> class contains an instance
  variable, <code>_num</code>, that is initialized to zero and increases every
  time the user executes the <code>add</code> method, what is stored in each
  object's instance variable after the following code snippet executes?

<pre>
studentCounter.add()
teacherCounter.add()
studentCounter.add()
</pre>

<ol class="multiple-choice">
  <li><code>studentCounter : 3, teacherCounter : 3</code></li>
  <li class="correct"><code>studentCounter : 2, teacherCounter : 1</code></li>
  <li><code>studentCounter : 1, teacherCounter : 2</code></li>
  <li><code>studentCounter : 1, teacherCounter : 1</code></li>
</ol>

<dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>What are the values of two instance variables after the given code snippet is executed?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch09-10</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-2-ch09-10</dd></dl></li><li>Which of the following is NOT a difference between methods and
functions?
<ol class="multiple-choice">
  <li>A method is defined within a class.  A function is defined outside of a class.</li>
  <li class="correct">A function is defined within a class.  A method is defined outside of a class.</li>
  <li>The first parameter variable for a method is <code>self</code>.  Functions do not have a <code>self</code> parameter variable.</li>
  <li>A method can access the instance variables of an object.  A function cannot.</li></ol><dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>Which of the following is NOT a difference between methods and functions?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch09-12</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-2-ch09-12</dd></dl></li><li>Suppose you have a class <code>ShoppingList</code>,
  with instance variables <code>_quantity</code>, <code>_cost</code>, and
  <code>_itemName</code>.  How should you access these variables when writing
  code that is not contained within the <code>ShoppingList</code> class?

  <ol class="multiple-choice">
    <li>Directly access the instance variables by using the object and the instance variables' names.</li>
    <li class="correct">Use methods provided by the <code>ShoppingList</code>
    class.</li>
    <li>It is not possible to access the instance variables outside of the <code>ShoppingList</code> class.</li>
    <li>Use the <code>self</code> parameter followed by the instance variables' names.</li>
  </ol>
<dl><dt>Section</dt><dd>9.2 Implementing a Simple Class</dd><dt>Title</dt><dd>How should you access instance variables in your program?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.2 Implementing a Simple Class</dd><dt>id</dt><dd>testbank-py-1-ch09-15</dd></dl></li><li>When designing a class, what is one of the first tasks that
need to be done?
<ol class="multiple-choice"><li>Defining the instance variables</li><li>Writing the method headers</li><li class="correct">Specifying the public interface</li><li>Adding comments to your program</li></ol><dl><dt>Section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>Title</dt><dd>When designing a class, what is one of the first tasks that need to be done?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-28</dd></dl></li><li>What items should be considered when creating the public
interface?
<ol class="multiple-choice"><li class="correct">Method headers and method comments</li><li>Instance variables</li><li>Data and method bodies</li><li>Method implementations</li></ol><dl><dt>Section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>Title</dt><dd>What items should be considered when creating the public interface?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-29</dd></dl></li><li>Before invoking a method on an object, what must be done first?
<ol class="multiple-choice"><li>Initialize all instance variables</li><li>Invoke the accessor and mutator methods</li><li>Create a public interface</li><li class="correct">Construct the object</li></ol><dl><dt>Section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>Title</dt><dd>Before invoking a method on an object, what must be done first?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-30</dd></dl></li><li>Which method below would be considered an accessor method?
<ol class="multiple-choice"><li class="correct"><pre>
getCount()
</pre></li><li><pre>
addItem()
</pre></li><li><pre>
clearCount()
</pre></li><li><pre>
updateItem()
</pre></li></ol><dl><dt>Section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>Title</dt><dd>Which method below would be considered an accessor method?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-31</dd></dl></li><li>Which method below would be considered a mutator method?
<ol class="multiple-choice"><li><pre>
getCount()
</pre></li><li class="correct"><pre>
addItem()
</pre></li><li><pre>
getTotal()
</pre></li><li><pre>
printItem()
</pre></li></ol><dl><dt>Section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>Title</dt><dd>Which method below would be considered an mutator method?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-32</dd></dl></li><li>Consider the following class:
<pre>
class Fruit :                # Line 1
   def getColor(self) :      # Line 2
      retval = self._color   # Line 3 
      return retval          # Line 4
</pre>
Which line(s) are part of the public interface for the class?
<ol class="multiple-choice"><li>Only line 1</li><li class="correct">Only line 2</li><li>Only lines 2 and 3</li><li>Only lines 3 and 4</li></ol><dl><dt>Section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>Title</dt><dd>Which line(s) are part of the public interface of a class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-35</dd></dl></li><li>Consider the following class:
<pre>
class Counter :
  def getValue(self) :
     return self._value

  def click(self) :
     self._value = self._value + 1

  def unClick(self) :
     self._value = self._value - 1

  def reset(self) :
     self._value = 0
</pre>
Which method is an accessor?
<ol class="multiple-choice"><li class="correct"><code>getValue</code></li><li><code>click</code></li><li><code>unClick</code></li><li><code>reset</code></li></ol><dl><dt>Section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>Title</dt><dd>Which method is an accessor?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-36</dd></dl></li><li>Consider the following class:
<pre>
class Counter :
  def getValue(self) :
     return self._value

  def click(self) :
     self._value = self._value + 1

  def unClick(self) :
     self._value = self._value - 1

  def reset(self) :
     self._value = 0
</pre>
Which method(s) are mutators?
<ol class="multiple-choice"><li>Only <code>reset</code></li><li>Only <code>click</code> and <code>unClick</code></li><li class="correct">Only <code>click</code>, <code>unClick</code> and
<code>reset</code></li><li>All four methods are mutators</li></ol><dl><dt>Section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>Title</dt><dd>Which method(s) are mutators?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-37</dd></dl></li><li>Assume that the class <code>ShoppingList</code> has already
been defined with the following public interface:
<pre>
## A simulated grocery list
#
class ShoppingList :
                  
## Adds an item to this shopping list.
# @param cost the cost of this item
# @param quantity the number of items
# @param itemName the name of the item
#
def addItem(self, cost, quantity, itemName) :
  # implementation hidden
                 
## Gets the number of items in the list.
# @return the item count
#
def getCount(self) :
  # implementation hidden
         
## Clears the list.
#
def clear(self) :
  # implementation hidden
</pre>
What is wrong with the following code segment?
<pre>
list.clear()
list = ShoppingList()       
list.addItem(2.95, 1, &quot;milk&quot;)
list.addItem(.50, 3, &quot;cucumber&quot;)
print(list.getCount())           
</pre>
<ol class="multiple-choice">
  <li>Nothing, the program prints 2 for the number of items in the list.</li>
  <li class="correct">The <code>list</code> object has not been created before
  invoking the <code>clear</code> method.</li>
  <li>The <code>addItem</code> method does not take three arguments.</li>
  <li>There is no <code>print</code> method defined for the <code>ShoppingList</code> class.</li>
</ol><dl><dt>Section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>Title</dt><dd>What is wrong with the following code segment that invokes methods on an object?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-33</dd></dl></li><li>Assume that the class <code>ShoppingList</code> has already
been defined with the following public interface:
<pre>
## A simulated grocery list 
#
class ShoppingList :
                   
## Adds an item to this shopping list.
# @param cost the cost of this item
# @param quantity the number of items
# @param itemName the name of the item
#
def addItem(self, cost, quantity, itemName) :
  # implementation hidden
                   
## Gets the number of items in the list.
# @return the item count
#
def getCount(self) :
  # implementation hidden
                   
## Clears the list.
#
def clear(self) :
  # implementation hidden 
</pre>
What is wrong with the following code segment?
<pre>
list = ShoppingList()
list.clear()
list.addItem(2.95, 1, &quot;milk&quot;)
list.addItem(.50, 3, &quot;cucumber&quot;)
print(list.getItems())    
</pre>
<ol class="multiple-choice">
  <li>Nothing, the program prints 2 for the number of items in the list.</li>
  <li>The <code>list</code> object has not been created before
  invoking the <code>clear</code> method.</li>
  <li>The <code>addItem</code> method does not take three values.</li>
  <li class="correct">There is no <code>getItems</code> method defined for the
<code>ShoppingList</code> class.</li></ol><dl><dt>Section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>Title</dt><dd>What is wrong with the following code segment that invokes methods on an object?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.3 Specifying the Public Interface of a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-34</dd></dl></li><li><p>In the following example, which data is considered instance
data?</p><p>You are assigned the task of writing a program that calculates
payroll for a small company. To get started the program should do
the following:</p><ul><li>Add new employees including their first and last name and
hourly wage</li><li>Ask for the number of hours worked</li><li>Calculate payroll (applying 1.5 for any hours greater than
40)</li><li>Print a report of all employees' salary for the week, total of
all hours and total of all salaries</li></ul><ol class="multiple-choice"><li class="correct"><pre>
firstName, lastName, hoursWorked, hourlyWage
</pre></li><li><pre>
firstName, lastName, hoursWorked, hourlyWage, payrollAmount
</pre></li><li><pre>
firstName, lastName, hoursWorked, hourlyWage, totalHours, totalSalary
</pre></li><li><pre>
firstName, lastName, hoursWorked, hourlyWage, payrollAmount, totalHours, totalSalary
</pre></li></ol><dl><dt>Section</dt><dd>9.4 Designing the Data Representation</dd><dt>Title</dt><dd>In the following example, which data should be considered instance data?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.4 Designing the Data Representation</dd><dt>id</dt><dd>testbank-py-1-ch09-38</dd></dl></li><li>Which name would be best for a private instance variable?
<ol class="multiple-choice"><li class="correct"><code>_confidential</code></li><li><code>HIDDEN</code></li><li><code>private</code></li><li><code>Secret</code></li></ol><dl><dt>Section</dt><dd>9.4 Designing the Data Representation</dd><dt>Title</dt><dd>Which name would be best for a private instance variable?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.4 Designing the Data Representation</dd><dt>id</dt><dd>testbank-py-1-ch09-39</dd></dl></li><li>What is the purpose of a constructor?
<ol class="multiple-choice"><li>To specify the public interface</li><li>To identify the accessor and mutator methods</li><li class="correct">To define and initialize the instance variables of an
object</li><li>To print the contents of an object</li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>What is the purpose of a constructor?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-40</dd></dl></li><li>When is a constructor invoked?<ol class="multiple-choice"><li class="correct">When an object is created</li><li>When instance data is modified</li><li>When a method is invoked</li><li>When multiple arguments are required to create an object</li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>When is a constructor invoked?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-41</dd></dl></li><li>Which of the following method headers represent a
constructor?<ol class="multiple-choice"><li><pre>
def init(self) :
</pre></li><li class="correct"><pre>
def __init__(self) :
</pre></li><li><pre>
def _init(self) :
</pre></li><li><pre>
def init() :
</pre></li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>Which of the following method headers represent a constructor?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-42</dd></dl></li><li>Consider the class <code>Employee</code>:<pre>
class Employee :
   def __init__(self, firstName, lastName, employeeId) :
      self._name = lastName + &quot;,&quot; + firstName 
      self._employeeId = employeeId
          . . . 
</pre>
If an object is contructed as:
<pre>
sam = Employee(&quot;Sam&quot;, &quot;Fisher&quot;, 54321)
</pre>
What is the contents of the instance variable _name?
<ol class="multiple-choice"><li><pre>
Sam
</pre></li><li><pre>
Sam Fisher
</pre></li><li class="correct"><pre>
Fisher, Sam
</pre></li><li><pre>
Fisher, Sam, 54321
</pre></li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>Given the constructor for the class Employee, what is the contents of one of the instance variables?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-43</dd></dl></li><li>Which of the following method headers represent a constructor
for an <code>Employee</code> class?<ol class="multiple-choice"><li><pre>
def Employee(self) :
</pre></li><li><pre>
def __init()__ :
</pre></li><li><pre>
def __Employee__(self) :
</pre></li><li class="correct"><pre>
def __init__(self) :
</pre></li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>Which of the following method headers represent a constructor?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-44</dd></dl></li><li>How many constructors can be defined for each class?<ol class="multiple-choice"><li>At least one must be defined</li><li class="correct">Only one may be defined</li><li>At least one, but as many as needed</li><li>At least one, but no more than five</li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>How many constructors can be defined for each class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-45</dd></dl></li><li>What method name is used for a constructor?
<ol class="multiple-choice"><li><code>__begin__</code></li><li><code>__construct__</code></li><li><code>__create__</code></li><li class="correct"><code>__init__</code></li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>What method name is used for a constructor?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-48</dd></dl></li><li>What is wrong with the following constructor?
<pre>
def __init__() :
   self._weight = 0.0
   self._color = &quot;None&quot;
</pre><ol class="multiple-choice"><li>The constructor must have a different name</li><li class="correct">The constructor must take the self parameter</li><li>The constructor must not initialize private instance
variables</li><li>The constructor must initialize <code>_color</code> before
<code>_weight</code></li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>What is wrong with this constructor?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-49</dd></dl></li><li>Consider the following code segment which constructs two
objects of type <code>Fruit</code>:
<pre>
x = Fruit()
y = Fruit(&quot;Banana&quot;, &quot;Yellow&quot;)
</pre>
Which constructor header will construct both objects successfully?
<ol class="multiple-choice"><li><code>def __init__(name, color) :</code></li><li><code>def __init__(name=&quot;&quot;, color=&quot;&quot;) :</code></li><li><code>def __init__(self, name, color) :</code></li><li class="correct"><code>def __init__(self, name=&quot;&quot;, color=&quot;&quot;) :</code></li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>Which constructor head will allow two objects to be constructed successfully?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-50</dd></dl></li><li>Which of the following is NOT true about constructors?<ol class="multiple-choice"><li>A constructor initializes the instance variables of an
object</li><li>The constructor is automatically called when an object is
created</li><li class="correct">The constructor is defined using the special method name
<code>__default__</code></li><li>Default arguments can be used with a constructor to provide
different ways of creating an object</li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>Which of the following is NOT true about constructors?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-73</dd></dl></li><li>Consider the following code segment:
<pre>
class PhoneNumber :
  
   def __init__(self, lName, phone = &quot;215-555-1212&quot;) :
      self._name = lName
      self._phone = phone

   def getName(self):
      return self._name

   def getPhone(self):
      return self._phone

Jones = PhoneNumber(&quot;Jones&quot;)
print(Jones.getName(), Jones.getPhone())
</pre>

What will be printed when it executes?

<ol class="multiple-choice"><li class="correct"><code>
Jones 215-555-1212
</code></li><li><code>
AttributeError: 'PhoneNumber' object has no attribute
</code></li><li><code>
Jones 
</code></li><li><code>
Jones 000-000-0000
</code></li></ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>What is printed by a code segment that creates an object?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-46</dd></dl></li><li>What change needs to be made in the following code
  segment so that <code>lName</code> will have a default value of
  &quot;<code>unknown</code>&quot;?

<pre>
class PhoneNumber :
  
   def __init__(self, lName, phone = &quot;215-555-1212&quot;) :
      self._name = lName
      self._phone = phone
</pre>
<ol class="multiple-choice">
  <li>Replace <code>self._name = lName</code> with <code>self._name = &quot;unknown&quot;</code></li>
  <li class="correct">Replace the <code>lName</code> parameter with <code>lName  = &quot;unknown&quot;</code></li>
  <li>Add <code>name = &quot;unknown&quot;</code> to the end of the constructor</li>
  <li>Add <code>self._lName = &quot;unknown&quot;</code> to the end of the constructor</li>
</ol><dl><dt>Section</dt><dd>9.5 Constructors</dd><dt>Title</dt><dd>What change should be made to a code segment so that the constructor includes a default value for a parameter?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.5 Constructors</dd><dt>id</dt><dd>testbank-py-1-ch09-47</dd></dl></li><li>How do you access instance variables in a method?<ol class="multiple-choice"><li>Using the constructor</li><li>Using the public interface</li><li>Using a default value</li><li class="correct">Using the <code>self</code> reference</li></ol><dl><dt>Section</dt><dd>9.6 Implementing Methods</dd><dt>Title</dt><dd>How do you access instance variables in a method?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.6 Implementing Methods</dd><dt>id</dt><dd>testbank-py-1-ch09-51</dd></dl></li><li>Given the following code snippet, what statement completes the
code to add several items to one grocery list:
<pre>
def addItems(self, price, quantity, itemName) :
   for i in range(quantity) :
      ________________________
def addItem(self, price, itemName) :
   self._itemCount = self._ItemCount + 1
   self._totalPrice = self._totalPrice + price
  . . . 
</pre><ol class="multiple-choice"><li class="correct"><pre>
self.addItem(price, itemName)
</pre></li><li><pre>
addItem(price, itemName)
</pre></li><li><pre>
self._addItem(price, itemName)
</pre></li><li><pre>
_addItem(price, itemName)
</pre></li></ol><dl><dt>Section</dt><dd>9.6 Implementing Methods</dd><dt>Title</dt><dd>Given the following code snippet, what statement completes the code to add several items to one grocery list:</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.6 Implementing Methods</dd><dt>id</dt><dd>testbank-py-1-ch09-52</dd></dl></li><li>Consider the following code segment:
<pre>
def mutate(self, newType) :
   self._type = newType
   self._mutations = self._mutations + 1
</pre>
What is the name of the local variable in it:
<ol class="multiple-choice"><li><code>mutate</code></li><li><code>_mutations</code></li><li class="correct"><code>newType</code></li><li><code>_type</code></li></ol><dl><dt>Section</dt><dd>9.6 Implementing Methods</dd><dt>Title</dt><dd>Identify the local variable in a method</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.6 Implementing Methods</dd><dt>id</dt><dd>testbank-py-1-ch09-53</dd></dl></li><li>Consider the following code segment:
<pre>
class Fruit :
   _type = &quot;Fruit&quot;

   def __init__(self, color) :
      self._color = color
</pre>
What is the name of the class variable?
<ol class="multiple-choice"><li><code>color</code></li><li><code>_color</code></li><li><code>self</code></li><li class="correct"><code>_type</code></li></ol><dl><dt>Section</dt><dd>9.6 Implementing Methods</dd><dt>Title</dt><dd>What is the name of the class variable?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.6 Implementing Methods</dd><dt>id</dt><dd>testbank-py-1-ch09-54</dd></dl></li><li>Which of the following is NOT true about instance methods for a
class?<ol class="multiple-choice"><li>The object on which a method is applied is automatically passed
to the <code>self</code> parameter variable of the method</li><li>In a method, you access instance variables through the
<code>self</code> parameter variable</li><li>A class variable belongs to the class, not to any instance of
the class</li><li class="correct">The accessor and mutator methods are automatically called when
an object is created</li></ol><dl><dt>Section</dt><dd>9.6 Implementing Methods</dd><dt>Title</dt><dd>Which of the following is NOT true about instance methods for a class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.6 Implementing Methods</dd><dt>id</dt><dd>testbank-py-1-ch09-74</dd></dl></li><li>Consider the following class:
<pre>
class Pet:
  def __init__(self, name):
    self._name = name
    self._owner = &quot;&lt;unknown&gt;&quot;

  def setOwner(self, owner):
    ____________________
</pre>
What line of code should be placed in the blank to complete the <code>setOwner</code> mutator method that is supposed to update the pet owner's name?

<ol class="multiple-choice">
  <li><code>self._name = name</code></li>
  <li><code>self._name = owner</code></li>
  <li class="correct"><code>self._owner = owner</code></li>
  <li><code>self.owner = _owner</code></li>
</ol><dl><dt>Section</dt><dd>9.6 Implementing Methods</dd><dt>Title</dt><dd>What code is needed to complete a mutator method?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.6 Implementing Methods</dd><dt>id</dt><dd>testbank-py-2-ch09-82</dd></dl></li><li>Class variables are also known as:

<ol class="multiple-choice">
  <li>global variables</li>
  <li>interface variables</li>
  <li>local variables</li>
  <li class="correct">static variables</li>
</ol><dl><dt>Section</dt><dd>9.6 Implementing Methods</dd><dt>Title</dt><dd>Which term is a synonym for &quot;class variable&quot;?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.6 Implementing Methods</dd><dt>id</dt><dd>testbank-py-2-ch09-83</dd></dl></li><li>Where should instance variables be defined?

<ol class="multiple-choice">
  <li>In accessor methods</li>
  <li class="correct">In constructors</li>
  <li>In functions</li>
  <li>In mutator methods</li>
</ol><dl><dt>Section</dt><dd>9.6 Implementing Methods</dd><dt>Title</dt><dd>Where should instance variables be defined?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.6 Implementing Methods</dd><dt>id</dt><dd>testbank-py-2-ch09-84</dd></dl></li><li>Consider the following class:
<pre>
class Pet:
  ____________________

  def __init__(self, name):
    self._name = name
    Pet._lastID = Pet._lastID + 1
    self._registrationID = Pet._lastID

</pre>
What line of code should be placed in the blank to create a class variable that
keeps track of the most recently used registration identifier?

<ol class="multiple-choice">
  <li class="correct"><code>_lastID = 0</code></li>
  <li><code>Pet.append(_lastID)</code></li>
  <li><code>Pet._lastID = 0</code></li>
  <li><code>self._lastID = 0</code></li>
</ol><dl><dt>Section</dt><dd>9.6 Implementing Methods</dd><dt>Title</dt><dd>What code is needed to add a class variable to an existing class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.6 Implementing Methods</dd><dt>id</dt><dd>testbank-py-2-ch09-85</dd></dl></li><li>Which of the following is NOT considered part of unit testing
for a class?<ol class="multiple-choice"><li>Construct an object</li><li class="correct">Identify syntax errors</li><li>Call methods</li><li>Verify the program returns the expected values</li></ol><dl><dt>Section</dt><dd>9.7 Testing a Class</dd><dt>Title</dt><dd>Which of the following is NOT considered part of unit testing for a class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.7 Testing a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-56</dd></dl></li><li>Which of the following is NOT a step carried out by a tester
program?<ol class="multiple-choice"><li>Construct one or more objects of the class</li><li>Invoke one or more methods</li><li>Print out one or more results</li><li class="correct">Identify syntax errors</li></ol><dl><dt>Section</dt><dd>9.7 Testing a Class</dd><dt>Title</dt><dd>Which of the following is NOT a step carried out by a tester program?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.7 Testing a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-57</dd></dl></li><li>Which of the follow code segments could be used to help test
the <code>getColor</code> method from the <code>Fruit</code> class?
<ol class="multiple-choice"><li class="correct"><pre>
print(f.getColor())
print(&quot;Expected: Yellow&quot;)
</pre></li><li><pre>
print(&quot;Yellow&quot;)
print(&quot;Expected: Yellow&quot;)
</pre></li><li><pre>
print(f.getColor())
print(&quot;Expected:&quot;, f.getColor())
</pre></li><li><pre>
print(&quot;Yellow&quot;)
print(&quot;Expected:&quot;, f.getColor())
</pre></li></ol><dl><dt>Section</dt><dd>9.7 Testing a Class</dd><dt>Title</dt><dd>Which code segment helps test a class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.7 Testing a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-59</dd></dl></li><li>What is the purpose of unit testing?<ol class="multiple-choice">
    <li>To verify that the constructor works correctly.</li>
    <li>To verify that the entire program works correctly.</li>
    <li class="correct">To verify that a class works correctly in isolation, outside a
    complete program.</li>
    <li>To verify that one method works correctly.</li></ol><dl><dt>Section</dt><dd>9.7 Testing a Class</dd><dt>Title</dt><dd>What is the purpose of unit testing?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.7 Testing a Class</dd><dt>id</dt><dd>testbank-py-1-ch09-55</dd></dl></li><li>What term is used to describe the process of verifying that a class works correctly in isolation, outside of a complete program?

<ol class="multiple-choice">
  <li>Function testing</li>
  <li>Interface testing</li>
  <li>Method testing</li>
  <li class="correct">Unit testing</li>
</ol><dl><dt>Section</dt><dd>9.7 Testing a Class</dd><dt>Title</dt><dd>What term is used to describe the process of verifying that a class works correctly in isolation?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.7 Testing a Class</dd><dt>id</dt><dd>testbank-py-2-ch09-86</dd></dl></li><li>When using the process of tracing objects for problem solving,
which types of methods update the values of the instance
variables?<ol class="multiple-choice"><li>Accessor methods</li><li>Mutator methods</li><li>Constructors</li><li class="correct">Both B and C</li></ol><dl><dt>Section</dt><dd>9.8 Problem Solving: Tracing Objects</dd><dt>Title</dt><dd>When using the process of tracing objects for problem solving, which types of methods update the values of the instance variables?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.8 Problem Solving: Tracing Objects</dd><dt>id</dt><dd>testbank-py-1-ch09-58</dd></dl></li><li>Consider the following class:
<pre>
class Contact :
   def __init__(self, name, phone=&quot;&quot;)
      self._name = name
      self._phone = phone

   def getName(self) :
      return self._name

   def setName(self, new_name) :
      self._name = new_name

   def getPhone(self) :
      return self._phone

   def setPhone(self, new_phone) :
      self._phone = new_phone
</pre>
What is output by the following code segment?
<pre>
p1 = Contact(&quot;Bob&quot;, &quot;555-123-4567&quot;)
p2 = Contact(&quot;Joe&quot;, &quot;555-000-0000&quot;)
p1.setName(p2.getName())

print(p1.getPhone())
</pre><ol class="multiple-choice"><li><code>Bob</code></li><li><code>Joe</code></li><li><code>555-000-0000</code></li><li class="correct"><code>555-123-4567</code></li></ol><dl><dt>Section</dt><dd>9.8 Problem Solving: Tracing Objects</dd><dt>Title</dt><dd>Trace code involving objects and classes</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.8 Problem Solving: Tracing Objects</dd><dt>id</dt><dd>testbank-py-1-ch09-60</dd></dl></li><li>Which of the following patterns can be used for designing your
class to help keep track of the number of fees charged by a bank?<ol class="multiple-choice"><li>Keeping a total</li><li class="correct">Counting events</li><li>Collecting values</li><li>Managing properties of an object</li></ol><dl><dt>Section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>Title</dt><dd>Which of the following patterns can be used for designing your class to help track of the number of fees charged by a bank?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>id</dt><dd>testbank-py-1-ch09-61</dd></dl></li><li>Which of the following patterns can be used for designing your
class to update the balance of a bank account?<ol class="multiple-choice"><li class="correct">Keeping a total</li><li>Counting events</li><li>Collecting values</li><li>Managing properties of an object</li></ol><dl><dt>Section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>Title</dt><dd>Which of the following patterns can be used for designing your class to update the balance of a bank account?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>id</dt><dd>testbank-py-1-ch09-62</dd></dl></li><li>Which of the following patterns can be used for designing your
class to add error checking such as not allowing a blank name for a
bank account?<ol class="multiple-choice"><li>Describing the Position of an Object</li><li>Modeling Objects with Distinct States</li><li class="correct">Managing Properties of an Object</li><li>Collecting Values</li></ol><dl><dt>Section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>Title</dt><dd>Which of the following patterns can be used for designing your class to add error checking such as not allowing a blank name for a bank account?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>id</dt><dd>testbank-py-1-ch09-63</dd></dl></li><li>Which of the following patterns can be used for designing your
class for a train object that drives along a track and keeps track
of the distance from the terminus?<ol class="multiple-choice"><li class="correct">Describing the Position of an Object</li><li>Modeling Objects with Distinct States</li><li>Managing Properties of an Object</li><li>Collecting Values</li></ol><dl><dt>Section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>Title</dt><dd>Which of the following patterns can be used for designing your class for a train object that drives along a track and keeps track of the distance from the terminus?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>id</dt><dd>testbank-py-1-ch09-64</dd></dl></li><li>Consider the following class which is used to represent a
polygon consisting of an arbitrary number of <code>(x, y)</code>
points:
<pre>
class Polygon :
   def __init__(self) :
      self._x_points = []
      self._y_points = []
</pre>
Which of the following code segments is the correct implementation
for the <code>addPoint</code> method that adds another point to the
polygon?
<ol class="multiple-choice"><li><pre>
def addPoint(self, x, y) :
   self._points.append(x, y)
</pre></li><li class="correct"><pre>
def addPoint(self, x, y) :
   self._x_points.append(x)
   self._y_points.append(y)
</pre></li><li><pre>
def addPoint(self, x, y) :
   self._x_points = x
   self._y_points = y
</pre></li><li><pre>
def addPoint(self, x, y) :
   self._x_points = [x]
   self._y_points = [y]
</pre></li></ol><dl><dt>Section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>Title</dt><dd>Implement a new method in a class</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>id</dt><dd>testbank-py-1-ch09-65</dd></dl></li><li>Consider a class that represents a hardware device. The device
can be in one of two states: Plugged in, or unplugged. Which of the
following class definitions is best for this situation?
<ol class="multiple-choice"><li><pre>
PLUGGED_IN = 0
UNPLUGGED = 1

class Device :
   def __init__(self) :
   . . .  
</pre></li><li class="correct"><pre>
class Device :
   PLUGGED_IN = 0
   UNPLUGGED = 1

   def __init__(self) :
   . . .
</pre></li><li><pre>
class Device :
   def __init__(self) :
      PLUGGED_IN = 0
      UNPLUGGED = 1
   . . .
</pre></li><li><pre>
class Device :
   def __init__(self) :
      self.PLUGGED_IN = 0
      self.UNPLUGGED = 1
   . . .
</pre></li></ol><dl><dt>Section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>Title</dt><dd>Which class best represents a device with 2 possible states?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>id</dt><dd>testbank-py-1-ch09-66</dd></dl></li><li>Which of the following is NOT a pattern used to help design the
data representation of a class?<ol class="multiple-choice"><li>An instance variable for thte total is updated in methods that
increase or decrease the total amount</li><li>An object reference specifies the location of an object</li><li class="correct">An object can collect other objects in a list</li><li>To model a moving object, you need to store and update its
position</li></ol><dl><dt>Section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>Title</dt><dd>Which of the following is NOT true about instance methods for a class?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.9 Problem Solving: Patterns for Object Data</dd><dt>id</dt><dd>testbank-py-1-ch09-75</dd></dl></li><li>What is the value of the variable <code>bankAcct</code> after
the following code snippet is executed?
<pre>
bankAcct = BankAccount(&quot;Fisher&quot;, 1000.00)
</pre><ol class="multiple-choice"><li><pre>
&quot;Fisher&quot;, 1000.00
</pre></li><li class="correct">A memory location</li><li><pre>
&quot;Fisher&quot;
</pre></li><li><pre>
1000.00
</pre></li></ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>What is the value of the variable bankAcct after the following code snippet is executed?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-1-ch09-67</dd></dl></li><li>Given the following code snippet, how can you test if they
reference the same object (or does not refer to any object)?<pre>
  bankAcct2 = bankAcct  
</pre><ol class="multiple-choice"><li><pre>
if bankAcct == bankAcct2 :
   print(&quot;The variables are aliases&quot;)
</pre></li><li class="correct"><pre>
if bankAcct is bankAcct2 :
   print(&quot;The variables are aliases&quot;)
</pre></li><li><pre>
if bankAcct is not bankAcct2 :
   print(&quot;The variables are aliases&quot;)
</pre></li><li><pre>
if bankAcct.equals(bankAcct2) :
   print(&quot;The variables are aliases&quot;)
</pre></li></ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>Given the following pre snippet, how can you test if they reference the same object?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-1-ch09-69</dd></dl></li><li>Which statement determines if the <code>middleInit</code>
variable is empty or does not refer to any object?<ol class="multiple-choice"><li class="correct"><pre>
if middleInit is None :
   print(&quot;No middle initial&quot;)
</pre></li><li><pre>
if middleInit is not None : 
   print(&quot;No middle initial&quot;)
</pre></li><li><pre>
if middleInit == None : 
   print(&quot;No middle initial&quot;)
</pre></li><li><pre>
if middleInit != None : 
   print(&quot;No middle initial&quot;)
</pre></li></ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>Which statement determines if the middleInit variable is empty or does not refer to any object?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-1-ch09-70</dd></dl></li><li>What happens when an object is no longer referenced?<ol class="multiple-choice"><li>Nothing until the problem terminates</li><li class="correct">The garbage collector removes the object</li><li>The address is saved for future instances of the object</li><li>Creates a <code>None</code> reference</li></ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>What happens when an object is no longer referenced?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-1-ch09-71</dd></dl></li><li>Which of the following is NOT true about objects?<ol class="multiple-choice"><li>An object reference specifies the location of an object</li><li>Multiple object variables can contain references to the same
object</li><li class="correct">The <code>==</code> and <code>!=</code> operators test whether
two variables are aliases</li><li>The <code>None</code> reference refers to no object</li></ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>Which of the following is NOT true about objects?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-1-ch09-72</dd></dl></li><li>Given the variable assignment <code>sentence = &quot;&quot;</code>, what
is the value of <code>len(sentence)</code>?<ol class="multiple-choice"><li><code>1</code></li><li><code>-1</code></li><li>an exception is raised</li><li class="correct"><code>0</code></li></ol><dl><dt>Section</dt><dd>9.10 Objects and Classes</dd><dt>Title</dt><dd>Given the variable assignment sentence = &quot;&quot;, what is the value of len(sentence)?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-1-ch09-76</dd></dl></li><li>Which of the following statements sets <code>x</code> so that
it refers to no object at all?
<ol class="multiple-choice"><li><code>x =</code></li><li><code>x = ()</code></li><li><code>x = &quot;&quot;</code></li><li class="correct"><code>x = None</code></li></ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>Which statement gives a variable a variable that refers to no object at all?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-1-ch09-77</dd></dl></li><li>Recall the Cash Register class developed in the textbook. What
is output by the following code segment?
<pre>
from cashregister2 import CashRegister

reg1 = CashRegister()
reg1.addItem(3.00)
reg2 = reg1
reg1.addItem(5.00)
print(reg2.getCount())
</pre><ol class="multiple-choice"><li>0</li><li>1</li><li class="correct">2</li><li>The program terminates with a runtime error</li></ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>Trace code involving object references</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-1-ch09-78</dd></dl></li><li>Recall the Cash Register class developed in the textbook. What
is output by the following code segment?
<pre>
from cashregister2 import CashRegister

reg1 = CashRegister()
reg2 = reg1
reg1.addItem(3.00)
reg1.addItem(5.00)
reg2.clear()
print(reg1.getCount())
</pre><ol class="multiple-choice"><li class="correct">0</li><li>1</li><li>2</li><li>The program terminates with a runtime error</li></ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>Trace code involving object references</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-1-ch09-79</dd></dl></li><li>Consider the following code segment:

<pre>
bankAcct = BankAccount(&quot;Fisher&quot;, 1000.00)
bankAcct2 = bankAcct  
</pre>

What is the relationship between bankAcct and bankAcct2?

<ol class="multiple-choice">
  <li><code>bankAcct</code> and <code>bankAcct2</code> are self references</li>
  <li class="correct"><code>bankAcct</code> and <code>bankAcct2</code> are aliases for the same object reference</li>
  <li><code>bankAcct</code> and <code>bankAcct2</code> are <code>NONE</code> references</li>
  <li><code>bankAcct</code> and <code>bankAcct2</code> are separate references</li>
</ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>What is the relationship between two object references in a code segment?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch09-68</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-2-ch09-68</dd></dl></li><li>What does an object reference specify?

<ol class="multiple-choice">
  <li>The hashcode of an object</li>
  <li class="correct">The location of an object</li>
  <li>The name of an object</li>
  <li>The size of an object</li>
</ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>What does an object reference specify?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-2-ch09-87</dd></dl></li><li>What part of the virtual machine is responsible for removing objects that are no longer referenced?

<ol class="multiple-choice">
  <li>The allocator</li>
  <li class="correct">The garbage collector</li>
  <li>The recycler</li>
  <li>The regenerator</li>
</ol><dl><dt>Section</dt><dd>9.10 Object References</dd><dt>Title</dt><dd>What part of the virtual machine is responsible for removing objects that are no longer referenced?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.10 Object References</dd><dt>id</dt><dd>testbank-py-2-ch09-88</dd></dl></li><li>Assume that <code>x</code> is a variable containing an object
reference. Which special method is invoked when the following
statement executes?
<pre>
print(x)
</pre><ol class="multiple-choice"><li><code>__init__</code></li><li><code>__print__</code></li><li class="correct"><code>__repr__</code></li><li><code>__str__</code></li></ol><dl><dt>Section</dt><dd>9.11 Application: Writing a Fraction Class</dd><dt>Title</dt><dd>Which special method is invoked when an object is printed?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.11 Application: Writing a Fraction Class</dd><dt>id</dt><dd>testbank-py-1-ch09-80</dd></dl></li><li>Which of the following statements determines if <code>x</code>
currently refers to an object containing an integer?
<ol class="multiple-choice"><li><code>if int(x) :</code></li><li><code>if x == int :</code></li><li><code>if x is int :</code></li><li class="correct"><code>if isinstance(x, int) :</code></li></ol><dl><dt>Section</dt><dd>9.11 Application: Writing a Fraction Class</dd><dt>Title</dt><dd>Which statement determines if x refers to an integer?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.11 Application: Writing a Fraction Class</dd><dt>id</dt><dd>testbank-py-1-ch09-81</dd></dl></li><li>Consider the following class which will be used to 
  represent complex numbers:
<pre>
class Complex:
  def __init__(self, real, imaginary):
    self._real = real
    self._imaginary = imaginary

  def ____________________:
    real = self._real + rhsValue._real
    imaginary = self._imaginary + rhsValue._imaginary
    return Complex(real, imaginary)

</pre>
  What code should be placed in the blank so that two complex numbers can be added using the <code>+</code> operator?

<ol class="multiple-choice">
  <li><code>+(self, rhsValue)</code></li>
  <li><code>__+__(self, rhsValue)</code></li>
  <li><code>add</code></li>
  <li class="correct"><code>__add__(self, rhsValue)</code></li>
</ol><dl><dt>Section</dt><dd>9.11 Application: A Fraction Class</dd><dt>Title</dt><dd>What statement should be added to a class so that two instances of the class can be added using a plus sign?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>9.11 Application: Writing a Fraction Class</dd><dt>id</dt><dd>testbank-py-2-ch09-89</dd></dl></li></ol></body>
    </html>
