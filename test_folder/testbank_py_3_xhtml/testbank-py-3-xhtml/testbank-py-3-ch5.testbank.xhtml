<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/><title></title>
    <link href="styles.css" rel="stylesheet" type="text/css"/>
    </head>
    <body><dl></dl><ol><li>A ___________________________ is a sequence of instructions
with a name.
<ol class="multiple-choice"><li>variable</li><li>argument</li><li>parameter</li><li class="correct">function</li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>What is a sequence of instructions with a name called in Python?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-1-ch05-04</dd></dl></li><li>Consider the following function call <code>round(3.14159,
3)</code> what is the return value?
<ol class="multiple-choice"><li><code>3.14159</code></li><li class="correct"><code>3.141</code></li><li><code>3.14</code></li><li><code>3.1</code></li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>What is returned from the round function when it is called?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-1-ch05-06</dd></dl></li><li>Consider the following function call <code>ceil(3.14159)</code>
what is the return value?
<ol class="multiple-choice"><li><code>3.14159</code></li><li><code>3.0</code></li><li class="correct"><code>4.0</code></li><li><code>3.1416</code></li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>What is returned from the ceil function when it is called?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-1-ch05-07</dd></dl></li><li>Which of the following is a correct call to Python's round
function?
<ol class="multiple-choice"><li><code>x = round(&quot;3.14159&quot;, 2)</code></li><li><code>x = round(&quot;3.14159&quot;)</code></li><li class="correct"><code>x = round(3.14159)</code></li><li><code>x = round(3, 1, 4, 1, 5, 9)</code></li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>Which of the following is a correct function call for Python's round function?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-1-ch05-08</dd></dl></li><li>Consider a function named <code>calc</code>. It accepts two
integer arguments and returns their sum as an integer. Which of the
following statements is a correct invocation of the calc function?
<ol class="multiple-choice"><li>total = calc()</li><li>total = calc(2)</li><li>total = calc(&quot;2&quot;, &quot;3&quot;)</li><li class="correct">total = calc(2, 3)</li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>Which of the following is a correct function call?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-1-ch05-09</dd></dl></li><li>The <code>ceil</code> function in the Python standard library
<code>math</code> module takes a single value x and returns the
smallest integer that is greater than or equal to x. Which of the
following is true about <code>ceil(56.75)</code>?<ol class="multiple-choice"><li class="correct">The argument is 56.75, and the return value is 57</li><li>The argument is 56.75, and the return value is 56</li><li>The argument is 57, and the return value is 56.75</li><li>The argument is 56, and the return value is 56.75</li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>Which is true about Math.ceil(56.75)?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-1-ch05-59</dd></dl></li><li>Which process helps identify the functions that should make up a
computer program?
<ol class="multiple-choice"><li>black boxing</li><li class="correct">stepwise refinement</li><li>parameter passing</li><li>debugging</li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>Which process helps identify the functions that should make up a computer program?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-01</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-2-ch05-01</dd></dl></li><li>The term Black Box is used with functions because
<ol class="multiple-choice"><li>Only the implementation matters; the specification is not
important.</li><li class="correct">Only the specification matters; the implementation is not
important.</li><li>Only the arguments matter; the return value is not
important.</li><li>Only the return value matters; the arguments are not
important.</li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>Why is the term black box used with functions?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-02</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-2-ch05-02</dd></dl></li><li>One advantage of designing functions as black boxes is that
<ol class="multiple-choice"><li class="correct">many programmers can work on the same project without knowing
the internal implementation details of functions.</li><li>the result that is returned from black-box functions is always
the same data type.</li><li>the implementation of the function is open for everyone to
see.</li><li>there are fewer parameters.</li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>What is one advantage of designing functions as black boxes?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-03</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-2-ch05-03</dd></dl></li><li>What is supplied to a function when it is called?
  <ol class="multiple-choice">
    <li class="correct">arguments</li>
    <li>numbers</li>
    <li>return values</li>
    <li>variables</li>
  </ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>What is supplied to a function when it is called?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-05</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-2-ch05-05</dd></dl></li><li>Consider a function named <code>avg</code>, which accepts four
numbers and returns their average. Which of the following is a
correct call to the function <code>avg</code>?<ol class="multiple-choice">
  <li><code>avg(2, 3.14, 3, 5, 6)</code></li>
  <li class="correct"><code>average = avg(2, 3.14, 4, 5)</code></li>
  <li><code>avg()</code></li>
  <li><code>average = avg(&quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;)</code></li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>Which statement correctly calls the average function with 4 parameters?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-60</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-2-ch05-60</dd></dl></li><li>Which of the following statements is true about functions in Python?<ol class="multiple-choice"><li>Functions can have only one argument and can return only one
return value.</li><li>Functions can have multiple arguments and can return multiple
return values.</li><li class="correct">Functions can have multiple arguments and can return one return 
value.</li><li>Functions can have one argument and can return multiple return
values.</li></ol><dl><dt>Section</dt><dd>5.1 Functions as Black Boxes</dd><dt>Title</dt><dd>Which statement is true about functions?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-61</dd><dt>section</dt><dd>5.1 Functions as Black Boxes</dd><dt>id</dt><dd>testbank-py-2-ch05-61</dd></dl></li><li>What Python statement exits a function and gives the result
to the caller?
<ol class="multiple-choice"><li><code>def</code></li><li class="correct"><code>return</code></li><li><code>send</code></li><li><code>result</code></li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>What Python statement exits the function and gives the result to the caller?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-11</dd></dl></li><li>Given the code snippet below, what is returned by the function
call: <code>mystery(5,3)</code>?<pre>
def mystery(num1, num2) :
   result = num1 * num2
   return result
</pre><ol class="multiple-choice"><li><code>8</code></li><li class="correct"><code>15</code></li><li><code>2</code></li><li><code>0</code></li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>What is the result of the given function call?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-12</dd></dl></li><li>Given the code snippet below, what is returned by the function
call: <code>mystery(mystery(5, 3), mystery(5, 3))</code>?<pre>
def mystery(num1, num2) :
   result = num1 * num2
   return result
</pre><ol class="multiple-choice"><li class="correct"><code>225</code></li><li><code>15</code></li><li><code>30</code></li><li><code>0</code></li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>What is the result of the given function call?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-13</dd></dl></li><li>What is wrong with the following code snippet?<pre>
mystery(10, 2)
def mystery(num1, num2) :
   result = num1 ** num2
   return result    
</pre><ol class="multiple-choice"><li>nothing, it will return <code>20</code></li><li>nothing, it will return <code>100</code></li><li>a variable must be used to store the result of the function
call</li><li class="correct">the function must be defined before the statement that calls
it</li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>What is wrong with the following code snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-14</dd></dl></li><li>Consider the following function:
<pre>
def w(x, y) :
   z = x + y 
   return z
</pre>
What is the function's name?
<ol class="multiple-choice"><li class="correct">w</li><li>x</li><li>y</li><li>z</li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>What is the function's name?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-15</dd></dl></li><li>The following function is supposed to compute the area of a
triangle and return the area as the function's result.
<pre>
def triangleArea(base, height) :
  area = base * height / 2
  ____________________
</pre>
What line of code must be placed in the blank to achieve this goal?
<ol class="multiple-choice"><li><code>print area</code></li><li><code>print(area)</code></li><li class="correct"><code>return area</code></li><li><code>return triangleArea</code></li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>What line of code is needed to complete the function for computing the area of a triangle?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-16</dd></dl></li><li>Assume that you are writing a function that computes the volume
of a box for shipping electrical components. The components vary in
shape -- some are long and skinny, while others are cube-like.
Different boxes are used for components with different shapes.
Which of the following function headers is the best?
<ol class="multiple-choice"><li><code>def boxVolume() :</code></li><li><code>def boxVolume(sideLength) :</code></li><li><code>def boxVolume(a, b, c) :</code></li><li class="correct"><code>def boxVolume(length, width, height) :</code></li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>Select the best header for a function that computes the volume of a box</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-17</dd></dl></li><li>Consider the following function:
<pre>
def squareArea(sideLength) :
   return sideLength ** 2
</pre>
What is the value of squareArea(3)?
<ol class="multiple-choice"><li>2</li><li>3</li><li>6</li><li class="correct">9</li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>Trace a function call</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-19</dd></dl></li><li>Consider the following function:
<pre>
def squareArea(sideLength) :
   return sideLength ** 2
</pre>
What is the value of squareArea(squareArea(2))?
<ol class="multiple-choice"><li>2</li><li>4</li><li>8</li><li class="correct">16</li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>Trace a nested function call</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-20</dd></dl></li><li>Consider the following function:
<pre>
def mystery(a, b) :
   result = (a - b) * (a + b)
   return result
</pre>
What is the result of calling <code>mystery(3, 2)</code>?
<ol class="multiple-choice"><li>2</li><li>3</li><li>4</li><li class="correct">5</li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>Trace a function call</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-21</dd></dl></li><li>Consider the following function:
<pre>
## Compute the volume of a cuboid.
#  @param width the width of the cuboid
#  @return the volume of the cuboid
def volume(width, height, length) :
   return width * height * length
</pre>
Based on the recommendations in the textbook, what change should be
made to improve the comments for this function?
<ol class="multiple-choice"><li>The <code>@param</code> line for width should be removed</li><li class="correct">Additional <code>@param</code> lines should be added for
<code>height</code> and <code>length</code></li><li>The first line should be expanded to describe how the function
performs its calculation</li><li>The <code>@return</code> line should be removed</li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>How can the function's comment be improved?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-22</dd></dl></li><li>You are writing a function that converts from Liters to
Gallons. Which function header is the best?
<ol class="multiple-choice"><li><code>def litersToGallons() :</code></li><li class="correct"><code>def litersToGallons(liters) :</code></li><li><code>def litersToGallons(gallons) :</code></li><li><code>def litersToGallons(liters, gallons) :</code></li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>Which function header is best for a function that converts from Liters to Gallons?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-23</dd></dl></li><li>Which of the following statements correctly defines a
function?
<ol class="multiple-choice">
  <li class="correct"><code>def functionName(parameterName1, parameterName2) :</code></li>
  <li><code>def functionName(parameterName1, parameterName2)</code></li>
  <li><code>functionName(parameterName1, parameterName2) :</code></li>
  <li><code>functionName(parameterName1, parameterName2)</code></li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>Which of the following statements correctly defines a function? </dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-10</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-2-ch05-10</dd></dl></li><li>Consider the following function.
<pre>
def factorial(n) :
   result = 1
   for i in range(1, n + 1) :
      result = result * i
   return result
</pre>
What is the parameter variable for this function?
<ol class="multiple-choice"><li><code>factorial</code></li><li><code>i</code></li><li class="correct"><code>n</code></li><li><code>result</code></li></ol><dl><dt>Section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>Title</dt><dd>Identify the parameter variable for a function</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-18</dd><dt>section</dt><dd>5.2 Implementing and Testing Functions</dd><dt>id</dt><dd>testbank-py-2-ch05-18</dd></dl></li><li>Given the following code snippet, what is considered a
parameter variable(s)?<pre>
def mystery(num1, num2) :
   result = num1 ** num2
   return result
mystery(10, 2)
</pre><ol class="multiple-choice"><li><code>10, 2</code></li><li class="correct"><code>num1, num2</code></li><li><code>result</code></li><li><code>mystery</code></li></ol><dl><dt>Section</dt><dd>5.3 Parameter Passing</dd><dt>Title</dt><dd>Identify the parameter variable(s) in the given code snippet</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.3 Parameter Passing</dd><dt>id</dt><dd>testbank-py-1-ch05-24</dd></dl></li><li>Given the following code snippet, what is considered an
argument(s)?<pre>
def mystery(num1, num2) :
   result = num1 ** num2
   return result
mystery(10, 2)
</pre><ol class="multiple-choice"><li class="correct"><code>10, 2</code></li><li><code>num1, num2</code></li><li><code>result</code></li><li><code>mystery</code></li></ol><dl><dt>Section</dt><dd>5.3 Parameter Passing</dd><dt>Title</dt><dd>Identify the argument(s) in the given code snippet</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.3 Parameter Passing</dd><dt>id</dt><dd>testbank-py-1-ch05-25</dd></dl></li><li>Parameter variables should not be changed within the body of a
function because<ol class="multiple-choice"><li>This will generate a compiler error</li><li>This will generate a run-time error</li><li class="correct">It is confusing because it mixes the concept of a parameter
with that of a variable</li><li>It is confusing because parameter variables cannot store
values</li></ol><dl><dt>Section</dt><dd>5.3 Parameter Passing</dd><dt>Title</dt><dd>Why shouldnt parameter variables be changed within the body of a method?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.3 Parameter Passing</dd><dt>id</dt><dd>testbank-py-1-ch05-26</dd></dl></li><li>Consider the following program:
<pre>
def squareArea(sideLength) :
   return sideLength ** 2

a = squareArea(4)
</pre>
What are the arguments (actual parameters) in this program?
<ol class="multiple-choice"><li>2</li><li class="correct">4</li><li>sideLength</li><li>squareArea</li></ol><dl><dt>Section</dt><dd>5.3 Parameter Passing</dd><dt>Title</dt><dd>Identify the arguments in a program</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.3 Parameter Passing</dd><dt>id</dt><dd>testbank-py-1-ch05-27</dd></dl></li><li>Consider the following program:
<pre>
def main() :
   a = 5
   print(doubleIt(a))

def doubleIt(x) :
   return x * 2

main()
</pre>
What output is generated when this program is run?
<ol class="multiple-choice"><li>2</li><li>4</li><li>5</li><li class="correct">10</li></ol><dl><dt>Section</dt><dd>5.3 Parameter Passing</dd><dt>Title</dt><dd>Trace a main program and function call</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.3 Parameter Passing</dd><dt>id</dt><dd>testbank-py-1-ch05-28</dd></dl></li><li>Consider the following program:
<pre>
def main() :
   a = 10
   print(doTwice(a))

def doTwice(x) :
   x = x * 2
   x = x * 2
   return x

main()
</pre>
What output is generated when this program is run?
<ol class="multiple-choice"><li>2</li><li>10</li><li>20</li><li class="correct">40</li></ol><dl><dt>Section</dt><dd>5.3 Parameter Passing</dd><dt>Title</dt><dd>Trace a main program and function call</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.3 Parameter Passing</dd><dt>id</dt><dd>testbank-py-1-ch05-29</dd></dl></li><li>Consider the following program:
<pre>
def main() :
   a = 2
   doubleIt(a)
   print(a)

def doubleIt(x) :
   x = x * 2

main()
</pre>
What output is generated when this program is run?
<ol class="multiple-choice"><li class="correct">2</li><li>4</li><li>8</li><li>Python reports an error because doubleIt does not contain a
return statement</li></ol><dl><dt>Section</dt><dd>5.3 Parameter Passing</dd><dt>Title</dt><dd>Trace a main program and function call</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.3 Parameter Passing</dd><dt>id</dt><dd>testbank-py-1-ch05-30</dd></dl></li><li>What happens in this code snippet if <code>sideLength =
-10</code>?<pre>
def cubeSurfaceArea(sideLength) :
   if sideLength &gt;= 0 :
      return 6 * (sideLength * sideLength)
# There are six sides to a cube; surface area of each side is sideLength squared
</pre><ol class="multiple-choice"><li>the function returns <code>600</code></li><li>the function returns <code>-600</code></li><li>an error occurs and aborts the program</li><li class="correct">a special value of <code>None</code> will be returned from the
function</li></ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>What is wrong with the following code snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-1-ch05-33</dd></dl></li><li>What is the purpose of this code snippet?<pre>
def mystery(n) :
   if n % 2 == 0  :
      return True
   else :
      return False
</pre><ol class="multiple-choice"><li class="correct">to determine if <code>n</code> is even or odd</li><li>to find the remainder of <code>n</code> divided by 2</li><li>to find the value of <code>n</code> divided by 2</li><li>to determine if <code>n</code> is positive or negative</li></ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>What is the purpose of this code snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-1-ch05-35</dd></dl></li><li>When should a computation be turned into a function?<ol class="multiple-choice"><li>when it may not be used</li><li>when it is only used once</li><li class="correct">when it may be used more than once</li><li>only if it contains complex mathematically equations</li></ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>When should a computation be turned into a function?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-1-ch05-36</dd></dl></li><li>The following program is supposed to display a message
indicating if the integer entered by the user is even or odd. What
is wrong with the program?
<pre>
num = int(input(&quot;Enter an integer: &quot;))
print(&quot;The integer is&quot;, evenOdd(num))

def evenOdd(n) :
   if n % 2 == 0 :
      return &quot;even&quot;
   return &quot;odd&quot;
</pre><ol class="multiple-choice"><li class="correct">The function definition must appear before the function is
called.</li><li>The input and print statements must reside in a function named
<code>main</code>.</li><li>The variable <code>num</code> and the parameter variable
<code>n</code> must have the same name.</li><li>An <code>else</code> clause must be added to the if
statement.</li></ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>What is wrong with this program for determining if an integer is even or odd?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-1-ch05-37</dd></dl></li><li>The following function is supposed to return -1 when
<code>x</code> is negative, +1 when <code>x</code> is positive, or
0 if <code>x</code> is zero. What, if anything, is wrong with the
function?
<pre>
def plusMinusZero(x) :
   if x == 0 :
      return 0
   elif x &lt;= 0 :
      return -1
   else x &gt;= 0 :
      return 1
</pre><ol class="multiple-choice"><li>A return statement must be added at the end of the
function</li><li>Both occurrences of <code>elif</code> must be replaced with
<code>if</code></li><li>The <code>&lt;=</code> and <code>&gt;=</code> must be replaced
with <code>&lt;</code> and <code>&gt;</code></li><li class="correct">Nothing is wrong with the function</li></ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>What is wrong with the function?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-1-ch05-38</dd></dl></li><li>What is wrong with the following function for computing the
amount of tax due on a purchase?
<pre>
def taxDue(amount, taxRate) :
   amount = amount * taxRate

def main() :
   . . .
   total = taxDue(subtotal, TAX_RATE)
   . . .
</pre><ol class="multiple-choice"><li>The amount of tax due is not computed correctly</li><li>The function must print a value</li><li class="correct">The function must return a value</li><li>The function must take an additional parameter</li></ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>What is wrong with the function?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-1-ch05-39</dd></dl></li><li>For a program that reads city names repeatedly from the user
and calculates the distance from a company's headquarters, which of
the following would be a good design based on stepwise
refinement?<ol class="multiple-choice"><li>Write on function that calculates distance randomly</li><li>Write one function that reads city name</li><li class="correct">Write one function that reads city name and another function
that calculates distance</li><li>Write one function that reads distance and finds city name</li></ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>For a program that reads city names repeatedly from the user and calculates the distance from a company's headquarters, which of the following would be a good design based on stepwise refinement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-1-ch05-65</dd></dl></li><li>Which statement causes the following function to exit immediately?
<pre>
def mystery(num1, num2) :
   result = num1 ** num2
   return result
mystery(10, 2)
</pre><ol class="multiple-choice">
<li><code>mystery(10,2)</code></li>
<li><code>result = num1 ** num2</code></li>
<li class="correct"><code>return result</code></li>
<li>None of the statements cause the function to exit immediately.</li>
</ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>Which statement causes the function to exit immediately?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-31</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-2-ch05-31</dd></dl></li><li>Which statement should be added or modified to remove the possibility of a run-time error in this code snippet?
<pre>
1: def floorDivision(value1, value2) :
2:    return value1 // value2
</pre><ol class="multiple-choice"><li>in line 2: change <code>//</code> to <code>/</code></li><li>in line 2: change <code>//</code> to <code>%</code></li><li class="correct">add this statement after line 1: <code>if value2 == 0 : return
0</code></li><li>add this statement after line 1: <code>if value2 == 0 :
return</code></li></ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>Which statement should be added or modified to remove the run-time error in a code snippet?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-32</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-2-ch05-32</dd></dl></li><li>How many return statements can be included in a function?<ol class="multiple-choice">
    <li>Exactly one</li>
    <li>One or two</li>
    <li>One, two or more</li>
    <li class="correct">Zero or more</li>
</ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>How many return statements can be included in a function?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-34</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-2-ch05-34</dd></dl></li><li>Given the following code, what is the output?
<pre>
def main() :
   i = 20
   b = mysteriousFunction2(i)
   print(b + i)

def mysteriousFunction1(i) :
   n = 0
   while n * n &lt;= i :
      n += 1
   return n - 1

def mysteriousFunction2(a) :
   b = 0
   for n in range(a) :
      i = mysteriousFunction1(n)
      b = b + i
   return b

main()
</pre><ol class="multiple-choice"><li>50</li><li>60</li><li class="correct">70</li><li>80</li></ol><dl><dt>Section</dt><dd>5.4 Return Values</dd><dt>Title</dt><dd>What is output by a code segment where one function calls another function?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-64</dd><dt>section</dt><dd>5.4 Return Values</dd><dt>id</dt><dd>testbank-py-2-ch05-64</dd></dl></li><li>The purpose of a function that does not return a value is<ol class="multiple-choice"><li class="correct">to package a repeated task as a function even though the task
does not yield a value</li><li>to insert a temporary implementation of a function that can be
refined later</li><li>to provide a function that can only be included in an
assignment statement</li><li>only used when the function needs to produce output</li></ol><dl><dt>Section</dt><dd>5.5 Functions Without Return Values</dd><dt>Title</dt><dd>What is the purpose of methods without a return value?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.5 Functions Without Return Values</dd><dt>id</dt><dd>testbank-py-1-ch05-40</dd></dl></li><li>Consider the following functions:
<pre>
def printIt(x) :
   print(x)

def incrementIt(x) :
   return x + 1

def decrementIt(x) :
   return x - 1

def doubleIt(x) :
   return x * 2
</pre>
Which of the following function calls is <strong>not</strong> a
reasonable thing to do?
<ol class="multiple-choice"><li class="correct">print(printIt(5))</li><li>print(incrementIt(5))</li><li>print(decrementIt(5))</li><li>print(doubleIt(5))</li></ol><dl><dt>Section</dt><dd>5.5 Functions Without Return Values</dd><dt>Title</dt><dd>Which of the following function calls is unreasonable?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.5 Functions Without Return Values</dd><dt>id</dt><dd>testbank-py-1-ch05-42</dd></dl></li><li>The following function is supposed to compute and display the
value of n-factorial for integers greater than 0.
<pre>
def factorial(n) :
   result = 1
   for i in range(1, n + 1) :
     result = result * i
</pre>
What is wrong with this function?
<ol class="multiple-choice"><li>The indenting is wrong. All of the lines should be indented by
the same amount.</li><li>The calculation is wrong. The <code>result</code> variable will
have something other than n-factorial stored in it.</li><li class="correct">The function is missing a line. A <code>print</code> statement
must be added at the end of it.</li><li>The function is missing a line. A <code>return</code> statement
must be added at the end of it.</li></ol><dl><dt>Section</dt><dd>5.5 Functions Without Return Values</dd><dt>Title</dt><dd>What is wrong with the function that is supposed to compute n-factorial?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.5 Functions Without Return Values</dd><dt>id</dt><dd>testbank-py-1-ch05-43</dd></dl></li><li>Which function call correctly invokes the partial drawShape
function listed below and prints a star triangle?<pre>
def drawShape(type) :
   length = len(type)
   if length == 0 :
      return
   if type == &quot;triangle&quot; :
      print(&quot;  *&quot;)
      print(&quot; ***&quot;)
      print(&quot;*****&quot;)
drawShape(&quot;triangle&quot;)
</pre><ol class="multiple-choice">
<li><code>drawShape(triangle)</code></li>
<li class="correct"><code>drawShape(&quot;triangle&quot;)</code></li>
<li><code>drawShape</code></li>
<li><code>value = drawShape(triangle)</code></li></ol><dl><dt>Section</dt><dd>5.5 Functions Without Return Values</dd><dt>Title</dt><dd>Which call correctly invokes a function?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-41</dd><dt>section</dt><dd>5.5 Functions Without Return Values</dd><dt>id</dt><dd>testbank-py-2-ch05-41</dd></dl></li><li>
  Consider the following code segment:

  <pre>
  def f1():
    print(&quot;A&quot;, end=&quot;&quot;)

  def f2():
    f1()
    print(&quot;B&quot;, end=&quot;&quot;)
  </pre>

  What output is generated when it runs?

  <ol class="multiple-choice">
    <li><code>A</code></li>
    <li><code>AB</code></li>
    <li><code>B</code></li>
    <li class="correct">The code segment does not display any output.</li>
  </ol>
<dl><dt>Section</dt><dd>5.5 Functions Without Return Values</dd><dt>Title</dt><dd>What is output by the code segment involving functions?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.5 Functions Without Return Values</dd><dt>id</dt><dd>testbank-py-2-ch05-83</dd></dl></li><li>
  Consider the following code segment:

  <pre>
def f1():
  print(&quot;a&quot;, end=&quot;&quot;)
  return &quot;b&quot;

def f2():
  print(&quot;c&quot;, end=&quot;&quot;)
  d = f1()
  print(d, end=&quot;&quot;)
  print(&quot;e&quot;, end=&quot;&quot;)

def f3():
  print(&quot;f&quot;, end=&quot;&quot;)
  f2()
  print(&quot;g&quot;, end=&quot;&quot;)

f3()
  </pre>

  What output is generated when it runs?

  <ol class="multiple-choice">
    <li><code>fg</code></li>
    <li><code>fceg</code></li>
    <li class="correct"><code>fcabeg</code></li>
    <li><code>fcadeg</code></li>
  </ol>
<dl><dt>Section</dt><dd>5.5 Functions Without Return Values</dd><dt>Title</dt><dd>What is output by the code segment involving multiple functions?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.5 Functions Without Return Values</dd><dt>id</dt><dd>testbank-py-2-ch05-84</dd></dl></li><li>The function below randomly generates a number between 1 and 6
to represent a single die. Which implementation listed below allows
for other types of die?<pre>
def die() :
   return randint(1, 6)
</pre><ol class="multiple-choice"><li><pre>
def die(low, high) : 
   return
</pre></li><li class="correct"><pre>
def die(low, high) :   
   return randint(low, high)
</pre></li><li><pre>
def die(high) :
   return randint(0, high)
</pre></li><li><pre>
def die(low, high) :
   return high % low
</pre></li></ol><dl><dt>Section</dt><dd>5.6 Problem Solving: Reusable Functions</dd><dt>Title</dt><dd>Which implementation makes the die function reusable for other types of die?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.6 Problem Solving: Reusable Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-44</dd></dl></li><li>Given these two separate functions, which implemenation
combines them into one reusable function?<pre>
def sixSidedDie() :
   return randint(1, 6)
def fourSidedDie() :
   return randint(1, 4)

   
</pre><ol class="multiple-choice"><li><pre>
def die(low, high) :
   return 
            
</pre></li><li><pre>
def die(low, high) :
   return high % low
</pre></li><li><pre>
def die(high) :
   return randint(0, high)
</pre></li><li class="correct"><pre>
def die(low, high) :
   return randint(low, high)
</pre></li></ol><dl><dt>Section</dt><dd>5.6 Problem Solving: Reusable Functions</dd><dt>Title</dt><dd>Given these two separate functions, which implemenation combines them into one reusable function?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.6 Problem Solving: Reusable Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-45</dd></dl></li><li><p>A programmer notices that the following code snippet uses the
same algorithm for computing interest earned, but with different
variables, in the two places shown below and in several other
places in the program. What could be done to improve the
program?</p><pre>
RATE1 = 10
RATE2 = 5.5
interest = investment * RATE1 / 100
. . . 
balance = balance + balance * RATE2 / 100 
</pre><ol class="multiple-choice">
          <li>Declare the rates as variables, not constants.</li>
          <li>Define a function that looks up interest rates.</li>
          <li>Define a function that prompts the user for an amount and a
rate of interest, then returns the interest earned.</li>
          <li class="correct">Define a function that computes the interest earned from an
amount and a rate of interest.</li>
        </ol><dl><dt>Section</dt><dd>5.6 Problem Solving: Reusable Functions</dd><dt>Title</dt><dd>What could be done to improve (program that does same calculation with different values)?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.6 Problem Solving: Reusable Functions</dd><dt>id</dt><dd>testbank-py-1-ch05-62</dd></dl></li><li>What is wrong with the following code?
<pre>
def grade(score) :
   if score &gt;= 90 :
      return &quot;A&quot;
   elif score &gt;= 80 :
      return &quot;B&quot;
   elif score &gt;= 70 :
      return &quot;C&quot;  
   elif score &gt;= 60 :
      return &quot;D&quot;
</pre><ol class="multiple-choice">
<li>The name of the parameter variable is illegal</li>
<li>The type of the parameter variable is invalid</li>
<li class="correct">Another <code>return</code> statement needs to be added to the function</li>
<li>One of the existing <code>return</code> statements is not correct</li></ol><dl><dt>Section</dt><dd>5.6 Problem Solving: Reusable Functions</dd><dt>Title</dt><dd>What is wrong with a function that includes multiple return statements?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-63</dd><dt>section</dt><dd>5.6 Problem Solving: Reusable Functions</dd><dt>id</dt><dd>testbank-py-2-ch05-63</dd></dl></li><li><p>A stub function is</p><ol class="multiple-choice">
          <li>A short function</li>
          <li>A function that has been unit tested</li>
          <li class="correct">A function that acts as a placeholder and returns a simple
value so another function can be tested</li>
          <li>A function that is broken down into smaller steps through
stepwise refinement</li>
        </ol><dl><dt>Section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>Title</dt><dd>What is a stub method?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>id</dt><dd>testbank-py-1-ch05-49</dd></dl></li><li>Consider the following function:
<pre>
def numberToGrade(x) :
   return &quot;X&quot;
</pre>
This function will eventually be rewritten so that it returns the
letter grade associated with <code>x</code> grade points. However,
at the moment it is incomplete, and always returns the letter
<code>X</code> as a placeholder. In its current form, this function
is referred to as a:
<ol class="multiple-choice"><li>def</li><li>param</li><li>refinement</li><li class="correct">stub</li></ol><dl><dt>Section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>Title</dt><dd>Classify the nature of a function</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>id</dt><dd>testbank-py-1-ch05-50</dd></dl></li><li>For a program that reads three letter grades and calculates an
average of those grades, which of the following would be a good
design based on stepwise refinement?<ol class="multiple-choice"><li>Write one function that reads three letter grades, converts
each letter grade to a number, and calculates the average of the
three numbers.</li><li>Write one function that reads three letter grades, and a second
function to convert each letter to a number and calculate the
average of the three numbers.</li><li class="correct">Write one function that reads a letter grade and returns the
number equivalent, and one function that computes the average of
three numbers.</li><li>Stepwise refinement cannot be applied to this problem.</li></ol><dl><dt>Section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>Title</dt><dd>For a program that reads three letter grades and calculates an average of those grades, which of the following would be a good design based on stepwise refinement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>id</dt><dd>testbank-py-1-ch05-66</dd></dl></li><li>What is stepwise refinement?
<ol class="multiple-choice"><li>The process of unit testing</li><li>The design of pseudocode for black-box functions</li><li class="correct">The process of breaking complex problems down into smaller,
manageable steps</li><li>The use of a temporary implementation of a function that can be
improved later</li></ol><dl><dt>Section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>Title</dt><dd>What is stepwise refinement?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-46</dd><dt>section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>id</dt><dd>testbank-py-2-ch05-46</dd></dl></li><li><p>Why is hand-tracing or manually walking through the execution
of a function helpful?</p><ol class="multiple-choice">
          <li>It enforces the &quot;black-box&quot; concept of function
design</li>
          <li>It makes unit testing unnecessary</li>
          <li>It guarantees that the function will compile without
errors</li>
          <li class="correct">It is an effective way to understand a function's subtle
aspects</li>
        </ol><dl><dt>Section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>Title</dt><dd>Why is hand-tracing or manually walking through the execution of a function helpful?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-47</dd><dt>section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>id</dt><dd>testbank-py-2-ch05-47</dd></dl></li><li><p>When hand-tracing functions, the values for the parameter
variables:</p><ol class="multiple-choice">
          <li>Need not be traced because they are never returned</li>
          <li>Are the same each time the function is invoked</li>
          <li>May be undetermined or missing when the function executes</li>
          <li class="correct">Are determined by the arguments supplied in the code that
invokes the function</li>
        </ol><dl><dt>Section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>Title</dt><dd>What is true about the values for parameter variables when hand-tracing functions?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-48</dd><dt>section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>id</dt><dd>testbank-py-2-ch05-48</dd></dl></li><li><p>Which of the following is NOT a good practice when developing a
computer program?</p><ol class="multiple-choice">
          <li class="correct">Put as many statements as possible into the main function</li>
          <li>Document the purpose of each function parameter</li>
          <li>Decompose a program into many small functions</li>
          <li>Place code that is used multiple times into a separate
function</li>
        </ol><dl><dt>Section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>Title</dt><dd>Which is NOT a good practice when developing a computer program?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-57</dd><dt>section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>id</dt><dd>testbank-py-2-ch05-57</dd></dl></li><li>
  The tool that allows you to follow the execution of a program and helps you locate errors is known as a(n):

  <ol class="multiple-choice">
    <li>Compiler</li>
    <li class="correct">Debugger</li>
    <li>Interpreter</li>
    <li>Virtual machine</li>
  </ol>
<dl><dt>Section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>Title</dt><dd>The tool that allows you to follow the execution of a program and helps you locate errors is known as a(n):</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>id</dt><dd>testbank-py-2-ch05-78</dd></dl></li><li>
  The location where the debugger stops executing your program so that you can inspect the values of variables is called a(n):

  <ol class="multiple-choice">
    <li class="correct">breakpoint</li>
    <li>function call</li>
    <li>inspection point</li>
    <li>step point</li>
  </ol>
<dl><dt>Section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>Title</dt><dd>The location where the debugger stops executing your program so that you can inspect the values of variables is called a(n):</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>id</dt><dd>testbank-py-2-ch05-79</dd></dl></li><li>
  Which debugging command allows you to quickly run an entire function instead of examining its body a line at a time?

  <ol class="multiple-choice">
    <li>Step into</li>
    <li class="correct">Step over</li>
    <li>Step point</li>
    <li>Step quickly</li>
  </ol>
<dl><dt>Section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>Title</dt><dd>Which debugging command allows you to quickly run an entire function instead of examining its body a line at a time?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.7 Problem Solving: Stepwise Refinement</dd><dt>id</dt><dd>testbank-py-2-ch05-80</dd></dl></li><li><p>Given the following code snippet, which statement correctly
allows the function to update the global variable
<code>total</code>?</p><pre>
1. total = 0
2. def main() :
3.    avg = 0
4.    for i in range(6) :
5.       iSquared = i * i
6.       total = total + iSquared
7.    avg = total / i
8.    print(total)
9.    print(avg)
</pre><ol class="multiple-choice">
          <li>add the keyword <code>global</code> to line 1</li>
          <li>line 1 already allows the <code>total</code> variable to be
updated</li>
          <li>move line 1 inside the function definition</li>
          <li class="correct">add the statement <code>global total</code> after line 2</li>
        </ol><dl><dt>Section</dt><dd>5.8 Variable Scope</dd><dt>Title</dt><dd>How can global variables be updated in a function definition?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.8 Variable Scope</dd><dt>id</dt><dd>testbank-py-1-ch05-53</dd></dl></li><li><p>What is the output from the following Python program?</p><pre>
def myFun(perfect) :
   perfect = 0
   return ((perfect - 1) * (perfect - 1))

def main() :
   for i in range(4) :
       print(myFun(i), end = &quot; &quot;)
          
main()
          
</pre><ol class="multiple-choice">
          <li class="correct">
            <code>1 1 1 1</code>
          </li>
          <li>
            <code>-1 0 1 4</code>
          </li>
          <li>
            <code>0 0 0 0</code>
          </li>
          <li>
            <code>1 0 1 4</code>
          </li>
        </ol><dl><dt>Section</dt><dd>5.8 Variable Scope</dd><dt>Title</dt><dd>What is the output from the code snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.8 Variable Scope</dd><dt>id</dt><dd>testbank-py-1-ch05-54</dd></dl></li><li><p>Which of the following statements about variables is true?</p><ol class="multiple-choice">
          <li>A variable is visible from the point at which it is defined
until the end of the program.</li>
          <li>You should use global variables whenever possible..</li>
          <li>The same name can be used for two different variables in a
single method.</li>
          <li class="correct">The same variable name can be used in two different
methods.</li>
        </ol><dl><dt>Section</dt><dd>5.8 Variable Scope</dd><dt>Title</dt><dd>Which statement about variables is true?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.8 Variable Scope</dd><dt>id</dt><dd>testbank-py-1-ch05-58</dd></dl></li><li>In the code snippet below, which variables are considered
global variables:<pre>
a = 0
b = 5
def main() :
   global a, b
   fun1()
   fun2()

def fun1() :
   i = 0
   b = 0

def fun2() :
   a = b + 1

main() 
</pre><ol class="multiple-choice"><li><code>a, b, i</code></li><li><code>fun1, fun2</code></li><li class="correct"><code>a, b</code></li><li><code>i</code></li></ol><dl><dt>Section</dt><dd>5.8 Variable Scope</dd><dt>Title</dt><dd>In the given code snippet, identify the global variables</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.8 Variable Scope</dd><dt>id</dt><dd>testbank-py-1-ch05-73</dd></dl></li><li><p>The variable name <code>perfect</code> in the function <code>myFun</code> in
the code snippet below is used as both a parameter variable and a
variable in the body of the function.  Which statement about
this situation is true?</p><pre>
def myFun(perfect)
   perfect = 0
   return ((perfect - 1) * (perfect - 1))
</pre><ol class="multiple-choice">
          <li>This multiple use of the same variable <code>perfect</code>
will not compile because the scopes overlap</li>
          <li class="correct">While this is legal and will compile in Python, it is
confusing</li>
          <li>Because the scopes of these variables do not overlap, there is
no problem</li>
          <li>This situation rarely occurs and the compiler always issues a
warning</li>
        </ol><dl><dt>Section</dt><dd>5.8 Variable Scope</dd><dt>Title</dt><dd>Which statement about variable declarations within functions is true?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-51</dd><dt>section</dt><dd>5.8 Variable Scope</dd><dt>id</dt><dd>testbank-py-2-ch05-51</dd></dl></li><li><p>Consider the following code segment:
</p><pre>
def main() :
   avg = 0
   total = 0
   for i in range(6) :
      iSquared = i * i
      total = total + iSquared
      avg = total / i
   print(total)
   print(avg)
</pre>

Which of the following answers lists all of the local variables in this
code segment?

<ol class="multiple-choice">
          <li class="correct">
            <code>avg, total, i, iSquared</code>
          </li>
          <li>
            <code>i, iSquared</code>
          </li>
          <li>
            <code>avg, total</code>
          </li>
          <li>
            <code>i</code>
          </li>
        </ol><dl><dt>Section</dt><dd>5.8 Variable Scope</dd><dt>Title</dt><dd>Which variables are considered local variables?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-52</dd><dt>section</dt><dd>5.8 Variable Scope</dd><dt>id</dt><dd>testbank-py-2-ch05-52</dd></dl></li><li><p>What is the output from the following Python program?</p><pre>
def main() :
   a = 10
   r = cubeVolume()
   print(r)

def cubeVolume() :
   return a ** 3

main()
</pre><ol class="multiple-choice">
          <li>
            <code>10</code>
          </li>
          <li>
            <code>30</code>
          </li>
          <li>
            <code>1000</code>
          </li>
          <li class="correct">Nothing, there is an error.</li>
        </ol><dl><dt>Section</dt><dd>5.8 Variable Scope</dd><dt>Title</dt><dd>What is the output from a code snippet involving multiple functions?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-55</dd><dt>section</dt><dd>5.8 Variable Scope</dd><dt>id</dt><dd>testbank-py-2-ch05-55</dd></dl></li><li>
  What term is used to describe the portion of a program in which a variable can be accessed?

  <ol class="multiple-choice">
    <li>locale</li>
    <li>region</li>
    <li class="correct">scope</li>
    <li>volume</li>
  </ol>
<dl><dt>Section</dt><dd>5.8 Variable Scope</dd><dt>Title</dt><dd>What term is used to describe the portion of a program in which a variable can be accessed?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.8 Variable Scope</dd><dt>id</dt><dd>testbank-py-2-ch05-85</dd></dl></li><li>What is the output of the following code snippet?
<pre>
def main() :
   print(blackBox(4))

def blackBox(a) :
   if a &lt;= 0 :
      val = 1
   else :
      val = a + blackBox(a - 2)
   return val

main() 
</pre><ol class="multiple-choice"><li>4</li><li>2</li><li>1</li><li class="correct">7</li></ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>What is output of snippet (with recursive function)?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-1-ch05-67</dd></dl></li><li><p>Based on the code snippet, which of the following statements is
correct?</p><pre>
def main() :
   reoccur(1)

def reoccur(a) :
   print(a)
   reoccur(a + 1) 

main() 
</pre><ol class="multiple-choice">
          <li>The code snippet gives a compilation error as the reoccur
function cannot call itself.</li>
          <li class="correct">The code snippet executes and infinitely recurses, displaying
1, 2, 3, 4, and so on.</li>
          <li>The code snippet executes and displays 1.</li>
          <li>The code snippet executes and does not produce any output.</li>
        </ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>What is output of snippet (with recursive function)?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-1-ch05-69</dd></dl></li><li><p>What is the output if the function call is
<code>testMyVal(6)</code> in the following code snippet?</p><pre>
 def testMyVal(a) :
    if a &gt; 0 :
       testMyVal(a - 2)
    print(a, end = &quot; &quot;)       
</pre><ol class="multiple-choice">
          <li class="correct">0 2 4 6</li>
          <li>0 0 0 0</li>
          <li>The code snippet executes and infinitely recurses, displaying
2, 4, 5, and so on.</li>
          <li>6 4 2 0</li>
        </ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>What is output of snippet (with recursive function)?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-1-ch05-70</dd></dl></li><li>Which of the following code snippets returns the factorial of a
given number? (Hint: Factorial of 5 = 5! = 1 * 2 * 3 * 4 * 5 =
120)<ol class="multiple-choice"><li><pre>
def factorial(num) :
   return num * factorial(num - 1)
</pre></li><li><pre>
def factorial(num) :
   if(num == 1) : 
      return 1
   else :
      return num * factorial(num)
</pre></li><li><pre>
def factorial(num) :
   if(num == 1) : 
      return 1
   else :
      print(num * factorial(num - 1))
</pre></li><li class="correct"><pre>
def factorial(num) :
   if(num == 1) : 
      return 1
   else :
      return num * factorial(num - 1)
</pre></li></ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>Which snippet calculates the factorial of a given number?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-1-ch05-71</dd></dl></li><li>Consider this recursive function:<pre>
def mystery(x) :
   if x &lt;= 0 : 
      return 0
   else :
      return x + mystery(x - 1)
</pre>
What is mystery(5)?<ol class="multiple-choice"><li class="correct">15</li><li>10</li><li>0</li><li>4</li></ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>What is output of snippet (with recursive function)?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-1-ch05-72</dd></dl></li><li>Consider the following program:
<pre>
def main() :
   print(factorial(n))         # Line 1

def factorial(n) :             # Line 2
   result = 1
   for i in range(1, n + 1) :
      result = result * i      # Line 3
   return i

main()
</pre>
Which of the following lines is a recursive function call?
<ol class="multiple-choice"><li>Line 1</li><li>Line 2</li><li>Line 3</li><li class="correct">There are no recursive function calls in the program</li></ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>Which line contains a recursive function call?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-1-ch05-74</dd></dl></li><li>Consider the following program:
<pre>
def main() :
   print(factorial(n))            # Line 1

def factorial(n) :                # Line 2
   if n &lt;= 1 :
      return 1
   return n * factorial(n - 1)    # Line 3

main()
</pre>
What line is the recursive call on?<ol class="multiple-choice"><li>Line 1</li><li>Line 2</li><li class="correct">Line 3</li><li>There are no recursive function calls in the program</li></ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>Which line contains a recursive function call?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-1-ch05-75</dd></dl></li><li>What output is generated when the following program runs?
<pre>
def main() :
   x = mystery(5)
   print(x)

def mystery(n) :
   if n == 1 :
      return 1
   return 2 * mystery(n - 1)

main()
</pre><ol class="multiple-choice"><li>4</li><li>8</li><li class="correct">16</li><li>32</li></ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>Trace a recursive function</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-1-ch05-76</dd></dl></li><li>What output is generated when the following program runs?
<pre>
def main() :
   x = mystery(9, 12)
   print(x)

def mystery(a, b) :
   if b == 0 :
      return a
   else :
      return mystery(b, a % b)

main()
</pre><ol class="multiple-choice"><li class="correct">3</li><li>6</li><li>9</li><li>12</li></ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>Trace a recursive function</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-1-ch05-77</dd></dl></li><li><p>Which line of code in the Python program below is the recursive
invocation of function <code>myFun?</code></p><pre>
1: def main() :
2:    for i in range(4) :
3:       print(myFun(i), end = &quot; &quot;)
4: def myFun(perfect) :
5:    perfect = 0
6:    return ((perfect - 1) * (perfect - 1))
7: main() 
</pre><ol class="multiple-choice">
          <li>
            Line 1
          </li>
          <li>
            Line 3
          </li>
          <li>
            Line 6
          </li>
          <li class="correct">There is no recursive
           invocation in this code segment</li>
        </ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>Which line of code is the recursive invocation?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-56</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-2-ch05-56</dd></dl></li><li>What is the output of the following code snippet?
<pre>
def main() :
   print(&quot;fun(2) =&quot;, fun(2))

def fun(a) :
   returnValue = 0
   if a &gt; 5 :
      returnValue = a
   else :
      returnValue = fun(2 * a)
   return returnValue

main() 
</pre><ol class="multiple-choice"><li><code>fun(2) = 4</code></li><li class="correct"><code>fun(2) = 8</code></li><li><code>fun(2) = 16</code></li><li><code>fun(2) = 32</code></li></ol><dl><dt>Section</dt><dd>5.9 Recursive Functions (Optional)</dd><dt>Title</dt><dd>What is output by a code segment that includes recursion?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch05-68</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-2-ch05-68</dd></dl></li><li>
  What term is used to refer to a collection of functions and classes organized into one or more user-defined modules?

  <ol class="multiple-choice">
    <li>function argument</li>
    <li>hardware toolbox</li>
    <li class="correct">software toolkit</li>
    <li>standard library</li>
  </ol>
<dl><dt>Section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>Title</dt><dd>What term is used to refer to a collection of functions and classes organized into one or more user-defined modules?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-2-ch05-81</dd></dl></li><li>
  Which function should <strong>not</strong> be included in a software toolkit for managing student enrollment in courses?

  <ol class="multiple-choice">
    <li class="correct"><code>computeNegativeImage</code></li>
    <li><code>enrollStudentInCourse</code></li>
    <li><code>getGradePointAverage</code></li>
    <li><code>setFinalExamMark</code></li>
  </ol>
<dl><dt>Section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>Title</dt><dd>Which function should not be included in a software toolkit for managing student enrollment?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>5.9 Graphics: Building an Image Processing Toolkit</dd><dt>id</dt><dd>testbank-py-2-ch05-82</dd></dl></li></ol></body>
    </html>
