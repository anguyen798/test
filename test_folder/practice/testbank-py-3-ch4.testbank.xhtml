<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/><title></title>
    <link href="styles.css" rel="stylesheet" type="text/css"/>
    </head>
    <body><dl></dl><ol><li>How many times will the following loop run?<pre>
i = 0
while i &lt; 10 :
   print(i)
   i = i + 1
    
</pre><ol class="multiple-choice"><li><code>0</code></li><li><code>8</code></li><li><code>9</code></li><li class="correct"><code>10</code></li></ol><dl><dt>Section</dt><dd>4.1 The while loop</dd><dt>Title</dt><dd>How many iterations of while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-02</dd></dl></li><li>How many times does the code snippet given below display &quot;Loop
Execution&quot;?<pre>
i = 1
while i != 10 :
   print(&quot;Loop Execution&quot;)
   i = i + 1
</pre><ol class="multiple-choice"><li>Infinite times</li><li>8 times</li><li class="correct">9 times</li><li>10 times</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>How many iterations of while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-04</dd></dl></li><li>What is the output of the following code snippet?
<pre>
i = 1
while i &lt; 10 :
  print(i, end =  &quot; &quot;)
  i = i + 2
  if i == 5 :
     i = 9
</pre><ol class="multiple-choice"><li>1 3 5</li><li class="correct">1 3 9</li><li>1 3 5 7 9</li><li>1 3 5 9</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What does this while loop print?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-06</dd></dl></li><li>What is the output of the code fragment given below?
<pre>
i = 0
j = 0
while i  &lt; 125 :
   i = i + 2
   j = j + 1
print(j)
</pre><ol class="multiple-choice"><li>0</li><li>62</li><li class="correct">63</li><li>The code fragment displays no output because it does not
compile.</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-09</dd></dl></li><li>What is the output of the following loop?
<pre>
s  = 1
n  = 1
while  s &lt; 10 * n :
   s = s + n
   n = n + 1
print(s)
</pre><ol class="multiple-choice"><li class="correct">211</li><li>210</li><li>120</li><li>123</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is the output of the following while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-10</dd></dl></li><li>What will be the result of running the following code fragment?
<pre>
year = 0
rate = 5
principal = 10000
interest = 0
while year &lt; 10 :
   interest = (principal * year * rate) / 100
   print(&quot;Interest &quot;, interest)
</pre><ol class="multiple-choice"><li>The code fragment will display the interest calculated for nine
years.</li><li class="correct">The code fragment will continue to display the calculated
interest forever because the loop will never end.</li><li>The code fragment will not display the calculated interest and
halt abruptly.</li><li>The code fragment will not display any output because it will
not compile.</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is result of while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-11</dd></dl></li><li>Which of the following code snippets displays the output
exactly 10 times?
<ol class="multiple-choice"><li><pre>
i = 0
while i &lt;= 10 :
   print(&quot;This is example 1.&quot;)
   i = i + 1
</pre></li><li class="correct"><pre>
i = 0
while i &lt; 10 :
   print(&quot;This is example 2.&quot;)
   i = i + 1
</pre></li><li><pre>
i = 0
while i &lt; 10 :
   print(&quot;This is example 3.&quot;)
</pre></li><li><pre>
i = 1
while i &lt; 10 :
   print(&quot;This is example 4.&quot;)
   i = i + 1
</pre></li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>Which while loop executes 10 times?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-12</dd></dl></li><li>What is the output of the following code snippet?
<pre>
i = 1
while i != 9 :
   print(i , end = &quot; &quot;)
   i = i + 1
   if i == 9 :
      print(&quot;End&quot;)
</pre><ol class="multiple-choice"><li>1 End</li><li>1 End (infinite loop)</li><li class="correct">1 2 3 4 5 6 7 8 End</li><li>1 2 3 4 5 6 7 8 End (infinite loop)</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-13</dd></dl></li><li>How many times is the text &quot;Let's have fun with
Python.&quot; printed when this code snippet is run?
<pre>
i = 0
while i &lt;= 10 : 
   print(&quot;Let's have fun with Python.&quot;)
   i = i + 1
   if i % 2 == 0 :
      i = 10
</pre><ol class="multiple-choice"><li>1</li><li>2</li><li class="correct">3</li><li>10</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>How many times does do loop with nested if execute?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-15</dd></dl></li><li>Select the statement that correctly completes the loop in this
code snippet.
<pre>
years = 20
rate = 0.05
balance =  10000
while years  &gt; 0 :
    #  Place code here
   interest = balance * rate / 100
   balance = balance + interest
</pre><ol class="multiple-choice"><li><pre>
years = years + 1 
</pre></li><li class="correct"><pre>
years = years - 1 
</pre></li><li><pre>
balance = balance + 1 
</pre></li><li><pre>
balance = balance - 1 
</pre></li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>Insert appropriate code in while loop</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-16</dd></dl></li><li>Is the following code snippet legal?
<pre>
b = False
while b != b :
   print(&quot;Do you think in Python?&quot;)
</pre><ol class="multiple-choice"><li class="correct">Yes, it is legal but does not print anything.</li><li>Yes, it is legal and prints &quot;Do you think in Python?&quot;
once.</li><li>Yes, it is legal and prints &quot;Do you think in Python?&quot;
twice.</li><li>No, it is not legal and gives a compilation error.</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>While loops with Boolean conditions</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-17</dd></dl></li><li>What is the output of the following code snippet?
<pre>
i = 1
while i  &lt; 20 :
   print(i , &quot; &quot;)
   i = i + 2
   if i == 15 :
      i = 19
</pre><ol class="multiple-choice"><li>1 3 5 7 9 11 13 15 17 19</li><li class="correct">1 3 5 7 9 11 13 19</li><li>1 3 5 7 9 11 13 15 17</li><li>1 3 5 7 9 11 13 17 19</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop with nested if?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-18</dd></dl></li><li>What are the values of i and j after the following code snippet
is run?<pre>
i = 10
j = 20
count = 0
while count &lt; 5 :
   i = i + i
   i = i + 1
   j = j - 1
   j = j - j
   count = count + 1
print(&quot;i = &quot;, i , &quot;, j = &quot;, j)
</pre><ol class="multiple-choice"><li>i = 45, j = 1</li><li class="correct">i = 351, j = 0</li><li>i = 351, j = 2</li><li>i = 1311, j = 35</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What are values of i and j after while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-19</dd></dl></li><li>How many times does the following code fragment display &quot;Hi&quot;?
<pre>
i = 10
while i &gt;= 0 :
  print(&quot;Hi&quot;)
  i = i -  1
</pre><ol class="multiple-choice"><li>9 times</li><li>10 times</li><li class="correct">11 times</li><li>12 times</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>How many times does while loop execute?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-24</dd></dl></li><li>What is the output of the code snippet given below?
<pre>
n = 0
while n * n &lt; 100 :
   print(n * n,  end =  &quot;  &quot;)
   n = n + 1
</pre><ol class="multiple-choice"><li class="correct">0 1 4 9 16 25 36 49 64 81</li><li>0 1 2 3 4 5 6 7 ... 99 100</li><li>0 1 1 2 3 5 8 13 21 34 55 89</li><li>0 0 0 0 0 0 (infinite loop)</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of this while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-26</dd></dl></li><li>What is the output of the code snippet given below?
<pre>
s = &quot;abcde&quot;
length = len(s)
i = 1
while i &lt; length :
   print(s[i])
   i = i + 1
</pre><ol class="multiple-choice"><li>No output</li><li>abcd</li><li>abcde</li><li class="correct">bcde</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is the output of while loop with the slice operator?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-29</dd></dl></li><li>What is the output of the code snippet given below?
<pre>
s = &quot;abcde&quot;
i = 1
while i &lt; 5 :
   if i &gt; 1 :
      print(s[i])
</pre><ol class="multiple-choice"><li>No output</li><li class="correct">No output (infinite loop)</li><li>abcde</li><li>bcde</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop with nested if?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-30</dd></dl></li><li>What is the output of the code snippet given below?
<pre>
s = &quot;12345&quot;
i = 0
while i &lt; 5 :
   print(s[i]) 
   i = i + 1
</pre><ol class="multiple-choice"><li>No output</li><li>1234</li><li class="correct">12345</li><li>2345</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-32</dd></dl></li><li>What is the output of the code snippet given below?
<pre>
s = &quot;12345&quot;
i = 1
while i &lt; 5 :
   if i &gt; 1 :
      print(s[i])
</pre><ol class="multiple-choice"><li>No output</li><li class="correct">No output (infinite loop)</li><li>12345</li><li>2345</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop with nested if?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-33</dd></dl></li><li>How many times does the code snippet below display &quot;Hello&quot;?
<pre>
i = 0
while i != 15 :
   print(&quot;Hello&quot;)
   i = i + 1
</pre><ol class="multiple-choice"><li>Infinite times</li><li>14 times</li><li class="correct">15 times</li><li>16 times</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>How many times does while loop display result?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-34</dd></dl></li><li>How many times does the following loop run?
<pre>
i = 0
j = 1
while j &gt;= 1 :
   print(i , &quot;;&quot; , j)
   i = i + 1
   if i % 3 == 0 :
      j = j -  1
</pre><ol class="multiple-choice"><li>1 time</li><li>2 times</li><li class="correct">3 times</li><li>4 times</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>How many times does this loop with a nested if run?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-36</dd></dl></li><li>What is the output of the following code snippet?
<pre>i = 1
while i &lt;= 10 :
   print(&quot;Inside the while loop&quot;)
   i = i + 10</pre><ol class="multiple-choice"><li>No output because of compilation error.</li><li>&quot;Inside the while loop&quot; will be displayed 10
times.</li><li>No output after successful compilation.</li><li class="correct">&quot;Inside the while loop&quot; will be displayed only
once.</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-38</dd></dl></li><li>How many copies of the letter <code>A</code> are printed by the
following loop?
<pre>
i = 0
while i &lt; 5 :
   print(&quot;A&quot;)
   i = i + 1
</pre><ol class="multiple-choice"><li>0</li><li>4</li><li class="correct">5</li><li>Infinity</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>How many copies of the letter A are printed by the following loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-39</dd></dl></li><li>How many copies of the letter <code>B</code> are printed by the
following loop?
<pre>
i = 0
while i == 5 :
   print(&quot;B&quot;)
   i = i + 1
</pre><ol class="multiple-choice"><li class="correct">0</li><li>4</li><li>5</li><li>Infinity</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>How many copes of the letter B are printed by the following loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-40</dd></dl></li><li>How many copies of the letter <code>C</code> are printed by the
following loop?
<pre>
i = 0
while i &lt; 5 :
   print(&quot;C&quot;)
   i = i - 1
</pre><ol class="multiple-choice"><li>0</li><li>4</li><li>5</li><li class="correct">Infinity</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>How many copies of the letter C are printed by the following loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-41</dd></dl></li><li>What is the value of <code>i</code> at the end of the following
code segment?
<pre>
i = 1
while i &lt; 32 :
   i = i * 2
</pre><ol class="multiple-choice"><li>16</li><li>31</li><li class="correct">32</li><li>64</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is the value of i at the end of this loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-42</dd></dl></li><li>The following while loop should continue to run as long as the
user does <strong>not</strong> enter a negative number. What
condition should be used to achieve this behavior?
<pre>
x = int(input(&quot;Enter an integer: &quot;))
while ____________ :
   x = int(input(&quot;Enter an integer: &quot;))
</pre><ol class="multiple-choice"><li><code>x != 0</code></li><li><code>x == 0</code></li><li><code>x &lt;= 0</code></li><li class="correct"><code>x &gt;= 0</code></li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>Fill in the correct condition for a while loop</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-43</dd></dl></li><li>
What term is used to describe a loop where the number of times that the loop will execute is known before the body of the loop executes for the first time?

  <ol class="multiple-choice">
    <li class="correct">Definite</li>
    <li>Fiscal</li>
    <li>Indefinite</li>
    <li>Infinite</li>
  </ol>
<dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What term is used to describe a loop where the number of times that the loop will execute is known before the body of the loop executes for the first time?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-148</dd></dl></li><li>Which of the following changes will make the following code snippet
  display <code>Let us learn Python</code> exactly 10 times?
<pre>
i = 0
while i &lt;= 10 :
   print(&quot;Let us learn Python&quot;)
   i = i + 1
</pre><ol class="multiple-choice"><li>
Replace <code>while i &lt;= 10</code> with <code>while i &lt; 9 </code>
</li><li>
Replace <code>while i &lt;= 10</code> with <code>while i &lt; 11 </code>
</li><li>
Replace <code>while i &lt;= 10</code> with <code>while i &lt; 12 </code>
</li><li class="correct">
Replace <code>i = 0</code> with <code>i = 1</code>
</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What changes needed so while loop executes 10 times?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-14</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-14</dd></dl></li><li>Which statement corrects the off-by-one error in the following
code:<pre>
# This code prints the first 10 numbers starting with zero
i = 0
while i &lt;= 10 :
   print(i)
   i = i + 1
</pre>
<ol class="multiple-choice">
  <li>Replace <code>i = 0</code> with <code>i = 1</code></li>
  <li class="correct">Replace <code>while i &lt;= 10</code> with <code>while i &lt; 10</code></li>
  <li>Replace <code>i = i + 1</code> with <code>i = i + 2</code></li>
  <li>Replace <code>while i &lt;= 10</code> with <code>while i + 1&lt; 10</code></li>
</ol><dl><dt>Section</dt><dd>4.1 The while loop</dd><dt>Title</dt><dd>How do you fix an off-by-one error?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-01</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-01</dd></dl></li><li>What is the output of the following code fragment?
<pre>
i = 1
sum = 0
while i &lt;= 15 :
   sum = sum + i
   i = i + 1
print(&quot;The value of sum is&quot;, sum)
</pre><ol class="multiple-choice"><li>The value of sum is 0</li><li>The value of sum is 105</li><li class="correct">The value of sum is 120</li><li>The value of sum is 136</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is the output of while loop that sums?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-20</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-20</dd></dl></li><li>What are the values of <code>i</code> and <code>j</code> after
the following code fragment runs?
<pre>
i = 60
j = 50
count = 0
while count &lt; 5 :
  i = i + i
  i = i + 1
  j = j - 1
  j = j - j
  count = count + 1
  print(&quot;i =&quot;,  i, &quot;, j =&quot;, j)
</pre><ol class="multiple-choice">
<li class="correct"><code>
i = 1951, j = 0
</code></li><li><code>
i = 1951, j = 45
</code></li><li><code>
i = 65, j = 1
</code></li><li><code>
i = 65, j = 45
</code></li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What are values of variables after while loop executes?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-21</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-21</dd></dl></li><li>Which type of error could be reported by Python when the program contains an &quot;off-by-one&quot; error?
<ol class="multiple-choice"><li>Syntax error</li><li>Compile-time error</li><li class="correct">Run-time error</li><li>Infinite loop error</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What type of error is an off-by-one error?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-22</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-22</dd></dl></li><li>What is the output of the code snippet given below?
<pre>
i = 0
while i !=  11 :
   print(i, end=&quot; &quot;)
   i = i + 3
</pre><ol class="multiple-choice">
<li>0 3 6 9 12</li>
<li>0 3 6 9 12 15 18</li>
<li>0 1 3 5 7 9</li>
<li class="correct">0 3 6 9 12 ... (infinite loop)</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-23</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-23</dd></dl></li><li>What is the output of the following code fragment?
<pre>
i = 1
sum = 0
while i &lt;= 11 :
   sum = sum + i
   i = i + 1
print(&quot;The value of sum is&quot;, sum)
</pre><ol class="multiple-choice"><li>The value of sum is 65</li><li class="correct">The value of sum is 66</li><li>The value of sum is 55</li><li>The value of sum is 56</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-25</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-25</dd></dl></li><li>What is the last line of output produced by the code snippet below?<pre>
i = 0
total = 0
while total &lt; 0 :
   i = i + 1
   total = total - i
   print(i, total)</pre><ol class="multiple-choice"><li>0 0</li><li>1 1</li><li class="correct">No output</li><li>0 -1</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What does this code snippet produce?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-27</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-27</dd></dl></li><li>How many times does the following loop run?
<pre>
i = 0
j = 1
while j &gt;= 1 :
   print(&quot;&quot; , i , &quot;;&quot; , j)
   i = j + 1
   if i % 2 == 0 :
      j = j - 1
</pre><ol class="multiple-choice">
<li>0 times</li>
<li class="correct">1 time</li>
<li>2 times</li>
<li>4 times</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>How many times does do loop with nested if execute?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-28</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-28</dd></dl></li><li>What is the output of the code snippet given below?
<pre>
s = &quot;abcde&quot;
j = len(s) - 1
while j &gt;= 0 :
   print(s[j])
   j = j -  1
</pre><ol class="multiple-choice"><li>abcd</li><li>bcde</li><li>bcbcd</li><li class="correct">edcba</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of the while loop?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-31</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-31</dd></dl></li><li>What is the output of the code snippet given below?
<pre>
i = 0
while i != 11 :     
   print(&quot; &quot;, i)
   i = i + 2
</pre><ol class="multiple-choice">
<li>No output</li>
<li>0 2 4 6 8</li>
<li>10 12 14 16 18 ... (infinite loop)</li>
<li class="correct">0 2 4 6 8 ... (infinite loop)</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-35</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-35</dd></dl></li><li>What will be the output of the following code snippet?
<pre>
token = False
while token :
   print(&quot;Hello&quot;)
</pre><ol class="multiple-choice"><li>&quot;Hello&quot; will continue to be displayed until the
user stops the program.</li><li>No output because of compilation error.</li><li class="correct">No output after successful compilation.</li><li>&quot;Hello&quot; will be displayed only once.</li></ol><dl><dt>Section</dt><dd>4.1 The while loop</dd><dt>Title</dt><dd>What is output of while loop with Boolean condition?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-37</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-37</dd></dl></li><li>What is the output of the code snippet given below?<pre>
i = 0
while i != 9 :
   print(i, end = &quot; &quot;)
   i = i + 2
</pre><ol class="multiple-choice"><li>No output</li><li>0 2 4 6 8</li><li>10 12 14 16 18 ... (infinite loop)</li><li class="correct">0 2 4 6 8 10 12 14 ... (infinite loop)</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-03</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-03</dd></dl></li><li>What is the output of the code fragment given below?
<pre>
i = 0
j = 0
while i &lt; 27 :
   i = i + 2
   j = j + 1
print(&quot;j =&quot;,  j)
</pre><ol class="multiple-choice"><li><code>j = 27</code></li><li><code>j = 12</code></li><li><code>j = 13</code></li><li class="correct"><code>j = 14</code></li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is output of while loop?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-05</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-05</dd></dl></li><li>The code snippet below is supposed to check whether an integer greater than 1 is a prime
number. What will be the result of executing it?
<pre>
j = 2
result = 0
number = int(input(&quot;Please enter an integer (2 or greater):&quot;))
while j &lt; number :  
   if number % j  == 0 :
      result = 1
   j = j + 1
if result == 1 :
   print(&quot;Number:&quot;, number, &quot;is Not Prime.&quot;)
else :
   print(&quot;Number:&quot;, number, &quot;is Prime.&quot;)
</pre><ol class="multiple-choice"><li>The code snippet contains a compile error.</li><li class="correct">The code snippet displays the desired result.</li><li>The code snippet displays an incorrect result.</li><li>The code snippet causes an infinite loop.</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>Will the while loop with if/else produce desired result?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-07</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-07</dd></dl></li><li>What is the output of the following code snippet?
<pre>
a = 2
n = 16
r = 1
b = a
i = n
while i &gt; 0 :
   if i % 2 == 0 : # n is even
      b = b * b
      i = i / 2
   else :
      r = r * b
      i = i -  1
print(&quot;r =&quot;, r)
</pre><ol class="multiple-choice"><li>r = 16</li><li>r = 128</li><li>r = 4096</li><li class="correct">r = 65536</li></ol><dl><dt>Section</dt><dd>4.1 The while Loop</dd><dt>Title</dt><dd>What is the output of while loop with nested if?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-08</dd><dt>section</dt><dd>4.1 The while Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-08</dd></dl></li><li>What are the final values of the variables <code>i</code>, <code>j</code>, and <code>n</code> at the end of this loop?
<pre>
i = 0
j = 12
n = 0
while i != j :
   i = i + 2
   j = j - 2
   n = n + 1
</pre><ol class="multiple-choice"><li>2 10 1</li><li>4 8 2</li><li class="correct">6 6 3</li><li>0 12 0</li></ol><dl><dt>Section</dt><dd>4.2: Problem Solving: Hand-Tracing</dd><dt>Title</dt><dd>What are final values of three variables in a for loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>id</dt><dd>testbank-py-1-ch04-44</dd></dl></li><li>When hand-tracing the loop in the code snippet below, which
variables are important to evaluate?
<pre>
i  = 10
j  = 5
k  = -10
sum  = 0
while  i &gt; 0 :
   sum = sum + i + j 
   i = i -  1
   print(&quot;Iteration: &quot;, i)
</pre><ol class="multiple-choice"><li>The variables <code>i</code> and <code>j</code></li><li class="correct">The variables <code>i</code> and <code>sum</code></li><li>The variables <code>i, j,</code> and <code>k</code></li><li>The variables <code>j</code> and <code>k</code></li></ol><dl><dt>Section</dt><dd>4.2 Problem solving: hand-tracing</dd><dt>Title</dt><dd>Which variables are important to monitor when hand-tracing a code snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>id</dt><dd>testbank-py-1-ch04-45</dd></dl></li><li>When hand tracing, drawing a line through the value stored in a
variable means that
<ol class="multiple-choice"><li class="correct">The value stored there has changed to something new</li><li>The variable is the wrong data type for the code being
executed</li><li>The expression being evaluated uses that variable</li><li>The variable must be inside a loop</li></ol><dl><dt>Section</dt><dd>4.2 Problem solving: hand-tracing</dd><dt>Title</dt><dd>What does it mean to draw a line through values when hand-tracing?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>id</dt><dd>testbank-py-1-ch04-46</dd></dl></li><li>When hand-tracing a portion of code, which statement about
Boolean conditions is true?
<ol class="multiple-choice"><li>They typically are too complex to be evaluated.</li><li>They do not need to be monitored because their result usually
is not stored in a variable.</li><li>It is rare to encounter a Boolean condition.</li><li class="correct">They are crucial to evaluate since they determine if-statement
conditions and looping.</li></ol><dl><dt>Section</dt><dd>4.2 Problem solving: hand-tracing</dd><dt>Title</dt><dd>Which statement about Boolean conditions is true?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>id</dt><dd>testbank-py-1-ch04-47</dd></dl></li><li>What is the output of this code snippet?
<pre>
s = 1
n = 1
while s  &lt; 3 * n :
   s = s + n
   print(s , end = &quot; &quot;)
   n = n + 1
</pre><ol class="multiple-choice"><li class="correct">2 4 7 11 16 22</li><li>1 3 5 7 9</li><li>2 3 5 6 7</li><li>2 4 6 8</li></ol><dl><dt>Section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>Title</dt><dd>What is output of do-while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>id</dt><dd>testbank-py-1-ch04-48</dd></dl></li><li>What are the values of <code>i</code> and <code>j</code> after the following code snippet
executes?
<pre>
i  = 20
j  = 70
count  = 0
while  count &lt; 5 :
   i = i + i  
   i = i + 1
   j = j - 1
   j = j - j
   count = count + 1
print(i)
print(j)
</pre><ol class="multiple-choice"><li>i = 25, j = 1</li><li>i = 25, j = 65</li><li class="correct">i = 671, j = 0</li><li>i = 671, j = 65</li></ol><dl><dt>Section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>Title</dt><dd>What are values of variables after while loop executes?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>id</dt><dd>testbank-py-1-ch04-49</dd></dl></li><li>The process of hand-tracing code is valuable because
<ol class="multiple-choice"><li>It is usually faster than just running the code.</li><li>It is the best way to design an algorithm.</li><li>You must already have a working program in order to do it.</li><li class="correct">It gives valuable insight that you do not get by running the
code.</li></ol><dl><dt>Section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>Title</dt><dd>Why is hand tracing valuable?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>id</dt><dd>testbank-py-1-ch04-50</dd></dl></li><li>What is the output of the code snippet given below?
<pre>
s = &quot;aeiou&quot;
i = 0
while i &lt; 5 :
   print(s[i], s[i + 1], end = &quot; &quot;)
   i = i + 1
   if i &gt;= 3 :
      i = 5
</pre><ol class="multiple-choice"><li>a</li><li>a e</li><li>a e i o u</li><li class="correct">a e e i i o</li></ol><dl><dt>Section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>Title</dt><dd>What is output of the loop with nested if?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.2 Problem Solving: Hand-Tracing</dd><dt>id</dt><dd>testbank-py-1-ch04-51</dd></dl></li><li>What is the sentinel value in the following code segment?
<pre>
value = 15
x = int(input(&quot;Enter an integer: &quot;))
while x != 0 :
   value = value * 2
   print(value + 3)
   x = int(input(&quot;Enter an integer: &quot;))
</pre><ol class="multiple-choice"><li class="correct">0</li><li>2</li><li>3</li><li>15</li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>What is the sentinel value in the following code segment?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-1-ch04-52</dd></dl></li><li>Of the following options, what should the user enter to cause the following while
loop to terminate?
<pre>
done = False
while not done :
   x = float(input(&quot;Enter a number: &quot;))
   if x &gt; 5.0 :
      print(x)
   elif x &gt; 0.0 :
      done = False
   elif x &lt; -5.0 :
      print(-x)
   else :
      done = True
</pre><ol class="multiple-choice"><li>-7.5</li><li class="correct">-2.5</li><li>2.5</li><li>7.5</li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>What value will cause the while loop to terminate?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-1-ch04-53</dd></dl></li><li>Which of the following statements is correct about a sentinel?
<ol class="multiple-choice"><li>A sentinel is a value that creates a bridge between a data set
and unrelated input.</li><li>A sentinel is a value that is part of the data to be processed
by the program.</li><li>A sentinel is a value that terminates a program.</li><li class="correct">A sentinel is a value that indicates the end of an input
sequence.</li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>Which statement about sentinels is correct?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-1-ch04-55</dd></dl></li><li>What will be the output of the following code snippet?
<pre>
token1 = True
while token1 :
  for i in range(0,10) :
     print(&quot;Hello&quot;)
  token1 = False
</pre><ol class="multiple-choice"><li>No output.</li><li class="correct">Hello will be displayed 10 times.</li><li>Hello will be displayed 9 times.</li><li>Hello will be displayed infinite times.</li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>What is output of while loop with Boolean condition?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-1-ch04-57</dd></dl></li><li>Insert a statement that will correctly terminate this loop when
the end of input is reached.
<pre>
done = False
while done != True :
   x = input(&quot;Enter a value&quot;)
   if x == &quot;Q&quot; : 
      _________________
</pre><ol class="multiple-choice"><li><pre>
stop
</pre></li><li><pre>
done = 1
</pre></li><li><pre>
exit
</pre></li><li class="correct"><pre>
done = True
</pre></li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>Insert code to terminate a loop</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-1-ch04-60</dd></dl></li><li>Which of the following loops executes exactly 10 times?
<ol class="multiple-choice"><li class="correct"><pre>
for i in range(1, 11) :
   i =  1
</pre></li><li><pre>
found = False
while i &lt; 10 and found != True :
   i = i + 1
   if i % 10 == 0 :
      found = True 
</pre></li><li><pre>
i =  0
while i &lt;= 10 : 
   i = i + 1
</pre></li><li><pre>
i = 0
for i in range (1, 10)  :
   print(i) 
</pre></li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>Which of the following loops executes exactly 10 times?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-130</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-2-ch04-130</dd></dl></li><li>When will the loop in the following code snippet stop?
<pre>
sum = 0
count = 1
str = input(&quot;Enter values, Q to quit: &quot;)
while count &lt; 100 and str != &quot;Q&quot; :
   value = float(str)
   sum = sum + value
   count = count + 1
   str = input(&quot;Enter values, Q to quit: &quot;)
</pre><p>I. When the user enters an integer</p><p>II. When the user enters the character Q</p><p>III. After the user enters 100 numbers</p><ol class="multiple-choice"><li>I or II</li><li>II only</li><li>III only</li><li class="correct">II or III</li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>When does do loop with sentinel stop?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-133</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-2-ch04-133</dd></dl></li><li>
The value that denotes the end of an input sequence is known as a:

  <ol class="multiple-choice">
    <li>Sedimentary value</li>
    <li>Sentimental value</li>
    <li class="correct">Sentinel value</li>
    <li>Sequential value</li>
  </ol>
<dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>The value that denotes the end of an input sequence is known as a(n):</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-2-ch04-149</dd></dl></li><li>
  Which of the following command lines starts the python program <code>sum.py</code> so that it will read its input from <code>values.txt</code> instead of the keyboard?

  <ol class="multiple-choice">
    <li class="correct"><code>python sum.py &lt; values.txt</code></li>
    <li><code>python sum.py &gt; values.txt</code></li>
    <li><code>python values.txt &lt; sum.py</code></li>
    <li><code>python values.txt &gt; sum.py</code></li>
  </ol>
<dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>Which command line uses input redirection correctly?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-2-ch04-150</dd></dl></li><li>What happens when the following loop is executed?
<pre>
val1 = True
val2 = False
while val1 :
   if val1 :
      print(&quot;Hello&quot;)
   val1 = val2
</pre><ol class="multiple-choice"><li>No output will be displayed because of a compilation error.</li><li class="correct">&quot;Hello&quot; will be displayed only once.</li><li>&quot;Hello&quot; will be displayed an infinite number of times.</li><li>No output will be displayed even after successful compilation
of the code snippet.</li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>What is output of while loop with nested if and Boolean conditions?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-54</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-2-ch04-54</dd></dl></li><li>Which statement is correct about the execution of the loop in
the following code fragment?
<pre>
num = int(input(&quot;Please enter a number (0 when done): &quot;))
incr = 0
while num != 0 :
   incr = incr + 1
   num = int(input(&quot;Please enter a number (0 when done): &quot;))
print(incr)
</pre><ol class="multiple-choice"><li>The loop will execute only when 0 is entered.</li><li>The execution of the loop is independent of user input.</li><li>The program prints the count of positive inputs.</li><li class="correct">The program prints the count of inputs not equal to zero.</li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>Which statement is true about do loop with user input?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-56</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-2-ch04-56</dd></dl></li><li>What is the sentinel value in the following code snippet?
<pre>
age = 0
sumOfAges = 0
stop = 1
age = int(input(&quot;Enter  an age (-1 to stop):&quot;))
while age != -1 :
   sumOfAges =  sumOfAges + age
   age = input(&quot;Enter an age (-1 to stop):&quot;)
print(&quot;Sum  of ages &quot;, sumOfAges)
</pre><ol class="multiple-choice"><li>0</li><li>1</li><li>2</li><li class="correct">-1</li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>Which is the sentinel in this snippet?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-58</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-2-ch04-58</dd></dl></li><li>What will be the final output of the following code snippet
when a user enters input values in the order 10, 20, 30, 40, 50,
and -1?
<pre>
sum = 0
count = 0 
salary = 0
average = 0
while salary != -1 :
   salary = float(input(&quot;Enter  salaries (-1 to stop): &quot;))
   if  salary != -1 :
      sum = sum + salary
      count = count + 1
if count &gt; 0 :
   average = sum / count
   print(&quot;The average salary:  &quot;, average)
else :
   print(&quot;No data!&quot;)
</pre><ol class="multiple-choice">
<li>The average salary: 0.0</li>
<li class="correct">The average salary: 30.0</li>
<li>The average salary: 24.83333</li>
<li>There will be no output as the code snippet will not
compile.</li></ol><dl><dt>Section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>What is output of snippet with input that includes a sentinel?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-59</dd><dt>section</dt><dd>4.3 Application: Processing Sentinel Values</dd><dt>id</dt><dd>testbank-py-2-ch04-59</dd></dl></li><li>Storyboards are a helpful part of the design process because
the storyboard develops
<ol class="multiple-choice"><li>A pseudocode description of the algorithm being designed</li><li>The mathematical formulas required for computing a correct
answer</li><li class="correct">The information needed to solve the problem, and how to present
that information</li><li>The amount of time and space needed to find a solution</li></ol><dl><dt>Section</dt><dd>4.4 Problem Solving: Storyboards</dd><dt>Title</dt><dd>What is the role of the storyboard?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.4 Problem Solving: Storyboards</dd><dt>id</dt><dd>testbank-py-1-ch04-61</dd></dl></li><li>When designing storyboards, it is a good idea to use different
colors to
<ol class="multiple-choice"><li class="correct">Make it easy to distinguish between user input and program
output.</li><li>Match the colors your program will use when it is finally
designed.</li><li>Emphasize the difference between numbers and words.</li><li>Draw lines to divide up panels into different regions.</li></ol><dl><dt>Section</dt><dd>4.4 Problem Solving: Storyboards</dd><dt>Title</dt><dd>What is the role of colors when designing using storyboards?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.4 Problem Solving: Storyboards</dd><dt>id</dt><dd>testbank-py-1-ch04-62</dd></dl></li><li>Suppose you must design a program to calculate the roll-out
(number of inches traveled in one revolution of the pedals of a
bicycle based on its gear combinations).  The user must
provide the gear sizes, which must be converted into roll-out for
all different gear combinations. How can the flow of user
interaction for this problem be designed?
<ol class="multiple-choice"><li>Hand-tracing can confirm code that implements gear
selection.</li><li>Pseudocode can guide algorithm design through
divide-and-conquer strategy.</li><li class="correct">A storyboard can be used.</li><li>The physical gears can lead to ideas for the correct algorithm
to use.</li></ol><dl><dt>Section</dt><dd>4.4 Problem Solving: Storyboards</dd><dt>Title</dt><dd>How can user interaction be designed for an example problem?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.4 Problem Solving: Storyboards</dd><dt>id</dt><dd>testbank-py-1-ch04-63</dd></dl></li><li>Which statement about storyboards is true?
<ol class="multiple-choice"><li class="correct">A storyboard can help prevent potential user confusion early in
the design process.</li><li>Storyboards are used primarily to understand how implemented
programs work.</li><li>The storyboard helps to train users about how to use
software.</li><li>Storyboards have no relationship to the structure of an actual
working program.</li></ol><dl><dt>Section</dt><dd>4.4 Problem Solving: Storyboards</dd><dt>Title</dt><dd>Which statement about storyboards is true?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.4 Problem Solving: Storyboards</dd><dt>id</dt><dd>testbank-py-1-ch04-64</dd></dl></li><li>What will be printed by the statements below?
<pre>
a = 10
while a  &gt; 5 :
   print(a , end = &quot; &quot;)
   a = a - 2
</pre><ol class="multiple-choice"><li>10 9 8 7 6 5</li><li>10 8 6 4</li><li class="correct">10 8 6</li><li>10 8</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What will be printed by the statements below?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-68</dd></dl></li><li>What will be printed by the statements below?
<pre>
val = 1
sum = 0
while val &lt; 5 :
   sum = sum + val
   val = val + 1
print(sum) 
</pre><ol class="multiple-choice"><li>4</li><li>5</li><li class="correct">10</li><li>15</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What will be printed by the statements below?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-70</dd></dl></li><li>What will be printed by the statements below?
<pre>
val = 1
sum = 0
while val  &lt; 5 :
   sum = 0
   sum = sum + val
   val = val + 1
print(sum) 
</pre><ol class="multiple-choice"><li>15</li><li>10</li><li>5</li><li class="correct">4</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What will be printed by the statements below?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-71</dd></dl></li><li>What will be printed by the statements below?
<pre>
for ctr in range(0, 10) : 
   print(ctr, end = &quot; &quot;) 
</pre><ol class="multiple-choice"><li>0 1 2 3 4 5 6 7 8 9 10</li><li class="correct">0 1 2 3 4 5 6 7 8 9</li><li>0 2 4 6 8</li><li>0 1 3 5 7 9</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What will be printed by the statements below?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-72</dd></dl></li><li>What will be printed by the statements below?
<pre>
for ctr in range(10, 5, -1) :
   print(ctr, end = &quot; &quot;) 
</pre><ol class="multiple-choice"><li>10 9 8 7 6 5</li><li class="correct">10 9 8 7 6</li><li>5 6 7 8 9 10</li><li>6 7 8 9 10</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What will be printed by the statements below?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-73</dd></dl></li><li>Which of the following loops will print the odd numbers between
0 and 20?
<ol class="multiple-choice"><li class="correct"><pre>
num = 1
while num &lt; 20 : 
   print(num, &quot; &quot;) 
   num = num + 2 
</pre></li><li><pre>
num = 1 
while num &lt; 20 : 
   print(num, &quot; &quot;) 
   num = num + 1 
</pre></li><li><pre>
num = 0
while num &lt; 20 : 
   print(num,  &quot; &quot;) 
   num = num + 2
</pre></li><li><pre>
num = 1
while num &lt; 20 : 
   num = num + 2 
   print(num, &quot; &quot;) 
</pre></li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What will be printed by the statements below?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-74</dd></dl></li><li>Which of the following loops will print the odd numbers between
0 and 20?
<ol class="multiple-choice"><li class="correct"><pre>
num = 1 
while num &lt; 11 : 
   value  = num * 2 - 1
   print(value, &quot; &quot;)
   num = num + 1
</pre></li><li><pre>
num = 1
while num &lt; 20 :
   value = num * 2 - 1 
   print(value, &quot; &quot;) 
   num = num + 1
</pre></li><li><pre>
num = 1
while num &lt; 10 : 
   print(num, &quot; &quot;) 
   num = num + 2
</pre></li><li><pre>
num = 1
while num &lt; 20 : 
   num = num + 2 
   print(num, &quot; &quot;)  
</pre></li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What will be printed by the statements below?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-75</dd></dl></li><li>Which of the following conditions can be added to the code
below so it will loop until the value of sum is greater than 100?
<pre>
sum = input(&quot;enter an integer&quot;)
while #  Put condition here :
   sum = sum + input(&quot;Enter an integer&quot;) 
</pre><ol class="multiple-choice"><li><pre>
sum != 0
</pre></li><li class="correct"><pre>
sum &lt;= 100
</pre></li><li><pre>
sum &gt; 100
</pre></li><li><pre>
sum == 100
</pre></li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>Which of the following conditions can be added to the code below so it will loop until the value of sum is greater than 100?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-76</dd></dl></li><li>What does the following code compute?
<pre>
sum = 0
count = 0
value = input(&quot;enter an  integer&quot;)
while value &gt; 0 :
   sum = sum + value
   count = count + 1
   value = input(&quot;enter next integer&quot;)
result = sum * 1.0 / count
print(result) 
</pre><ol class="multiple-choice"><li>The average of all the integers in the input</li><li>The sum of all the positive integers in the input divided by
the number of integers in the input</li><li class="correct">The average of all the positive integers in the input</li><li>The second smallest value in the input</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What does the following loop compute?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-77</dd></dl></li><li>What is the output of the code below?
<pre>
for val in range(0, 4) : 
   print(&quot;+&quot;, end = &quot;&quot;) 
   for num in range(0,  val) :
      print(&quot;0&quot;,  end = &quot;&quot;) 
</pre><ol class="multiple-choice"><li>+0+00+000+0000</li><li>+000+000+000+000</li><li class="correct">++0+00+000</li><li>++++000000</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What is the output of the code below?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-79</dd></dl></li><li>What is the output of the code below?
<pre>
num = 1
for val in range(0, 4) :
   sum = val
   for x in  range(0, val, num) :
      sum = sum +  x
   print(sum , end  = &quot; &quot;) 
</pre><ol class="multiple-choice"><li>1 3 6</li><li>1 2 3 6</li><li class="correct">0 1 3 6</li><li>0 1 2 3 3</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What is the output of the code below?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-80</dd></dl></li><li>How many times does the following loop execute?
<pre>
i = 0
found = False
while i &lt; 100 and found != True :
   i = i + 1
   print(i, end = &quot; &quot;)
   j = i * i
   if i * i * i % j == j :
      found = True
</pre><ol class="multiple-choice"><li>10 times</li><li>20 times</li><li class="correct">100 times</li><li>An infinite number of times</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>How many times does the following loop execute?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-81</dd></dl></li><li>The following program is supposed to sum all of the numbers
entered by the user. What line of code must be inserted in the
blank so that the program will achieve this goal?
<pre>
total = 0.0
inputStr = input(&quot;Enter a value: &quot;)
while inputStr != &quot;&quot; :
   value = float(inputStr)
   ____________________
   inputStr = input(&quot;Enter a value: &quot;)
</pre><ol class="multiple-choice"><li><code>value = value + inputStr</code></li><li><code>value = value + total</code></li><li><code>total = total + inputStr</code></li><li class="correct"><code>total = total + value</code></li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>Complete the while loop that sums the numbers entered by the user</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-84</dd></dl></li><li>The following program is supposed to count how many even
numbers are entered by the user. What line of code must be inserted
in the blank so that the program will achieve this goal?
<pre>
evens = 0
inputStr = input(&quot;Enter a value: &quot;)
____________________
   value = int(inputStr)
   if value % 2 == 0:
      evens = evens + 1
   inputStr = input(&quot;Enter a value: &quot;)
</pre><ol class="multiple-choice"><li><code>while inputStr != 0 :</code></li><li><code>while inputStr % 2 == 0 :</code></li><li><code>while inputStr == 2 or 4 or 6 or 8 or 10 or ...
:</code></li><li class="correct"><code>while inputStr != &quot;&quot; :</code></li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>Complete the while loop that counts the number of even numbers entered by the user</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-85</dd></dl></li><li>The following program is supposed to continue reading values
from the user until a value between 25 and 75 is entered. What line
of code must be inserted in the blank so that the program will
achieve this goal?
<pre>
value = int(input(&quot;Enter a value: &quot;))
____________________
   value = int(input(&quot;Enter a value: &quot;))
</pre><ol class="multiple-choice"><li><code>while value &gt;= 25 or value &lt;= 75 :</code></li><li><code>while value &gt;= 25 and value &lt;= 75 :</code></li><li class="correct"><code>while value &lt; 25 or value &gt; 75 :</code></li><li><code>while value &lt; 25 and value &gt; 75 :</code></li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>Complete the while loop that reads values until the user enters a value between 25 and 75</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-86</dd></dl></li><li>The following program is supposed to print a message any time
the user enters two consecutive values that are the same. What line
of code must be inserted in the blank so that the program will
achieve this goal?
<pre>
value = int(input(&quot;Enter a value: &quot;)
inputStr = input(&quot;Enter a value: &quot;)
while inputStr != &quot;&quot; :
   previous = value
   value = int(inputStr)
   ____________________
      print(&quot;Found consecutive values that are the same&quot;)  
   inputStr = input(&quot;Enter a value: &quot;)
</pre><ol class="multiple-choice"><li><code>if value == inputStr :</code></li><li><code>if value == input :</code></li><li><code>if previous == inputStr :</code></li><li class="correct"><code>if previous == value :</code></li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>Complete the while loop for finding consecutive identical values</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-1-ch04-87</dd></dl></li><li>How many times does the while loop execute?
<pre>
   s = &quot;abcdEfghI&quot;
   found = False
   count = 0 
   while found == False :
      if s[count].isupper() :
         print(letter)
         found = True
      count = count + 1
</pre><ol class="multiple-choice"><li>9 times</li><li>8 times</li><li class="correct">5 times</li><li>1 time</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>Finding the first match</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-65</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-2-ch04-65</dd></dl></li><li>Consider the following code snippet.  What should be placed in the blank to cause a message to be displayed when the user enters the same letter twice in a row?
<pre>
letter = input(&quot;Enter the next letter in the  alphabet: &quot;)
while letter != &quot;&quot;:
   previous = letter
   letter = input(&quot;Enter the next letter&quot;)
   if ________________________ :
      print(&quot;Duplicate input&quot;)
</pre><ol class="multiple-choice">
<li><code>
letter == letter
</code></li><li><code>
alphabet[0]  == letter
</code></li><li class="correct"><code>
letter  == previous 
</code></li><li><code>
alphabet[0]  == previous
</code></li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>Compare adjacent values</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-66</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-2-ch04-66</dd></dl></li><li>What is the output of this code snippet if the user enters the
numbers 1  2  3  4  -1?
<pre>
total = 0
validNumber = True
while validNumber :
   value = int(input(&quot;Please enter a positive value &lt; 100: &quot;))
   if value &gt; 0 and value &lt; 100 :
      total = total + value
   else :
      validNumber = False
print(total)
</pre><ol class="multiple-choice"><li>15</li><li>14</li><li>12</li><li class="correct">10</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What is the output of this code snippet with this user input?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-67</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-2-ch04-67</dd></dl></li><li>What will be printed by the statements below?
<pre>
a = 10
while a  &gt; 5 :
   a = a - 2
   print(a , end = &quot; &quot;) 
</pre><ol class="multiple-choice"><li>10 8 6</li><li>10 8 6 4</li><li>8 6</li><li class="correct">8 6 4</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What will be printed by the statements below?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-69</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-2-ch04-69</dd></dl></li><li>What is printed by the following code segment?
<pre>
position = 0
str = input(&quot;Enter a string: &quot;)
while position &lt; len(str) and str[position] != 'e' :
   position = position + 1
print(position) 
</pre><ol class="multiple-choice"><li class="correct">The position of the first 'e' in the string or the length of
the string if there is no 'e'</li><li>The position of the last 'e' in the string or the length of the
string if there is no 'e'</li><li>The position of the first character that is not an 'e' in the
string or the length of the string if there is no character that is
not an 'e'</li><li>The position of the last character that is not an 'e' in the
string or the length of the string if there is no character that is
not an 'e'</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What does the code segment below print?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-78</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-2-ch04-78</dd></dl></li><li>Which code snippet produces the sum of the first n positive
even numbers?  Note that 0 is neither positive nor negative.
<ol class="multiple-choice"><li><pre>
sum = 0
for i in range(1, n) :
   if i % 2 == 0 :
      sum = sum + i
</pre></li><li class="correct"><pre>
sum = 0
for i in range(1, n + 1) :
   sum = sum + i * 2
</pre></li><li><pre>
sum = 0
for i in range (0, n) :
   if i % 2 == 0 :
      sum = sum + i
</pre></li><li><pre>
sum = 0
for i in range(1, n) :
   sum = sum + i * 2
</pre></li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>Which code snippet produces the sum of the first n even numbers?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-82</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-2-ch04-82</dd></dl></li><li>What is the output of this loop?
<pre>
i = 0
found = False
while i &lt; 20 and found != True :
   sum = i * 2 + i * 3
   print(sum, end=&quot; &quot;)
   if sum &gt; 50 :
      found = True
   i = i + 1
</pre><ol class="multiple-choice">
<li class="correct">0 5 10 15 20 25 30 35 40 45 50 55</li>
<li>0</li>
<li>No output, compilation error</li>
<li>0 5 10</li></ol><dl><dt>Section</dt><dd>4.5 Common Loop Algorithms</dd><dt>Title</dt><dd>What is the output of loop with Boolean?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-83</dd><dt>section</dt><dd>4.5 Common Loop Algorithms</dd><dt>id</dt><dd>testbank-py-2-ch04-83</dd></dl></li><li>Which of the following for loops will run the loop body 5
times?
<ol class="multiple-choice"><li><code>for i in range(0, 4) :</code></li><li class="correct"><code>for i in range(0, 5) :</code></li><li><code>for i in range(0, 6) :</code></li><li><code>for i in range(1, 5) :</code></li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Which of the following for loops will run the loop body 5 times</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-100</dd></dl></li><li>Which of the following for loops will run the loop body 5
times?
<ol class="multiple-choice"><li><code>for i in range(4, 0, -1) :</code></li><li class="correct"><code>for i in range(5, 0, -1) :</code></li><li><code>for i in range(5, 1, -1) :</code></li><li><code>for i in range(6, 0, -1) :</code></li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Which of the following for loops will run the loop body 5 times</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-101</dd></dl></li><li>What is the value of <code>j</code> at the end of the following
code segment?
<pre>
j = 0
for i in range(0, 4) :
   j = j + i
</pre><ol class="multiple-choice"><li>4</li><li class="correct">6</li><li>8</li><li>10</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Trace a for loop</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-102</dd></dl></li><li>What is the value of <code>j</code> at the end of the following
code segment?
<pre>
j = 0
for i in range(1, 10) :
   if j &lt; 10 :
      j = j + i
</pre><ol class="multiple-choice"><li>0</li><li>1</li><li>9</li><li class="correct">10</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Trace a for loop</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-103</dd></dl></li><li>Consider the following <code>for</code> loop:
<pre>
for i in range(0, 10) :
   print(i)
</pre>
Which of the following <code>while</code> loops will generate the
same output?
<ol class="multiple-choice"><li class="correct"><pre>
i = 0
while i &lt; 10 :
   print(i)
   i = i + 1
</pre></li><li><pre>
i = 0 
while i &lt;= 10 :
   print(i)
   i = i + 1
</pre></li><li><pre>
i = 1
while i &lt; 10 :
   print(i)
   i = i + 1
</pre></li><li><pre>
i = 1
while i &lt;= 10 :
   print(i)
   i = i + 1
</pre></li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Convert a for loop to a while loop</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-104</dd></dl></li><li>Consider the following <code>while</code> loop:
<pre>
j = 10
while j &gt;= 5 :
   print(&quot;X&quot;)
   j = j - 1
</pre>
Which of the following <code>for</code> loops will generate the
same output?
<ol class="multiple-choice"><li><pre>
for j in range(10, 5) :
   print(&quot;X&quot;)
</pre></li><li><pre>
for j in range(10, 5, -1) :
   print(&quot;X&quot;)
</pre></li><li class="correct"><pre>
for j in range(10, -1, -2) :
   print(&quot;X&quot;)
</pre></li><li><pre>
for j in range(0, 5) :
   print(&quot;X&quot;)
</pre></li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Convert a while loop to a for loop</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-105</dd></dl></li><li>What is the output of this loop?
<pre>
counter = 1
for i in range(1, 100) :
   counter = counter + 1
print(counter)
</pre><ol class="multiple-choice"><li class="correct">100</li><li>49</li><li>60</li><li>10</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>What is the output of for loop</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-88</dd></dl></li><li>What does the following code snippet print?
<pre>
fruitName = &quot;banana&quot;
for letter in fruitName :
   print(letter, end = &quot; &quot;)
</pre><ol class="multiple-choice"><li>banana</li><li class="correct">b a n a n a</li><li>Nothing, there is a syntax error</li><li>Nothing, this is an infinite loop</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>What does the for loop print?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-89</dd></dl></li><li>What is the output of the following code snippet?
<pre>
for i in range(4) :
   for j in  range(3) :
      print(&quot;*&quot;, end=&quot;&quot;)
   print()
</pre><ol class="multiple-choice"><li>Prints 3 rows of 4 asterisks each</li><li>Prints 12 rows of asterisks</li><li class="correct">Prints 4 rows of 3 asterisks each</li><li>Prints 12 rows of 3 asterisks each</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Which is a loop with a problematic condition?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-90</dd></dl></li><li>How many times does the loop execute in the following code
fragment?
<pre>
for i in  range(0, 50, 4) :
   print(i)
</pre><ol class="multiple-choice"><li>11</li><li>12</li><li class="correct">13</li><li>14</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>How many times does for loop execute?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-91</dd></dl></li><li>How many times does the following code snippet display &quot;Loop
Execution&quot;?
<pre>
for i in range(0, 10) :
   print(&quot;Loop Execution&quot;)
</pre><ol class="multiple-choice"><li class="correct">Ten times.</li><li>The code snippet does not run because of a compile error.</li><li>Infinite loop.</li><li>Only one time.</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>How many times does for loop execute?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-92</dd></dl></li><li>Which of the following is considered an equivalent while
 loop for this for loop?
<pre>
s = 0
for i in range(1, 10) :
   s = s + i
</pre><ol class="multiple-choice"><li><pre>
s =  0
i = 0
while i &lt;= 10 :
   s = s + i
   i = i + 1
</pre></li><li class="correct"><pre>
s =  0
i = 1
while i &lt; 10 :
   s = s + i
   i = i + 1
</pre></li><li><pre>
s =  0
i = 1
while i &lt;= 10 :
   s = s + i
   i = i + 1
</pre></li><li><pre>
s =  0
i = 0
while i &lt; 10 :
   s = s + i
   i = i + 1
</pre></li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Rewrite a for loop using a while loop</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-93</dd></dl></li><li>Which statement about this code snippet is accurate?
<pre>
years = 50
balance = 10000
targetBalance = 20000
rate = 3
for i in range(1 , years + 1) :
   if balance  &gt;= targetBalance :
      i = years +  1 
   else :
      interest =  balance * rate / 100
   balance =  balance + interest
</pre><ol class="multiple-choice"><li class="correct">The loop will run 50 times.</li><li>The loop will never stop.</li><li>The loop will run at most 50 times, but may stop earlier when
balance exceeds or equals targetBalance.</li><li>There is a compilation error.</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>For loop with inside if statement</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-94</dd></dl></li><li>What values does counter variable i assume when this loop
executes?
<pre>
for i in range(20, 2, -6) :
   print(i, end = &quot;, &quot;)
</pre><ol class="multiple-choice"><li>20, 14, 8, 2</li><li>20, 14, 8, 2, -4</li><li class="correct">20, 14, 8</li><li>14, 8, 2</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Which values does the counter variable assume in for loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-95</dd></dl></li><li>What is the output of the following code snippet?
<pre>
f1 = 0
f2 = 1
print(f1, &quot; &quot;)
print(f2, &quot; &quot;)
for i in range(1, 11) :
   fRes = f1 + f2
   print(fRes, end = &quot; &quot;)
   f1 = f2
   f2 = fRes
print()
</pre><ol class="multiple-choice"><li>0 1 5 7 9 11 13 15 17 19 55</li><li class="correct">0 1 1 2 3 5 8 13 21 34 55 89</li><li>0 1 4 6 8 10 12 14 16 18 34</li><li>0 1 6 7 9 12 14 17 19 21 55</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>What is the output of for loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-97</dd></dl></li><li>How many iterations does the following loop carry out?
<pre>
for i in range (-10, 11, 2) :
</pre><ol class="multiple-choice"><li>infinite</li><li>None because of compilation error</li><li class="correct">11 times</li><li>20 times</li></ol><dl><dt>Section</dt><dd>4.6 The for loop</dd><dt>Title</dt><dd>How many times does the loop execute?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-98</dd></dl></li><li>How many times does the following loop execute?
<pre>
for d in range(1, 10) : 
   d = d / 3
   print(d , &quot; &quot;)
</pre><ol class="multiple-choice"><li>10</li><li class="correct">9</li><li>8</li><li>An infinite number of times</li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>How many times does the following loop execute?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-1-ch04-99</dd></dl></li><li>
  Consider the following code segment:

  <pre>
  s = &quot;Hello World!&quot;
  __________
    print(ch)
  </pre>

  What should be placed in the blank so that the letters of <code>s</code> 
  are printed out with one letter appearing on each line?

  <ol class="multiple-choice">
    <li><code>for ch in range(s) : </code></li>
    <li class="correct"><code>for ch in s :</code></li>
    <li><code>for range(ch, s) :</code></li>
    <li><code>for s in ch : </code></li>
  </ol>
<dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Which loop prints out the letters of a string with each character appearing on its own line?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-151</dd></dl></li><li>Which of the following for loops is illegal?
<ol class="multiple-choice"><li><code>
for i in range(0, )  :
</code></li><li><code>
for i in range(0) :
</code></li><li><code>
for i in range(0, k)  :
</code></li><li class="correct"><code>
for i in range(  , ) :
</code></li></ol><dl><dt>Section</dt><dd>4.6 The for Loop</dd><dt>Title</dt><dd>Which of the following for loops is illegal?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-96</dd><dt>section</dt><dd>4.6 The for Loop</dd><dt>id</dt><dd>testbank-py-2-ch04-96</dd></dl></li><li>When does the execution switch from the inner to the outer loop?
<pre>
j = 1
for i in  range(0, 10) :   
   while(j &lt; 5) :
      print(&quot;Hello&quot;)
      if j == 2 : 
         j = 6
      j = j + 1
   print(&quot;switch  from inner to outer&quot;, i, &quot;  &quot;, j)
</pre><ol class="multiple-choice"><li class="correct">When the value of j becomes 6</li><li>When the program executes completely</li><li>When the condition for the outer loop is met</li><li>When the value of i is incremented</li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>When does execution switch from inner to outer loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-106</dd></dl></li><li>A loop inside another loop is called:
<ol class="multiple-choice"><li>A sentinel loop</li><li class="correct">A nested loop</li><li>A parallel loop</li><li>A while loop</li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>What is a loop inside another loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-107</dd></dl></li><li>What is the first and last value of i to be displayed by the
following code snippet?
<pre>
n = 20
for i in range(0, n) :
   for  j in range(0, i) : 
      print(i)
</pre><ol class="multiple-choice"><li>0 and 20</li><li>1 and 20</li><li>0 and 19</li><li class="correct">1 and 19</li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>What are first and last values displayed by nested for loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-108</dd></dl></li><li>How many times will the output line be printed in the following
code snippet?
<pre>
for num2 in range(1, 4) :
   for num1 in range(0, 3) :
      print(num2, &quot; &quot;, num1)
</pre><ol class="multiple-choice"><li>3 times</li><li>6 times</li><li class="correct">9 times</li><li>12 times</li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>How many times will inner for loop execute?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-109</dd></dl></li><li>What is the last output line of the code snippet given below?
<pre>
for i in range(3) :
   for j in  range(5) :
      if i % 2 ==  j % 2 :
         print(&quot;*&quot;, end=&quot;&quot;)
      else :
         print(&quot; &quot;, end=&quot;&quot;)
   print()
</pre><ol class="multiple-choice"><li>No output</li><li>* * * * * * ... infinite loop</li><li>* * * *</li><li class="correct">* * *</li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>What is output of nested loops?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-110</dd></dl></li><li>What is the last output line of the code snippet given below?
<pre>
i = 0
j = 0
while i  &lt; 10 :
   num = 1
   j = i
   while j &gt; 1 :
      print(j, end = &quot; &quot;)
      num = num * 2
      j = j -  1
   print(&quot;***&quot;)
   i = i + 1
</pre><ol class="multiple-choice"><li>3 2 ***</li><li class="correct">9 8 7 6 5 4 3 2 ***</li><li>8 7 6 5 4 3 2 ***</li><li>2 ***</li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>What is output of nested loops?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-111</dd></dl></li><li>Which for loop prints data across each row in the following
code snippet?
<pre>
for i in range(1, 4) :
   for j in range(1, 4) :
      print(&quot;X&quot;, end=&quot;&quot;)
   print(&quot;&quot;)
</pre><ol class="multiple-choice"><li class="correct">The inner for loop</li><li>The outer for loop</li><li>Both for loops</li><li>Another missing for loop</li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>Which for loop in snippet represents rows?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-113</dd></dl></li><li>What will be the output of the following code snippet?
<pre>
for i in range(0,7) :
   for j in range(7, i, -1) :   
      print(&quot;*&quot;, end=&quot;&quot;)
   print(&quot;&quot;)
</pre><ol class="multiple-choice"><li>A rectangle with six rows and seven columns of asterisks. The
number of rows increments by one on completion of one iteration of
the inner loop.</li><li>A right triangle with six rows and seven columns of asterisks.
The number of columns increments by one on completion of one
iteration of the inner loop.</li><li>A rectangle with seven rows and six columns of asterisks. The
number of rows increments by one on completion of one iteration of
the inner loop.</li><li class="correct">A right triangle with seven rows and seven columns of asterisks.
The number of columns decrements by one on completion of one
iteration of the inner loop.</li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>What is output of nested for loops?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-114</dd></dl></li><li>In the following code snippet, how many times will &quot;Hello&quot; be
printed?
<pre>
for i in range(0, 10) :
   for j in range(1, 5) :
      print(&quot;Hello&quot;)
</pre><ol class="multiple-choice"><li class="correct">40</li><li>15</li><li>39</li><li>14</li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>When does execution switch from inner to outer loop in snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-115</dd></dl></li><li>Which of the following code segments is an example of a nested
loop?
<ol class="multiple-choice"><li><pre>
while i &lt; 0 :
   if x == 10 :
</pre></li><li class="correct"><pre>
while i &lt; 0 :
   while x == 10 :
</pre></li><li><pre>
if i &lt; 0 :
   while x == 10 :
</pre></li><li><pre>
if i &lt; 0 :
   if x == 10 :
</pre></li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>Which of the following code segments is an example of a nested loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-116</dd></dl></li><li>Consider the following code segment:
<pre>
for i in range(4) :
   ____________________
      print(&quot;*&quot;, end=&quot;&quot;)
   print()
</pre>
It is supposed to generate the following output:
<pre>
***
***
***
***
</pre>
Which line of code should be placed in the blank to achieve this
goal?
<ol class="multiple-choice"><li class="correct"><code>for j in range(3) :</code></li><li><code>for j in range(4) :</code></li><li><code>for j in range(i) :</code></li><li><code>for j in range(j) :</code></li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>Draw a pattern with nested for loops</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-117</dd></dl></li><li>How many copies of the letter <code>A</code> will the following
code segment display?
<pre>
for i in range(100) :
   for j in range(5) :
      print(&quot;A&quot;)
</pre><ol class="multiple-choice"><li>400</li><li>495</li><li class="correct">500</li><li>605</li></ol><dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>How many copies of the letter A will be displayed?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-1-ch04-118</dd></dl></li><li>What does the following code snippet display?
<pre>
for n in  range(1, 11) :
   for x in range(1, 11) :
      print(n*x, end = &quot; &quot;)
   print()
</pre><ol class="multiple-choice"><li class="correct">It displays a multiplication table for numbers 1-10 times
1-10</li><li>Nothing because it has compilation error.</li><li>It displays a table of all numbers squared from 1-10</li><li>It displays a multiplication table for numbers 1-11 times
1-11</li></ol><dl><dt>Section</dt><dd>4.7 Nested loops</dd><dt>Title</dt><dd>What does for loop with character creation display?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-112</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-2-ch04-112</dd></dl></li><li>
  What type of chart shows the distribution of data across a fixed number of categories?

  <ol class="multiple-choice">
    <li>A Grade Chart</li>
    <li>A Height Chart</li>
    <li class="correct">A Histogram</li>
    <li>A Plot</li>
  </ol>
<dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>What type of chart shows the distribution of data across a fixed number of categories?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-2-ch04-139</dd></dl></li><li>
  Which print statement displays the value of <code>s</code> without starting a new line?

  <ol class="multiple-choice">
    <li><code>print(end=&quot;s&quot;)</code></li>
    <li class="correct"><code>print(s, end=&quot;&quot;)</code></li>
    <li><code>print(s)</code></li>
    <li><code>print(&quot;s&quot;)</code></li>
  </ol>
<dl><dt>Section</dt><dd>4.7 Nested Loops</dd><dt>Title</dt><dd>Which print statement displays a value without starting a new line?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.7 Nested Loops</dd><dt>id</dt><dd>testbank-py-2-ch04-152</dd></dl></li><li>What is the output of this code snippet?
<pre>
str = &quot;ABCabc&quot;
i = 0
while i &lt; len(str) :
   ch = str[i]
   if ch.islower() :
      print(i ,  &quot; &quot;)
   else :
      i = i + 1 
</pre><ol class="multiple-choice"><li>3 4 5</li><li>3</li><li class="correct">3 3 3 3 3 ... (infinite loop)</li><li>0 1 2</li></ol><dl><dt>Section</dt><dd>4.8 Processing strings</dd><dt>Title</dt><dd>What is the output of code snippet with while loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.8 Processing Strings</dd><dt>id</dt><dd>testbank-py-1-ch04-119</dd></dl></li><li>Consider the following code segment. It is supposed to count
the number of digits (0 - 9) in a string, <code>text</code>.
<pre>
count = 0
for char in text :
   ____________________
      count = count + 1
</pre>
What line of code should be placed in the blank to achieve this
goal?
<ol class="multiple-choice"><li><code>if text[char] &gt;= &quot;0&quot; and text[char] &lt;= &quot;9&quot;
:</code></li><li><code>if text[count] &gt;= &quot;0&quot; and text[count] &lt;= &quot;9&quot;
:</code></li><li class="correct"><code>if char &gt;= &quot;0&quot; and char &lt;= &quot;9&quot; :</code></li><li><code>if text &gt;= &quot;0&quot; and char &lt;= &quot;9&quot; :</code></li></ol><dl><dt>Section</dt><dd>4.8 Processing Strings</dd><dt>Title</dt><dd>Complete the for loop that counts the number of digits in a string</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.8 Processing Strings</dd><dt>id</dt><dd>testbank-py-1-ch04-120</dd></dl></li><li>Is the code snippet written below legal?
<pre>
s = &quot;1234&quot;
for i in range (0, 4) :
   print(s[i], s[i + 1])
</pre><ol class="multiple-choice"><li>Yes.</li><li>No; there should not be a colon at the end of line 2.</li><li class="correct">No; <code>for i = 3, s[i + 1]</code> will result in an string
index out of range error.</li><li>No; <code>for i = 0, s[i]</code> will result in an string index
out of range error</li></ol><dl><dt>Section</dt><dd>4.8 Processing Strings</dd><dt>Title</dt><dd>Are there errors in for loop?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.8 Processing Strings</dd><dt>id</dt><dd>testbank-py-1-ch04-121</dd></dl></li><li>Consider the following code segment:
<pre>
found = False
position = 0
text = &quot;Hello World!&quot;
while not found and position &lt; len(text) :
   if text[position] == &quot;o&quot; :
      found = True
   else :
      position = position + 1
</pre>
What is the value of <code>position</code> at the end of this code
segment?
<ol class="multiple-choice"><li class="correct">4</li><li>5</li><li>7</li><li>8</li></ol><dl><dt>Section</dt><dd>4.8 Processing Strings</dd><dt>Title</dt><dd>Trace a while loop that processes a string</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.8 Processing Strings</dd><dt>id</dt><dd>testbank-py-1-ch04-122</dd></dl></li><li>Consider the following code segment. It is designed to identify
the first location within a string, <code>text</code> where two
adjacent characters are the same.
<pre>
i = 1
found = False
while not found and i &lt; len(text) :
   ____________________ :
      found = True
   else :
      i = i + 1
</pre>
What line of code should be placed in the blank to achieve this
goal?
<ol class="multiple-choice"><li><code>if text[i] == text[0] :</code></li><li class="correct"><code>if text[i] == text[i - 1] :</code></li><li><code>if text[i] == text[i] :</code></li><li><code>if text[i] == text[i + 1] :</code></li></ol><dl><dt>Section</dt><dd>4.8 Processing Strings</dd><dt>Title</dt><dd>Complete the loop that finds the location of two adjacent characters that are the same</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.8 Processing Strings</dd><dt>id</dt><dd>testbank-py-1-ch04-123</dd></dl></li><li>What will be the range of the random numbers generated by the
following code snippet?
<pre>
from random import randint
randomNum = randint(1,50)
</pre><ol class="multiple-choice"><li>Between 1 and 49</li><li>Between 0 and 50</li><li>Between 0 and 49</li><li class="correct">Between 1 and 50</li></ol><dl><dt>Section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>What is range of random numbers generated by snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-1-ch04-124</dd></dl></li><li>Which of the following is the correct code snippet for throwing
a pair of dice to get a sum of the numbers on two dice between 2
and 12 with the same probability as when throwing actual dice?
<ol class="multiple-choice"><li><pre>
randint(1, 6)
</pre></li><li><pre>
randint(2, 12)
</pre></li><li class="correct"><pre>
randint(1, 6) + randint(1, 6)
</pre></li><li><pre>
randint(1, 12) - 2
</pre></li></ol><dl><dt>Section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>Which code simulates throwing two dice and summing the result?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-1-ch04-125</dd></dl></li><li>Suppose that a program asks a user to enter multiple integers,
either positive or negative, to do some calculation. The data entry
will stop when the user enters a certain value to indicate the end
of the data. What value should the code use as the sentinel?
<ol class="multiple-choice"><li>0</li><li>-1</li><li>999</li><li class="correct">An alphabetic character</li></ol><dl><dt>Section</dt><dd>4.9 Application: Processing Sentinel Values</dd><dt>Title</dt><dd>What should be the sentinel value in this situation?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-1-ch04-126</dd></dl></li><li>Which of the following activities can be simulated using a
computer?
<p>I. Waiting time in a line at a restaurant</p><p>II. Tossing a coin</p><p>III. Shuffling cards for a card game</p><ol class="multiple-choice"><li>I only</li><li>II only</li><li>I and II only</li><li class="correct">I, II, and III</li></ol><dl><dt>Section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>Which activities can be computer simulated?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-1-ch04-127</dd></dl></li><li>What range of numbers are generated by the random() function?
<ol class="multiple-choice"><li class="correct">greater than or equal to zero and less than one</li><li>greater than zero and less than one</li><li>greater than zero and less than or equal to one</li><li>greater than or equal to zero and less than or equal to
one</li></ol><dl><dt>Section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>What is output of the code snippet with random()?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-1-ch04-128</dd></dl></li><li>Assume the following variable has been declared and given a
value as shown:
<pre>
from random import randint
number  = randint(0, 27) * 2 + 3
</pre>
What are the smallest and largest values that may be assigned to
number?
<ol class="multiple-choice"><li>3, 55</li><li>0, 27</li><li class="correct">3, 57</li><li>0, 26</li></ol><dl><dt>Section</dt><dd>4.9: Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>What are the smallest and largest values that may be assigned to number?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-1-ch04-135</dd></dl></li><li>Which line of code will generate a random integer from 1 up to
and including 10, and store it in <code>x</code>? Assume that the
<code>randint</code> function has been imported from the
<code>random</code> module.
<ol class="multiple-choice"><li><code>x = randint(0, 10)</code></li><li><code>x = randint(0, 11)</code></li><li class="correct"><code>x = randint(1, 10)</code></li><li><code>x = randint(1, 11)</code></li></ol><dl><dt>Section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>Which line of code will generate a random integer from 1 up to and including 10?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-1-ch04-137</dd></dl></li><li>Which line of code will generate a random floating-point number
between 0 and 6, and store it in <code>x</code>? Assume that the
<code>random</code> function has been imported from the
<code>random</code> module.
<ol class="multiple-choice"><li><code>x = random()</code></li><li class="correct"><code>x = random() * 6</code></li><li><code>x = random(6)</code></li><li><code>x = random(0, 6)</code></li></ol><dl><dt>Section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>Which line of code will generate a random floating-point number between 0 and 6?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-1-ch04-138</dd></dl></li><li>What does the following code do?
<pre>
from random import randint

sum = 0
COUNT = 1000
for i in range(1,COUNT + 1) :
   sum = sum + randint(0, 100)
print(sum / COUNT)
</pre><ol class="multiple-choice"><li>It simulates the outcome of throwing a coin.</li><li class="correct">It calculates the average of 1000 random numbers between 0 and
100.</li><li>It performs a Monte Carlo fluid dynamics simulation.</li><li>It calculates the average of 1000 random numbers between 1 and
101.</li></ol><dl><dt>Section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>What does code snippet with random numbers do?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-129</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-2-ch04-129</dd></dl></li><li>Which of the following statements correctly prints the result of simulating the toss of a
pair of coins to get 0 (heads) or 1 (tails) for each coin?
<ol class="multiple-choice"><li><pre>
print(randint(0, 1))
</pre></li><li><pre>
print(randint(1, 1))
</pre></li><li><pre>
print(randint(0, 2), randint(0, 2))
</pre></li><li class="correct"><pre>
print(randint(0, 1), randint(0, 1))
</pre></li></ol><dl><dt>Section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>Which is correct for simulating the toss of a pair of coins?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-131</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-2-ch04-131</dd></dl></li><li>Which of the following code snippets will generate a random
number between 0 and 79?
<ol class="multiple-choice"><li><pre>
val = int(random() % 80)
</pre></li><li><pre>
val = int(random() * 80 - 1)
</pre></li><li><pre>
val = int(random() % 79)
</pre></li><li class="correct"><pre>
val = int(random() * 80)
</pre></li></ol><dl><dt>Section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>Which code generates random numbers 0-79?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-132</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-2-ch04-132</dd></dl></li><li>
Which of the following expressions will generate a random integer in the range
 -20 to 20, inclusive, where each value has an equal chance
of being generated?
<ol class="multiple-choice">
  <li class="correct"><code>
randint (-20, 20)
</code></li><li><code>
randint(20) - 41
</code></li><li><code>
randint (-20) + 40
</code></li><li><code>
randint(41) - 20 
</code></li></ol><dl><dt>Section</dt><dd>4.9: Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>Which of the following will generate a random integer in the range 20 to 20, inclusive, where each value has an equal chance of being generated?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-134</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-2-ch04-134</dd></dl></li><li>Assume the following variable has been declared and given a
value as shown:
<pre>
from random import random
number = random() * 2 + 3
</pre>
What are the smallest and largest values that may be assigned to
number?
<ol class="multiple-choice">
  <li class="correct">3.0, 5.0 (excluding 5.0)</li>
  <li>0.0, 6.0 (excluding 6.0)</li>
  <li>-3.0, 3.0 (including 3.0)</li>
  <li>0.0, 3.0 (including 3.0)</li></ol><dl><dt>Section</dt><dd>4.9: Application: Random Numbers and Simulations</dd><dt>Title</dt><dd>What are the smallest and largest values that may be assigned to number?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch04-136</dd><dt>section</dt><dd>4.9 Application: Random Numbers and Simulations</dd><dt>id</dt><dd>testbank-py-2-ch04-136</dd></dl></li><li>
  Using computer algorithms to manipulate digital images is known as:

  <ol class="multiple-choice">
    <li>Computer vision</li>
    <li>Data compression</li>
    <li>Digital photography</li>
    <li class="correct">Image processing</li>
  </ol>
<dl><dt>Section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>Title</dt><dd>Using computer algorithms to manipulate digital images is known as:</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>id</dt><dd>testbank-py-2-ch04-140</dd></dl></li><li>
  A digital image is a collection of __________ arranged in a grid of rows and
  columns. 

  <ol class="multiple-choice">
    <li>canvases</li>
    <li>dots</li>
    <li>elementary elements</li>
    <li class="correct">pixels</li>
  </ol>
<dl><dt>Section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>Title</dt><dd>A digital image is a collection of __________ arranged in a grid of rows and columns. </dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>id</dt><dd>testbank-py-2-ch04-141</dd></dl></li><li>
  In an RGB color model, what color is represented by 255, 255, 255?

  <ol class="multiple-choice">
    <li>black</li>
    <li>green</li>
    <li class="correct">white</li>
    <li>yellow</li>
  </ol>
<dl><dt>Section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>Title</dt><dd>In an RGB color model, what color is represented by 255, 255, 255?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>id</dt><dd>testbank-py-2-ch04-142</dd></dl></li><li>
  What RGB values represent green?

  <ol class="multiple-choice">
    <li>0, 0, 255</li>
    <li class="correct">0, 255, 0</li>
    <li>128, 128, 128</li>
    <li>255, 0, 0</li>
  </ol>
<dl><dt>Section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>Title</dt><dd>What RGB values represent green?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>id</dt><dd>testbank-py-2-ch04-143</dd></dl></li><li>
  Which statement loads an image from a file and stores it in a variable?  
  Assume that the <code>ezgraphics</code> module has already been imported 
  using the statement:

  <pre>
from ezgraphics import GraphicsImage, GraphicsWindow
  </pre>

  <ol class="multiple-choice">
    <li><code>graphicsImage = Load(&quot;mountain.gif&quot;)</code></li>
    <li><code>Image(&quot;mountain.gif&quot;)</code></li>
    <li><code>image = (&quot;mountain.gif&quot;)</code></li>
    <li class="correct"><code>image = GraphicsImage(&quot;mountain.gif&quot;)</code></li>
  </ol>
<dl><dt>Section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>Title</dt><dd>Which statement loads an image from a file and stores it in a variable?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>id</dt><dd>testbank-py-2-ch04-144</dd></dl></li><li>
  What programming language structure is used iterate over all of the individual pixels in an image?

  <ol class="multiple-choice">
    <li>A for loop (not nested)</li>
    <li class="correct">A nested for loop</li>
    <li>A nested if statement</li>
    <li>A while loop (not nested)</li>
  </ol>
<dl><dt>Section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>Title</dt><dd>What programming language structure is typically used to process all of the pixels in an image?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>id</dt><dd>testbank-py-2-ch04-145</dd></dl></li><li>
  Which of the following image processing operations changes the grid structure of the image without modifying the pixel values?

  <ol class="multiple-choice">
    <li>Converting an image to grayscale</li>
    <li>Darkening an image</li>
    <li>Replacing an image with its negative</li>
    <li class="correct">Rotating an image</li>
  </ol>
<dl><dt>Section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>Title</dt><dd>Which of the following image processing operations changes the grid structure of the image without modifying the pixel values?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.10 Graphics: Digital Image Processing</dd><dt>id</dt><dd>testbank-py-2-ch04-146</dd></dl></li><li>
Which of the following is <strong>not</strong> a benefit of solving a simpler problem first?

  <ol class="multiple-choice">
    <li>It can be difficult to figure out how to get started when solving a large task.</li>
    <li>Solving the simpler problem first will motivate you to solve the harder problem.</li>
    <li>Usually, you learn something useful from solving the simpler task.</li>
    <li class="correct">When the simpler problem is solved first it reduces the amount of time the computer needs to compute the answer for the larger problem. </li>
  </ol>
<dl><dt>Section</dt><dd>4.11 Problem Solving: Solve a Simpler Problem First</dd><dt>Title</dt><dd>Why is it beneficial to start by solving a simpler problem first?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>4.11 Problem Solving: Solve a Simpler Problem First</dd><dt>id</dt><dd>testbank-py-2-ch04-147</dd></dl></li></ol></body>
    </html>
