<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/><title></title>
    <link href="styles.css" rel="stylesheet" type="text/css"/>
    </head>
    <body><dl></dl><ol><li>What statement is used to implement a decision?
<ol class="multiple-choice"><li>while</li><li class="correct">if</li><li>for</li><li>import</li></ol><dl><dt>Section</dt><dd>3.1 The if statement</dd><dt>Title</dt><dd>What is a decision statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-1-ch03-01</dd></dl></li><li>What are the two parts of an if statement?
<ol class="multiple-choice"><li class="correct">A condition and a body</li><li>A check and an increment</li><li>An increment and a body</li><li>An increment and a return value</li></ol><dl><dt>Section</dt><dd>3.1 The if statement</dd><dt>Title</dt><dd>What are the two parts of an if statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-1-ch03-02</dd></dl></li><li>Which of the following statements is true about the if
statement?
<ol class="multiple-choice"><li>The <code>if</code> statement can have only one condition that
evaluates to an integer value.</li><li>The <code>if</code> block is optional.</li><li class="correct">The <code>else</code> block is optional.</li><li>The <code>if</code> and <code>else</code> blocks can be aligned
to any indentation level.</li></ol><dl><dt>Section</dt><dd>3.1 The if statement</dd><dt>Title</dt><dd>Which statement is true about the if statement</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-1-ch03-03</dd></dl></li><li><p>Which of the following is the correct syntax for an if
statement?</p><ol class="multiple-choice">
          <li>
            <pre>
if (x &lt; 10) size = &quot;small&quot;;
</pre>
          </li>
          <li>
            <pre>
if (x &lt; 10) 
  size = &quot;small&quot;
else (x &lt; 20)
  size = &quot;medium&quot;
</pre>
          </li>
          <li class="correct">
            <pre>
if x &lt; 10 :
   size = &quot;small&quot;
else :
   size = &quot;medium&quot;
</pre>
          </li>
          <li>
            <pre>
if x &lt; 10 :
  size = &quot;small&quot;
else
  size = &quot;medium&quot;
</pre>
          </li>
        </ol><dl><dt>Section</dt><dd>3.1 The if statement</dd><dt>Title</dt><dd>What is the correct syntax for an if statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-1-ch03-04</dd></dl></li><li><p>Which of the following correctly identifies what is wrong with
the code snippet below:</p><pre>
  if y &gt; 300 :
  x = y
  else :
  x = 0
  print(&quot;x:&quot;, x)
</pre><ol class="multiple-choice">
          <li>Nothing, the program runs as intended</li>
          <li>The statement after the <code>if</code> statement must be
indented</li>
          <li class="correct">The statement after the <code>if</code> statement and the
statement after the <code>else</code> statement must be
indented</li>
          <li>No colon is needed after the <code>else</code> statement</li>
        </ol><dl><dt>Section</dt><dd>3.1 The if statement</dd><dt>Title</dt><dd>What is the correct syntax for an if statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-1-ch03-05</dd></dl></li><li>Assuming that the user provides 303 as input, what is the
output of the following code snippet?
<pre>
  y = int(input(&quot;Please enter a number: &quot;))
  if y &gt; 300 :
     x = y
  else :
     x = 0
  print(&quot;x:&quot;, x)
</pre><ol class="multiple-choice"><li><code>x: 0</code></li><li class="correct"><code>x: 303</code></li><li><code>x: 300</code></li><li>There is no output due to a syntax error.</li></ol><dl><dt>Section</dt><dd>3.1 The if statement</dd><dt>Title</dt><dd>What is the output of an if/else statement given sample input value</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-1-ch03-06</dd></dl></li><li>What is the output of the following code snippet if the
<code>cost</code> contains 100:
<pre>
if cost &gt; 150 :
   discount = 0.8 * cost
else :
   discount = cost
print(&quot;Your cost is:&quot;, discount)
</pre><ol class="multiple-choice"><li>Nothing, the code contains a syntax error</li><li><code>Your cost is: 0</code></li><li><code>Your cost is: 80</code></li><li class="correct"><code>Your cost is: 100</code></li></ol><dl><dt>Section</dt><dd>3.1 The ifstatement</dd><dt>Title</dt><dd>What is the output of a conditional expression?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-1-ch03-10</dd></dl></li><li>Consider the following code segment:
<pre>
if count &gt; 0 :
   x = x + 1

print(x)
</pre><p>If <code>count</code> is initialized to -1 and <code>x</code> is
initialized to 4 then the value displayed by this code segment
is:</p><ol class="multiple-choice"><li>-1</li><li>0</li><li class="correct">4</li><li>5</li></ol><dl><dt>Section</dt><dd>3.1 The if Statement</dd><dt>Title</dt><dd>Trace an if statement</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-1-ch03-11</dd></dl></li><li>Consider the following code segment:
<pre>
numPizzas = 1
numPeople = 4

if numPeople == 5 :
   numPizzas = 2
</pre><p>After this code segment executes, what value is in the variable
<code>numPizzas</code>?</p><ol class="multiple-choice"><li class="correct">1</li><li>2</li><li>4</li><li>5</li></ol><dl><dt>Section</dt><dd>3.1 The if Statement</dd><dt>Title</dt><dd>Trace an if statement</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-1-ch03-12</dd></dl></li><li>Consider the following code segment:
<pre>
c = 2
b = 1

if b == 0 :
   c = c + 1
else :
   c = c - 1

print(c)
</pre><p>What value is printed by this code segment?</p><ol class="multiple-choice"><li class="correct">1</li><li>2</li><li>3</li><li>4</li></ol><dl><dt>Section</dt><dd>3.1 The if Statement</dd><dt>Title</dt><dd>Trace an if/else statement</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-1-ch03-13</dd></dl></li><li>
  Which statement about if statements is <strong>not</strong> correct?

  <ol class="multiple-choice">
    <li>A compound statement requires a colon at the end of the header.</li>
    <li>All statements in a statement block must be indented to the same indentation level.</li>
    <li>Comments can be indented to any level.</li>
    <li class="correct">The statements in a statement block must be indented 2 spaces more than the header.</li>
  </ol>
<dl><dt>Section</dt><dd>3.1 The if Statement</dd><dt>Title</dt><dd>Which statement about if statements is not correct?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-2-ch03-117</dd></dl></li><li>The following code snippet contains an error. What is the
error?
<pre>
cost = int(input(&quot;Enter the cost: &quot;))
if cost &gt; 100
   cost = cost - 10
print(&quot;Discounted cost:&quot;, cost)
</pre><ol class="multiple-choice"><li class="correct">Syntax error: missing colon after <code>if</code>
statement</li><li>Logical error: use of an uninitialized variable</li><li>Syntax error: missing an <code>else</code> statement</li><li>Syntax error: incorrect indentation</li></ol><dl><dt>Section</dt><dd>3.1 The if statement</dd><dt>Title</dt><dd>Find the error in a code snippet containing an if statement</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-07</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-2-ch03-07</dd></dl></li><li>Assuming that the user provides 95 as input, what is the output
of the following code snippet?
<pre>
y = int(input(&quot;Please enter a number: &quot;))
if y &gt; 300 :
   x = y
else :
   x = 0
print(&quot;x:&quot;, x)
</pre><ol class="multiple-choice"><li class="correct"><code>x: 0</code></li><li><code>x: 95</code></li><li><code>x: 300</code></li><li>There is no output due to a syntax error</li></ol><dl><dt>Section</dt><dd>3.1 The if statement</dd><dt>Title</dt><dd>What is the output of an if/else statement for a given input value?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-08</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-2-ch03-08</dd></dl></li><li>What is printed by the following code snippet if
<code>itemCount</code> contains a value of 10 and <code>cost</code>
contains 80:
<pre>
if itemCount &gt; 5 :
   discount = 0.8
   totalCost = cost * discount
   print(&quot;Total discounted price is:&quot;, totalCost)
</pre><ol class="multiple-choice"><li>Nothing, the program will run but not print any results</li><li class="correct"><code>Total discounted price is: 64.0</code></li><li><code>Total discounted price is: 0.0</code></li><li><code>Total discounted price is: 16.0</code></li></ol><dl><dt>Section</dt><dd>3.1 The if statement</dd><dt>Title</dt><dd>What is the output of a compound statement?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-09</dd><dt>section</dt><dd>3.1 The if Statement</dd><dt>id</dt><dd>testbank-py-2-ch03-09</dd></dl></li><li>What is the error in this statement?
<pre>
if count = max :
   print(&quot;You win&quot;)
</pre><ol class="multiple-choice"><li class="correct">Equality is evaluated using two equal signs (<code>==</code>),
not one.</li><li>The <code>print</code> function should not be indented</li><li>There must be an <code>else</code> statement</li><li>Nothing, if <code>count</code> equals <code>max</code>, it
would print <code>&quot;You win&quot;</code></li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>What is the error in this statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-14</dd></dl></li><li>What is the opposite of this condition: <code>count &gt;
10</code>?
<ol class="multiple-choice"><li><code>count &gt;= 10</code></li><li><code>count &lt; 9</code></li><li class="correct"><code>count &lt;= 10</code></li><li><code>count &lt;= 9</code></li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>What is the opposite of a conditional statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-15</dd></dl></li><li>What is the output of the following code snippet if
<code>count</code> contains 56?
<pre>
if count % 2 == 0 :
   print(&quot;Count is an even number&quot;)
else :
print(&quot;Count is an odd number&quot;)
</pre><ol class="multiple-choice"><li><code>Count is an even number</code></li><li><code>Count is an odd number</code></li><li class="correct">Nothing, there is a syntax error</li><li>Nothing, the program runs but does not print any output</li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>What is the output of a code snippet with relational operators?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-16</dd></dl></li><li>What is the output of the following code snippet if
<code>count</code> contains 56?
<pre>
if count % 2 == 0 :
   print(&quot;Count is an even number&quot;)
else :
   print(&quot;Count is an odd number&quot;)
</pre><ol class="multiple-choice"><li class="correct"><code>Count is an even number</code></li><li><code>Count is an odd number</code></li><li>Nothing, there is a syntax error</li><li>Nothing, the program runs but does not print any output</li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>What is the output of a code snippet with relational operators?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-17</dd></dl></li><li>What type of operator is <code>&lt;=</code> operator?
<ol class="multiple-choice"><li>Lexicographic</li><li>Arithmetic</li><li>Inequality</li><li class="correct">Relational</li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>What type of operator is !&lt; operator?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-18</dd></dl></li><li>The operator <code>&gt;=</code> stands for
<ol class="multiple-choice"><li>greater than</li><li class="correct">greater than or equal to</li><li>not equal to</li><li>this is not a valid Python operator</li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>Which relational operator is this?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-19</dd></dl></li><li>Which statement correctly tests if the user entered the letter
<code>Y</code>?<ol class="multiple-choice"><li><code>if userInput = &quot;y&quot; :</code></li><li><code>if userInput = &quot;Y&quot; :</code></li><li class="correct"><code>if userInput == &quot;Y&quot; :</code></li><li><code>if userInput == &quot;y&quot; :</code></li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>Which statement correctly tests for a user input value?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-20</dd></dl></li><li>Assuming the user enters 15 as input, what is the output of the
following code snippet?
<pre>
number = int(input(&quot;Please enter a number: &quot;))
if number &gt;= 20 :
   print(&quot;The numer is big&quot;)
else :
   print(&quot;The number is small&quot;)
</pre><ol class="multiple-choice"><li>There is no output due to a syntax error</li><li><code>The number is big</code></li><li class="correct"><code>The number is small</code></li><li>The program runs successfully but does not print any
output</li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>What is the output of a given code snippet and given input value?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-21</dd></dl></li><li>What is the output of the following code snippet if the input
is 34?
<pre>
number = int(input(&quot;Please enter a number: &quot;))
if number != 20 :
   number = number + 1
else :
   number = number - 1
print(number)   
</pre><ol class="multiple-choice"><li><code>34</code></li><li><code>33</code></li><li class="correct"><code>35</code></li><li><code>36</code></li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>What is the output of a given code snippet and given input value?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-22</dd></dl></li><li>Assuming that the user enters a value of 45, what is the output
of the following code snippet?
<pre>
number = int(input(&quot;Please enter a number: &quot;))
if number &lt; 100 :
   number = number + 5
if number &lt; 500 :
   number = number - 2
if number &gt; 15 :
   number = number + 1
else :
   nmber = number - 1
print(number)
</pre><ol class="multiple-choice"><li><code>105</code></li><li><code>45</code></li><li><code>43</code></li><li class="correct"><code>49</code></li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>What is the output of a code statement containing multiple if statements and a given input value?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-23</dd></dl></li><li>In Python, which of the following orderings is used to compare
strings?<ol class="multiple-choice"><li>Semantic</li><li>Alphabetic</li><li>Syntatic</li><li class="correct">Lexicographic</li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>Which ordering is used to compare strings?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-26</dd></dl></li><li>Which of the following if statements is problematic because of
the limited precision of floating-point numbers?
<ol class="multiple-choice"><li><code>if 4 // 3 == 1 :</code></li><li class="correct"><code>if sqrt(2) * sqrt(2) == 2.0 :</code></li><li><code>if &quot;10&quot; == 5 :</code></li><li><code>if 4 &lt;= 4 :</code></li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>If statements and the limited precision of floating-point numbers</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-28</dd></dl></li><li>Consider the following code segment:
<pre>
s1 = &quot;CAT&quot;
s2 = &quot;cat&quot;
</pre><p>Which of the following if statements has a condition that
evaluates to <code>True</code>?</p><ol class="multiple-choice"><li><code>if s1 == s2 :</code></li><li><code>if s1 = s2 :</code></li><li class="correct"><code>if s1 &lt; s2 :</code></li><li><code>if s1 &gt;= s2 :</code></li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>Comparing strings with relational operators</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-29</dd></dl></li><li>Given the following list of strings, what is the correct order
using lexicographic ordering: <code>&quot;Ann&quot;, &quot;amy&quot;, &quot;Heather&quot;,
&quot;hanna&quot;, &quot;joe&quot;, &quot;john&quot;, &quot;Leo&quot;, &quot;Jim&quot;</code> ?<ol class="multiple-choice"><li class="codeCourier">amy, Ann, hanna, Heather, Jim, joe, john,
Leo</li><li class="correct">Ann, Heather, Jim, Leo, amy, hanna, joe,
john</li><li class="codeCourier">amy, hanna, joe, john, Ann, Heather, Jim,
Leo</li><li class="codeCourier">Leo, john, joe, Jim, Heather, hanna, Ann,
amy</li></ol><dl><dt>Section</dt><dd>3.2 Special Topic: Lexicographic Ordering of Strings</dd><dt>Title</dt><dd>Given a list of strings, what is the correct order using lexicographic ordering?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-31</dd></dl></li><li>
  Which of the following is <strong>not</strong> an example of a relational operator?

  <ol class="multiple-choice">
    <li class="correct"><code>=</code></li>
    <li><code>&lt;</code></li>
    <li><code>&lt;=</code></li>
    <li><code>!=</code></li>
  </ol>
<dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>Which of the following is not an example of a relational operator?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-118</dd></dl></li><li>
  Which expression is equivalent to the expression shown below?

  <pre>
  floor - 1 &lt; 13
  </pre>

  <ol class="multiple-choice">
    <li><code>13 &lt; floor - 1</code></li>
    <li><code>13 &gt;= floor - 1</code></li>
    <li><code>floor &lt; 12</code></li>
    <li class="correct"><code>floor - 1 &lt;= 12</code></li>
  </ol>
<dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>Which is expression is equivalent to the expression shown below?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-119</dd></dl></li><li>A store provides a 10% discount on items with a price of at
least $100. Otherwise, no discount is applicable. Which of the
following DOES NOT correctly compute the discount amount when the item's price is stored in the <code>price</code> variable?
<ol class="multiple-choice"><li><pre>
discount = 0
if price &gt;= 100 :
   discount = 0.10 * price   
</pre></li><li class="correct"><pre>
discount = 0.10 * price
if price &lt;= 100 :
   discount = 0
</pre></li><li><pre>
discount = 0
if price &gt;= 100 :
   discount = price / 10
</pre></li><li><pre>
discount = 10
if price &gt;= 100 :
   discount = 0.1 * price
else :
   discount = 0
</pre></li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>Which statement DOES NOT correctly compute the discount?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-24</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-24</dd></dl></li><li>Which of the following conditions is true, given that
<code>num1</code> contains 3 and <code>num2</code> contains 4?
<ol class="multiple-choice"><li><code>num1 + 1 &lt; num2</code></li><li><code>num1 + 1 &gt; num2</code></li><li><code>num1 + num2 != 7</code></li><li class="correct"><code>num1 - num2 &lt;= 0</code></li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>Which of the following conditions evaluates to True given two variables?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-25</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-25</dd></dl></li><li>Which condition will cause the statement block of the if statement to
execute only when <code>count</code> is 0?
<ol class="multiple-choice"><li><code>if count = 0 :</code></li><li><code>if count &lt; 0 :</code></li><li><code>if count =&lt; 0 :</code></li><li class="correct"><code>if count == 0 :</code></li></ol><dl><dt>Section</dt><dd>3.2 Relational Operators</dd><dt>Title</dt><dd>Which condition will cause the statement block of the if statement to execute?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-27</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-27</dd></dl></li><li>Which statement evaluates to <code>True</code> when comparing
the two strings:
<pre>
name1 = &quot;Heather&quot;
name2 = &quot;hanna&quot;
</pre>
<ol class="multiple-choice">
  <li><code>name1 == name2</code></li>
  <li><code>name1 &gt; name2</code></li>
  <li class="correct"><code>name1 &lt; name2</code></li>
  <li>Relational operators cannot be used to compare strings</li></ol><dl><dt>Section</dt><dd>3.2</dd><dt>Title</dt><dd>Which statement evaluates to true when comparing two strings?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-30</dd><dt>section</dt><dd>3.2 Relational Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-30</dd></dl></li><li>Assuming a user enters 30, 20, and 10 as the input values, what
is the output of the following code snippet?
<pre>
num1 = int(input(&quot;Enter a number: &quot;))
num2 = int(input(&quot;Enter a number: &quot;))
num3 = int(input(&quot;Enter a number: &quot;))
if num1 &gt; num2 :
   if num1 &gt; num3 :
      print(num1)
   else :
      print(num3)
else :
   if num2 &gt; num3 :
      print(num2)
   else :
      print(num3)
</pre><ol class="multiple-choice"><li>0</li><li>10</li><li>20</li><li class="correct">30</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>What is the output of the nested if code snippet given three input values?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-33</dd></dl></li><li>What is the output of the following code snippet?
<pre>
num1 = 100
if num1 &lt; 100 :
   if num1 &lt; 50 :
      num1 = num1 - 5
   else :
      num1 = num1 - 10
else :
   if num1 &gt; 150 :
      num1 = num1 + 5
   else :
      num1 = num1 + 10
print(num1)
</pre><ol class="multiple-choice"><li>95</li><li>100</li><li>105</li><li class="correct">110</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>What is the output of an if/else code snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-35</dd></dl></li><li>Which of the following options refers to the technique of
simulating program execution on a sheet of paper?<ol class="multiple-choice"><li>Compiling</li><li>Prototyping</li><li>Debugging</li><li class="correct">Tracing</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Which refers to the technique of simulating program execution on a sheet of paper?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-36</dd></dl></li><li>Which of the following code segments is an example of a nested
<code>if</code> statement?
<ol class="multiple-choice"><li><pre>
if a == b :
   print(a)
</pre></li><li><pre>
if a == b :
   print(a)
else :
   print(b)
</pre></li><li class="correct"><pre>
if a == b :
   print(a)
   if c == d :
      print(c)
</pre></li><li><pre>a = a - 1 if a &gt; 0 else a = a + 1</pre></li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Which of the following is an example of a nested if statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-38</dd></dl></li><li>Consider the following code segment:
<pre>
if a &gt; b :
   print(&quot;X&quot;)
   if a == b :
      print(&quot;Y&quot;)
</pre>
What is displayed if <code>a</code> is 1 and <code>b</code> is 0?
<ol class="multiple-choice"><li class="correct"><code>X</code></li><li><code>Y</code></li><li><code>X</code> followed by <code>Y</code> on the next line</li><li>Nothing</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Trace a nested if statement</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-39</dd></dl></li><li>Consider the following code segment:
<pre>
if a &gt; b :
   print(&quot;X&quot;)
   if a == b :
      print(&quot;Y&quot;)
</pre>
What is displayed if <code>a</code> is 0 and <code>b</code> is 0?
<ol class="multiple-choice"><li><code>X</code></li><li><code>Y</code></li><li><code>X</code> followed by <code>Y</code> on the next line</li><li class="correct">Nothing</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Trace a nested if statement</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-40</dd></dl></li><li>Consider the following code segment:
<pre>
if a &gt; b :
   print(&quot;X&quot;)
   if a == b :
      print(&quot;Y&quot;)
</pre>
What is displayed if <code>a</code> is 1 and <code>b</code> is 2?
<ol class="multiple-choice"><li><code>X</code></li><li><code>Y</code></li><li><code>X</code> followed by <code>Y</code> on the next line</li><li class="correct">Nothing</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Trace a nested if statement</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-41</dd></dl></li><li>Consider the following code segment:
<pre>
if a == b :
   print(&quot;W&quot;)
else :
   print(&quot;X&quot;)
   if b == c :
      print(&quot;Y&quot;)
   else :
      print(&quot;Z&quot;)
</pre><p>If <code>a</code>, <code>b</code> and <code>c</code> are all 0
then the output generated by this code segment is:</p><ol class="multiple-choice"><li class="correct"><code>W</code></li><li><code>W</code> followed by <code>Y</code> on the next line</li><li><code>X</code> followed by <code>Y</code> on the next line</li><li><code>W</code> followed by <code>X</code> on the next line,
followed by <code>Y</code> on the next line</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Trace nested if/else statements</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-42</dd></dl></li><li>Consider the following code segment:
<pre>
if a == b :
   print(&quot;W&quot;)
else :
   print(&quot;X&quot;)
   if b == c :
      print(&quot;Y&quot;)
   else :
      print(&quot;Z&quot;)
</pre><p>If <code>a</code> is 0, <code>b</code> is 1 and <code>c</code>
is 0 then the output generated by this code segment is:</p><ol class="multiple-choice"><li><code>W</code></li><li><code>X</code></li><li><code>X</code> followed by <code>Y</code> on the next line</li><li class="correct"><code>X</code> followed by <code>Z</code> on the next line</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Trace nested if/else statements</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-43</dd></dl></li><li>Consider the following code segment:
<pre>
if a == b :
   print(&quot;W&quot;)
else :
   print(&quot;X&quot;)
   if b == c :
      print(&quot;Y&quot;)
   else :
      print(&quot;Z&quot;)
</pre><p>If <code>a</code> is 0, <code>b</code> is 1 and <code>c</code>
is 1 then the output generated by this code segment is:</p><ol class="multiple-choice"><li><code>W</code></li><li><code>X</code></li><li class="correct"><code>X</code> followed by <code>Y</code> on the next line</li><li><code>X</code> followed by <code>Z</code> on the next line</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Trace nested if/else statements</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-44</dd></dl></li><li>What error will Python display when it attempts to execute the
following if/else statement?
<pre>
if a == b :
   print(&quot;Equal&quot;)
else :
   print(&quot;Not Equal&quot;)
      if a &gt; b :
         print(&quot;a is larger&quot;)
      else :
         print(&quot;b is larger&quot;)
</pre><ol class="multiple-choice"><li>Python will display an error indicating that <code>==</code>
should be replaced with <code>=</code></li><li>Python will display an error indicating that an if statement
cannot reside inside the body of an else</li><li class="correct">Python will display an error indicating that there is a problem
with the indentation</li><li>No error will be displayed</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Find the error in an if statement</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-45</dd></dl></li><li>What error will Python display when it attempts to execute the
following if/else statement?
<pre>
if a = b :
   print(&quot;Equal&quot;)
else :
   print(&quot;Not Equal&quot;)
   if a &gt; b :
      print(&quot;a is larger&quot;)
   else :
      print(&quot;b is larger&quot;)
</pre><ol class="multiple-choice"><li class="correct">Python will display an error indicating that <code>=</code>
is invalid sytax</li><li>Python will display an error indicating that an if statement
cannot reside inside the body of an else</li><li>Python will display an error indicating that there is a problem
with the indentation</li><li>No error will be displayed</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Find the error in an if statement</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-1-ch03-46</dd></dl></li><li>What is the definition of a nested statement?<ol class="multiple-choice">
    <li class="correct">A decision statement that is contained inside the statement block of another decision statement</li>
    <li>A compound statement that consists of a header and a statement
    block</li>
    <li>A decision statement that immediately follows another decision statement at the same indentation level </li>
    <li>A statement that is used to validate user input</li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>What is the definition of a nested statement?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-32</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-2-ch03-32</dd></dl></li><li>Assuming that a user enters 25 for the price of an item, which
of the following hand-trace tables is valid for the given code
snippet?
<pre>
price = 0
status = &quot;&quot;
price = float(input(&quot;Enter the price for your item: &quot;))
if price &gt;= 50 :
   status = &quot;reasonable&quot;
   if price &gt;= 75 :
      status = &quot;costly&quot;
else :
   status = &quot;inexpensive&quot;
   if price &lt;= 25 :
      status = &quot;cheap&quot;
</pre><ol class="multiple-choice"><li class="correct"><table cellspacing="0" border="1"><tr><td>price</td><td>status</td></tr><tr><td>0</td><td>&quot;inexpensive&quot;</td></tr><tr><td>25</td><td>&quot;cheap&quot;</td></tr></table></li><li><table cellspacing="0" border="1"><tr><td>price</td><td>status</td></tr><tr><td>0</td><td>&quot;inexpensive&quot;</td></tr><tr><td>25</td><td>&quot;reasonable&quot;</td></tr></table></li><li><table cellspacing="0" border="1"><tr><td>price</td><td>status</td></tr><tr><td>0</td><td>&quot;inexpensive&quot;</td></tr><tr><td>25</td><td>&quot;reasonable&quot;</td></tr><tr><td/><td>&quot;costly&quot;</td></tr></table></li><li><table cellspacing="0" border="1"><tr><td>price</td><td>status</td></tr><tr><td>0</td><td>&quot;inexpensive&quot;</td></tr><tr><td>25</td><td>&quot;costly&quot;</td></tr></table></li></ol><dl><dt>Section</dt><dd>3.3 Nested Branches</dd><dt>Title</dt><dd>Which hand-trace table is valid for this snippet?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-37</dd><dt>section</dt><dd>3.3 Nested Branches</dd><dt>id</dt><dd>testbank-py-2-ch03-37</dd></dl></li><li>What is the output of the following code snippet when the user
enters 75 as the grade?
<pre>
grade = int(input(&quot;Enter student grade: &quot;))
if grade &gt;= 90 :
   letterGrade = &quot;A&quot;
if grade &gt;= 80 :
   letterGrade = &quot;B&quot;
if grade &gt;= 70 :
   letterGrade = &quot;C&quot;
if grade &gt;= 60 :
   letterGrade = &quot;D&quot;
else :
   letterGrade = &quot;E&quot;
print(letterGrade)
</pre><ol class="multiple-choice"><li>A</li><li>B</li><li>C</li><li class="correct">D</li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is the output of an if statement with multiple alternatives?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-47</dd></dl></li><li>What is the wrong with the following code snippet?
<pre>
grade = int(input(&quot;Enter student grade: &quot;))
if grade &gt;= 90 :
   letterGrade = &quot;A&quot;
if grade &gt;= 80 :
   letterGrade = &quot;B&quot;
if grade &gt;= 70 :
   letterGrade = &quot;C&quot;
if grade &gt;= 60 :
   letterGrade = &quot;D&quot;
else :
   letterGrade = &quot;E&quot;
print(letterGrade)
</pre><ol class="multiple-choice"><li>Everyone will get an &quot;E&quot;</li><li class="correct">Anyone with a grade higher than 60 will receive a &quot;D&quot;</li><li>Nothing is wrong, students will get the correct grade</li><li>The code block will not compile</li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is the wrong with the code snippet that has multiple alternatives?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-48</dd></dl></li><li>What is the output of the following code snippet?
<pre>
x = 20
if x &lt;= 20 :
   print(&quot;1&quot;, end=&quot;&quot;)
if x &lt;=40 :
   print(&quot;2&quot;, end=&quot;&quot;)
if x &lt;= 30 :
   print(&quot;3&quot;, end=&quot;&quot;)
</pre><ol class="multiple-choice"><li>1</li><li>2</li><li>3</li><li class="correct">123</li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is the output of the following code snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-50</dd></dl></li><li>Consider the following code snippet:
<pre>
number = int(input(&quot;Enter a number: &quot;))
if number &gt; 30 :
   ...
elif number &gt; 20 :
   ...
elif number &gt; 10 :
   ...
else :
   ...
</pre>
Assuming that the user input is 40, which block of statements is
executed?
<ol class="multiple-choice"><li class="correct"><code>if number &gt; 30 : ...</code></li><li><code>else if number &gt; 20 : ...</code></li><li><code>else if number &gt; 10 : ...</code></li><li><code>else : ...</code></li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>Which statement is executed when the user enters 40 for the input value?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-51</dd></dl></li><li>Consider the following code snippet:
<pre>
number = int(input(&quot;Enter a number: &quot;))
if number &lt; 10 :
   print(&quot;Too small&quot;)
elif number &lt; 50 :
   print(&quot;Intermediate&quot;)
elif number &lt; 100 :
   print(&quot;High&quot;)
else :
   print(&quot;Too high&quot;)
</pre>
Assuming that the user input is 60, what is the output of the this
code snippet?
<ol class="multiple-choice"><li><code>Too high</code></li><li class="correct"><code>High</code></li><li><code>Intermediate</code></li><li><code>Too small</code></li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is output of the if/elif/else snippet with this input?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-52</dd></dl></li><li>Consider the following code snippet.
<pre>
num1 = 0
num2 = 0
num3 = 0
num4 = 0
num5 = 0
num1 = int(input(&quot;Enter a number: &quot;))
num2 = int(input(&quot;Enter a number: &quot;))
if num1 &lt; num2 :
   num3 = num1
else :
   num3 = num2

if num1 &lt; num2 + 10 :
   num4 = num1
elif num1 &lt; num2 + 20 :
   num5 = num1
print(&quot;num1 =&quot;, num1, &quot;num2 =&quot;, num2, &quot;num3 =&quot;, num3, 
      &quot;num4 =&quot;, num4, &quot;num5 =&quot;, num5)
</pre>
Assuming that the user enters the numbers 20 and 12 as the two
input values, what is the output of the code snippet?
<ol class="multiple-choice"><li><code>num1 = 20 num2 = 12 num3 = 20 num4 = 0 num5 =
20</code></li><li class="correct"><code>num1 = 20 num2 = 12 num3 = 12 num4 = 20 num5 =
0</code></li><li><code>num1 = 20 num2 = 12 num3 = 12 num4 = 0 num5 =
20</code></li><li><code>num1 = 20 num2 = 12 num3 = 20 num4 = 20 num5 =
0</code></li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is output of the if/else and if/elif snippet with two input values?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-53</dd></dl></li><li>What is the value of the price variable after the following
code snippet is executed?
<pre>
price = 42
if price &lt; 40 :
   price = price + 10
if price &gt; 30 :
   price = price * 2
if price &lt; 100 :
  price = price - 20
</pre><ol class="multiple-choice"><li><code>42</code></li><li><code>52</code></li><li><code>84</code></li><li class="correct"><code>64</code></li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is value of a variable after (if/if/if) snippet is executed?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-54</dd></dl></li><li>Consider the following code snippet:
<pre>
age = int(input(&quot;Enter your age: &quot;))
if age &lt; 10 :
   print(&quot;Child&quot;)
if age &lt; 30 :
   print(&quot;Young Adult&quot;)
if age &lt; 70 :
   print(&quot;Old&quot;)
if age &lt; 100 :
   print(&quot;Impressively old&quot;)
</pre>
Assuming that the user inputs 80 as the age, what is the output?
<ol class="multiple-choice"><li><pre>
Child
Young adult
Old
</pre></li><li><pre>
Young adult
Old
</pre></li><li class="correct"><pre>
Impressively old
</pre></li><li><pre>
Child
Young adult
Old
Impressive old
</pre></li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is output of the code snippet with this input?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-55</dd></dl></li><li>Consider the follow code segment. It is supposed to convert
numeric marks to letter grades. However, it may contain a bug.
Examine the program, and identify what bug, if any, is present.
<pre>
grade = &quot;F&quot;
if mark &gt;= 80 :
   grade = &quot;A&quot;
if mark &gt;= 70 :
   grade = &quot;B&quot;
if mark &gt;= 60 :
   grade = &quot;C&quot;
if mark &gt;= 50 :
   grade = &quot;D&quot;
</pre><ol class="multiple-choice"><li>The greater than or equal signs need to be replaced with equal
signs</li><li class="correct">All instances of if, except the first, need to be replaced with
elif</li><li>All instances of if, except the first, need to be replaced with
else</li><li>There is nothing wrong with the code segment (it works as
intended)</li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is wrong with this multiple alternatives statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-58</dd></dl></li><li>Consider the follow code segment. It is designed to classify
widgets as too small if they are less than 10mm in diameter or too
large if they are 15mm in diameter or more. Otherwise they should
be classified as just right. However, this code may contain a bug.
Examine the program, and identify what bug, if any, is present.
<pre>
if size &gt;= 0 :
   print(&quot;Too small&quot;)
elif size &gt;= 10 :
   print(&quot;Just right&quot;)
elif size &gt;= 15 :
   print(&quot;Too big&quot;)
</pre><ol class="multiple-choice"><li>The greater than or equal signs need to be replaced with
greater than signs</li><li>All instances of elif need to be replaced with else</li><li class="correct">The order of the conditions (and bodies) must be changed</li><li>There is nothing wrong with the code segment (it works as
intended)</li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is wrong with this multiple alternatives statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-59</dd></dl></li><li>Consider the following code segment. It is designed to convert
letter grades to grade points. Examine the program, and identify
what bug, if any, is present.
<pre>
if letter == &quot;A&quot; :
   gradePoints = 4.0
elif letter == &quot;B&quot; :
   gradePoints = 3.0
elif letter == &quot;C&quot; :
   gradePoints = 2.0
elif letter == &quot;D&quot; :
   gradePoints = 1.0
else :
   gradePoints = 0.0
</pre><ol class="multiple-choice"><li>The double equal signs need to be replaced with greater than or
equal signs</li><li>All instances of elif need to be replaced with else</li><li>The order of the conditions (and bodies) must be changed</li><li class="correct">There is nothing wrong with the code segment (it works as
intended)</li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is wrong with this multiple alternatives statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-60</dd></dl></li><li>
  Assume that the following import statements appear at the beginning of your program:
  
  <pre>
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from email.mime.application import MIMEApplication
</pre>
  
  Which statement creates a new email message that can contain both text and images?

  <ol class="multiple-choice">
    <li><code>msg = MIMEApplication()</code></li>
    <li><code>msg = MIMEImage()</code></li>
    <li class="correct"><code>msg = MIMEMultipart()</code></li>
    <li><code>msg = MIMEText()</code></li>
  </ol>
<dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>Which statement creates a new email message that can contain both text and images?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-2-ch03-113</dd></dl></li><li>
  Which part of an email message includes information about the sender and the recipient?

  <ol class="multiple-choice">
    <li>The application</li>
    <li>The attachment</li>
    <li>The footer</li>
    <li class="correct">The header</li>
  </ol>
<dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>Which part of an email message includes information about the sender and the recipient?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-2-ch03-114</dd></dl></li><li>
  What type of object needs to be created to attach a PDF file to an email message?

  <ol class="multiple-choice">
    <li class="correct"><code>MIMEApplication</code></li>
    <li><code>MIMEDocument</code></li>
    <li><code>MIMEImage</code></li>
    <li><code>MIMEPDF</code></li>
  </ol>
<dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What type of object needs to be created to attach a PDF file to an email message?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-2-ch03-115</dd></dl></li><li>
  What library needs to be imported to send a message after it has been created?

  <ol class="multiple-choice">
    <li><code>email</code></li>
    <li><code>login</code></li>
    <li><code>mimelib</code></li>
    <li class="correct"><code>smtplib</code></li>
  </ol>
<dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What library needs to be imported to send a message after it has been created?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-2-ch03-116</dd></dl></li><li>
  Which type of statement should be used to choose exactly one of several alternatives?

  <ol class="multiple-choice">
    <li>if</li>
    <li>if-elif</li>
    <li>if-else</li>
    <li class="correct">if-elif-else</li>
  </ol>
<dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>Which type of statement should be used to choose exactly one of several alternatives?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-2-ch03-120</dd></dl></li><li>Given that the following code is incorrect, what code would fix
the following code snippet?
<pre>
grade = int(input(&quot;Enter student grade: &quot;))
if grade &gt;= 90 :
   letterGrade = &quot;A&quot;
if grade &gt;= 80 :
   letterGrade = &quot;B&quot;
if grade &gt;= 70 :
   letterGrade = &quot;C&quot;
if grade &gt;= 60 :
   letterGrade = &quot;D&quot;
else :
   letterGrade = &quot;E&quot;
print(letterGrade)
</pre><ol class="multiple-choice">
<li class="correct">Change the <code>if</code> statements to <code>elif</code>
statements (except the first one)</li>
<li>Change the <code>if</code> statements to <code>else</code>
statements (except the first one)</li>
<li>Reverse the order of the <code>if</code> statements</li>
<li>Change the last statement to <code>if</code> instead of
<code>else</code></li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>How can you correct a code snippet that has multiple alternatives?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-49</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-2-ch03-49</dd></dl></li><li>Consider the following code snippet:
<pre>
age = int(input(&quot;Enter your age:&quot;))
if age &lt; 10 :
   print(&quot;Child&quot;, end=&quot;&quot;)
if age &lt; 30 :
   print(&quot;Young Adult&quot;, end=&quot;&quot;)
if age &lt; 70 :
   print(&quot;Old&quot;, end=&quot;&quot;)
if age &lt; 100 :
   print(&quot;Impressively old&quot;, end=&quot;&quot;)
</pre>
Assuming that the user inputs 30 as the age, what is the output?
<ol class="multiple-choice">
  <li><code>ChildYoung adultOldImpressively old</code></li>
  <li><code>Young adultOldImpressively old</code></li>
  <li class="correct"><code>OldImpressively old</code></li>
  <li><code>Impressively old</code></li>
</ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is output of the code snippet with this input?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-1-ch03-56</dd></dl></li><li>Consider the following code snippet:
<pre>
age = int(input(&quot;Enter your age: &quot;))
if age &lt; 10 :
   print(&quot;Child&quot;, end=&quot;&quot;)
if age &lt; 30 :
   print(&quot;Young Adult&quot;, end=&quot;&quot;)
if age &lt; 70 :
   print(&quot;Old&quot;, end=&quot;&quot;)
if age &lt; 100 :
   print(&quot;Impressively old&quot;, end=&quot;&quot;)
</pre>
Assuming that the user inputs 5 as the age, what is the output?
<ol class="multiple-choice">
  <li><code>Child</code></li>
  <li><code>ChildYoung Adult</code></li>
  <li><code>ChildYoung AdultOld</code></li>
  <li class="correct"><code>ChildYoung adultOldImpressively old</code></li></ol><dl><dt>Section</dt><dd>3.4 Multiple Alternatives</dd><dt>Title</dt><dd>What is output of the code snippet with this input?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-57</dd><dt>section</dt><dd>3.4 Multiple Alternatives</dd><dt>id</dt><dd>testbank-py-2-ch03-57</dd></dl></li><li>Flowcharts are made up of all the following elements,
EXCEPT:<ol class="multiple-choice"><li>elements for tasks</li><li>elements for input/output</li><li class="correct">elements for pseudocode</li><li>elements for decisions</li></ol><dl><dt>Section</dt><dd>3.5 Problem Solving: Flowcharts</dd><dt>Title</dt><dd>What are the parts of a flowchart?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.5 Problem Solving: Flowcharts</dd><dt>id</dt><dd>testbank-py-1-ch03-61</dd></dl></li><li>The flowchart shows the order in which steps should be
executed, and the diamond-shaped boxes indicate:<ol class="multiple-choice"><li>input</li><li>algorithms</li><li>tasks</li><li class="correct">decision statements</li></ol><dl><dt>Section</dt><dd>3.5 Problem Solving: Flowcharts</dd><dt>Title</dt><dd>What are the parts of a flowchart?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.5 Problem Solving: Flowcharts</dd><dt>id</dt><dd>testbank-py-1-ch03-62</dd></dl></li><li>
  A messy network of possible pathways through a program is referred to as:

  <ol class="multiple-choice">
    <li>knotted logic</li>
    <li class="correct">spaghetti code</li>
    <li>twisted conditions</li>
    <li>zigzag functions</li>
  </ol>
<dl><dt>Section</dt><dd>3.5 Problem Solving: Flowcharts</dd><dt>Title</dt><dd>A messy network of possible pathways through a program is referred to as:</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.5 Problem Solving: Flowcharts</dd><dt>id</dt><dd>testbank-py-2-ch03-121</dd></dl></li><li>When testing code for correctness, it always makes sense
to<ol class="multiple-choice"><li class="correct">Aim for complete coverage of all decision points</li><li>Identify boundary cases and test them</li><li>Check all cases using hand-tracing</li><li>Assume invalid input will never occur</li></ol><dl><dt>Section</dt><dd>3.6 Problem Solving: Test Cases</dd><dt>Title</dt><dd>What is reasonable for checking/testing code?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.6 Problem Solving: Test Cases</dd><dt>id</dt><dd>testbank-py-1-ch03-63</dd></dl></li><li>Consider the following code segment:
<pre>
if a == 0 :
   print(&quot;a is 0&quot;)
elif a &lt; 0 :
   print(&quot;a is less than 0&quot;)
else :
   print(&quot;a is greater than 0&quot;)
</pre><p>What is the minimum number of test cases needed to test every
line of code in this segment?</p><ol class="multiple-choice"><li>2</li><li class="correct">3</li><li>4</li><li>5</li></ol><dl><dt>Section</dt><dd>3.6 Problem Solving: Test Cases</dd><dt>Title</dt><dd>How many test cases are needed to test every line of code in this segment?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.6 Problem Solving: Test Cases</dd><dt>id</dt><dd>testbank-py-1-ch03-64</dd></dl></li><li>Which operators listed below are considered boolean
operators:<ol class="multiple-choice"><li><code>&lt;</code> / <code>&gt;</code></li><li class="correct"><code>and</code> / <code>or</code></li><li><code>==</code> / <code>!=</code></li><li><code>&lt;=</code> / <code>&gt;=</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What are boolean operators?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-66</dd></dl></li><li>Consider the following code snippet:
<pre>
emp = int(input(&quot;Enter Celsius temperature: &quot;))
if temp &gt; 0 and temp &lt; 100 :
   print(&quot;Liquid&quot;)
if temp &lt;= 0 or temp &gt;= 100 :
   print(&quot;Not liquid&quot;) 
</pre>
Assuming the user enters a value of 120, what will be the output:
<ol class="multiple-choice"><li>Nothing is printed</li><li><code>Liquid</code></li><li class="correct"><code>Not Liquid</code></li><li><code>LiquidNotLiquid</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Given a code snippet and an input value, what output is produced?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-67</dd></dl></li><li>Which of the following variables is used to store a condition
that can be either <code>True</code> or <code>False</code>?
<ol class="multiple-choice"><li>Logical</li><li class="correct">Boolean</li><li>Algebraic</li><li>Conditional</li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What kind of variable is used to store a true/false condition?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-68</dd></dl></li><li>Rewrite the following algebraic expression to an equivalent
Python expression: <p>32 &lt;= temp &lt;= 100</p><ol class="multiple-choice"><li><code>if temp &lt;= 32 and temp &lt;= 100</code></li><li><code>if temp &lt;= 32 or temp &lt;= 100</code></li><li class="correct"><code>if temp &gt;= 32 and temp &lt;= 100</code></li><li><code>if temp &gt;= 32 or temp &lt;= 100</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Rewrite an algebraic expression into the equivelant Python expression?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-71</dd></dl></li><li>What value causes the following logical expression to
'short-circuit'?<pre>if temp &gt;= 32 and temp &lt;= 100</pre><ol class="multiple-choice"><li class="correct"><code>temp = 0</code></li><li><code>temp = 32</code></li><li><code>temp = 100</code></li><li><code>temp = 75</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What value causes a given expression to short-circuit?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-72</dd></dl></li><li>Using De Morgan's law, what is the equivalent to this
statement?<pre>if not (state == &quot;PA&quot; or state == &quot;OH&quot;)</pre><ol class="multiple-choice"><li class="correct"><code>if state != &quot;PA&quot; and state != &quot;OH&quot;</code></li><li><code>if state != &quot;PA&quot; or state != &quot;OH&quot;</code></li><li><code>if state == &quot;PA&quot; and state == &quot;OH&quot;</code></li><li><code>if state == &quot;PA&quot; or state == &quot;OH&quot;</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Using De Morgan's law, identify an equivalent expression?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-74</dd></dl></li><li>Using De Morgan's law, what is the equivalent to this
statement?<pre>if not (state == &quot;PA&quot; and state == &quot;OH&quot;)</pre><ol class="multiple-choice"><li><code>if state != &quot;PA&quot; and state != &quot;OH&quot;</code></li><li class="correct"><code>if state != &quot;PA&quot; or state != &quot;OH&quot;</code></li><li><code>if state == &quot;PA&quot; and state == &quot;OH&quot;</code></li><li><code>if state == &quot;PA&quot; or state == &quot;OH&quot;</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Using De Morgan's law, identify an equivelant expression?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-75</dd></dl></li><li>Consider the following code snippet:
<pre>
attendance = True
failed = False
</pre>
Which of the following <code>if</code> statements include a
condition that evaluates to <code>True</code>?<ol class="multiple-choice"><li><code>if attendance == &quot;true&quot; :</code></li><li class="correct"><code>if attendance :</code></li><li><code>if failed :</code></li><li><code>if attendance == failed :</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What if statements include a condition that evaluates to true?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-76</dd></dl></li><li>Consider the following code snippet:
<pre>
age = int(input(&quot;Enter your age: &quot;))
if age &lt; 13 :
   print(&quot;Child&quot;, end=&quot;&quot;)
if age &gt;= 13 and age &lt;= 19 :
   print(&quot;Teen&quot;, end=&quot;&quot;)
if age &gt; 19 and age &lt; 30 :
   print(&quot;Young adult&quot;, end=&quot;&quot;)
if age &gt;= 30 and age &lt;= 50 :
   print(&quot;Adult&quot;, end=&quot;&quot;)
if age &gt; 50 :
   print(&quot;Young at heart&quot;, end=&quot;&quot;)
</pre>
Assuming that the user enters 55 as the age, what is the output?
<ol class="multiple-choice"><li><code>Teen</code></li><li class="correct"><code>Young at heart</code></li><li><code>Child</code></li><li><code>Adult</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What is output of the code snippet with this input?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-77</dd></dl></li><li>Given the following code snippet:
<pre>
grade = int(input(&quot;Enter student grade: &quot;))
if grade &gt;= 90 :
   letterGrade = &quot;A&quot;
elif grade &gt;= 80 and grade &lt; 90 :
   letterGrade = &quot;B&quot;
elif grade &gt;= 70 and grade &lt; 80 :
   letterGrade = &quot;C&quot;
elif grade &gt;= 60 and grade &lt; 70 :
   letterGrade = &quot;D&quot;
else :
   letterGrade = &quot;E&quot;
print(letterGrade)
</pre>
what is value of <code>grade</code> when the user enters 75?
<ol class="multiple-choice"><li><code>&quot;A&quot;</code></li><li><code>&quot;B&quot;</code></li><li class="correct"><code>&quot;C&quot;</code></li><li><code>&quot;D&quot;</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What is the output of a code snippet given a specific input value?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-80</dd></dl></li><li>Which of the following operators is used to invert a
conditional statement?<ol class="multiple-choice"><li>or</li><li>and</li><li class="correct">not</li><li>equal</li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which operator is used to invert a conditional statement?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-81</dd></dl></li><li>Given that the following code snippet:
<pre>
isFelon = False
answer = input(&quot;have you ever committed a felony? &quot;)
if answer == &quot;Yes&quot; or answer == &quot;yes&quot; :
   isFelon = True
age = int(input(&quot;what is your age? &quot;))  
</pre>
which statement assigns the variable <code>mayVote</code> a value
of <code>True</code> if a person may vote if they are 18 or older
and not a felon?
<ol class="multiple-choice"><li><code>mayVote = age &gt; 18 or not isFelon</code></li><li><code>mayVote = not ( age &gt;= 18 and isFelon)</code></li><li class="correct"><code>mayVote = age &gt;= 18 and not isFelon</code></li><li><code>mayVote = not ( age &gt;= 18 or isFelon)</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which of the following statements assigns the Boolean variable correctly?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-83</dd></dl></li><li>Given the following code snippet:
<pre>
MIN_SPEED = 45
MAX_SPEED = 65
speed = 55
if not (speed &lt; MAX_SPEED) :
   speed = speed - 10
if not (speed &gt; MIN_SPEED) :
   speed = speed + 10
print(speed) 
</pre>
what output is produced?
<ol class="multiple-choice"><li><code>45</code></li><li class="correct"><code>55</code></li><li><code>65</code></li><li><code>50</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What is the output of a Boolean not code snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-84</dd></dl></li><li>Given the following code snippet:
<pre>
score = 0
price = 100.0
if score &gt; 0 and price &lt; 200 and price / score &gt; 10 :
   print(&quot;buy!&quot;)
</pre>
which of the following statements is true?
<ol class="multiple-choice"><li>The output is <code>buy!</code></li><li class="correct">The code snippet runs, but there is no output</li><li>The code snippet has syntax errors</li><li>The code snippet causes a divide-by-zero exception</li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which statement is true on the basis of this code snippet?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-85</dd></dl></li><li>Which of the following options checks that <code>city</code> is
neither Atlanta or Philadelphia?<ol class="multiple-choice"><li><code>if not city == &quot;Atlanta&quot; or not city ==
&quot;Philadelphia&quot;</code></li><li class="correct"><code>if not (city == &quot;Atlanta&quot; or city ==
&quot;Philadelphia&quot;</code>)</li><li><code>if not (city == &quot;Atlanta&quot; and city ==
&quot;Philadelphia&quot;</code>)</li><li><code>if not city == &quot;Atlanta&quot; or city ==
&quot;Philadelphia&quot;</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which of the following options checks that city is neither Atlanta or Philadelphia?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-86</dd></dl></li><li>Assuming a user enters 30, 55, and 10 as the input, what is the
output of the following code snippet?
<pre>
num1 = int(input(&quot;Enter a number: &quot;))
num2 = int(input(&quot;Enter a number: &quot;))
num3 = int(input(&quot;Enter a number: &quot;))
if not (num1 &gt; num2 and num1 &gt; num3) :
   print(num1)
elif not(num2 &gt; num1 and num2 &gt; num3) :
   print(num2)
elif not (num3 &gt; num1 and num3 &gt; num2) :
   print(num3) 
</pre><ol class="multiple-choice"><li>55</li><li>10</li><li>0</li><li class="correct">30</li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What is the output of the nested if code snippet given three input values?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-87</dd></dl></li><li>Assuming a user enters 30, 55, and 10 as the input, what is the
output of the following code snippet?
<pre>
num1 = int(input(&quot;Enter a number: &quot;))
num2 = int(input(&quot;Enter a number: &quot;))
num3 = int(input(&quot;Enter a number: &quot;))
if num1 &gt; num2 and num1 &gt; num3 :
   print(num1)
elif num2 &gt; num1 and num2 &gt; num3 :
   print(num2)
elif num3 &gt; num1 and num3 &gt; num2 :
   print(num3) 
</pre><ol class="multiple-choice"><li class="correct">55</li><li>10</li><li>0</li><li>30</li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What is the output of the nested if code snippet given three input values?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-88</dd></dl></li><li>Which of the following conditions is <code>True</code> only
when the variables <code>a</code>, <code>b</code>, and
<code>c</code> contain three different values?
<ol class="multiple-choice"><li class="correct"><code>if a != b and a != c and b != c :</code></li><li><code>if a != b or a != c or b != c :</code></li><li><code>if not (a == b and b == c and a == c) :</code></li><li><code>if a != b != c :</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which of the following conditions is true only when the variables a, b, and c contain three different values?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-89</dd></dl></li><li>Consider the following code segment. It should display a
message only if the cost is between 50 and 75 dollars. The message
should also be displayed if the cost is exactly 50 dollars or
exactly 75 dollars.
<pre>
if _________________ :
  print(&quot;The cost is in the desired range&quot;)
</pre><p>What condition should be placed in the blank to achieve the
desired behavior?</p><ol class="multiple-choice"><li><code>cost &gt; 50</code></li><li><code>cost &lt; 75</code></li><li class="correct"><code>cost &gt;= 50 and cost &lt;= 75</code></li><li><code>cost &gt;= 50 or cost &lt;= 75</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variable and Operators</dd><dt>Title</dt><dd>Complete an if statement with an appropriate condition</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-90</dd></dl></li><li>Water is liquid between 0 and 100 degrees Celsius. The
following code segment should display a message if the water is
<strong>not</strong> liquid. For this question, we will assume that
water is liquid if it is exactly 0 degrees or exactly 100 degrees.
<pre>
if _________________ :
  print(&quot;The water is not liquid&quot;)
</pre><p>What condition should be placed in the blank to achieve the
desired behavior?</p><ol class="multiple-choice"><li><code>temp &lt; 0</code></li><li><code>temp &gt; 100</code></li><li><code>temp &lt; 0 and temp &gt; 100</code></li><li class="correct"><code>temp &lt; 0 or temp &gt; 100</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Complete an if statement with an appropriate condition</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-91</dd></dl></li><li>Suppose that <code>b</code> is <code>False</code> and
<code>x</code> is 0. Which of the following expressions evaluates
to <code>True</code>?
<ol class="multiple-choice"><li><code>b or x == 1</code></li><li><code>b and x == 0</code></li><li><code>not b and x == 1</code></li><li class="correct"><code>not b or x == 1</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which of the following expressions evaluates to True?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-92</dd></dl></li><li>Suppose that <code>b</code> is <code>False</code> and
<code>x</code> is 0. Which of the following expressions evaluates
to <code>True</code>?
<ol class="multiple-choice"><li><code>not b and x == 1</code></li><li><code>b or x == -1</code></li><li class="correct"><code>not b or b</code></li><li><code>x == 1 or x == -1</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which of the following expressions evaluates to True?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-1-ch03-93</dd></dl></li><li>
  Which operator has the lowest precedence?

  <ol class="multiple-choice">
    <li><code>!=</code></li>
    <li><code>*</code></li>
    <li><code>**</code></li>
    <li class="correct"><code>and</code></li>
  </ol>
<dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which operator has the lowest precedence?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-122</dd></dl></li><li>Which of the following values make the expression <code>not x
    == y and z &gt; x</code> true?<ol class="multiple-choice">
    <li><code>x = 10, y = 10, z = 15</code></li>
    <li class="correct"><code>x = 10, y = 20, z = 15</code></li>
    <li><code>x = 10, y = 2, z = 5</code></li>
    <li><code>x = 10, y = 20, z = 10</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which of the following values make the expression not x == y and z &gt; x true?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-34</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-34</dd></dl></li><li>What two values does the Boolean (<code>bool</code>) data type have in Python?<ol class="multiple-choice"><li>Yes / No</li><li class="correct">True / False</li><li>0 / 1</li><li>-1 / 1</li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What are the values of a boolean variable?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-65</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-65</dd></dl></li><li>Given two variables x and y, how do you test whether exactly
one of them is zero?
<ol class="multiple-choice">
  <li><code>if x == 0 or y == 0 :</code></li>
  <li><code>if x = 0 or y = 0 :</code></li>
  <li class="correct"><code>if x == 0 and y != 0 or y == 0 and x != 0 :</code></li>
  <li><code>if x == 0 and y != 0 and y == 0 and x != 0 :</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Given a code snippet, determine the correct boolean expression to test for a given condition?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-69</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-69</dd></dl></li><li>Given two variables x and y, how do you test whether at least
one of them is zero?
<ol class="multiple-choice">
  <li class="correct"><code>if x == 0 or y == 0 :</code></li>
  <li><code>if x = 0 or y = 0 :</code></li>
  <li><code>if x == 0 and y != 0 or y == 0 and x != 0 :</code></li>
  <li><code>if x == 0 and y != 0 and y == 0 and x != 0 :</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Given a code snippet, determine the correct boolean expression to test for a given condition?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-70</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-70</dd></dl></li><li>The following logical expression will
'short-circuit'...
<pre>quantity &gt; 0 and price/quantity &lt; 10</pre>
<ol class="multiple-choice">
  <li class="correct">When <code>quantity</code> is equal to 0</li>
  <li>When <code>quantity</code> is equal to 5</li>
  <li>When <code>price/quantity</code> is less than 10</li>
  <li>When <code>price/quantity</code> is greater than 10</li>
</ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>What value causes a given expression to short-circuit?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-73</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-73</dd></dl></li><li>Which of the following expressions represents a legal way of
checking whether a value assigned to the <code>num</code> variable
falls within the range 0 to 150 (inclusive)?<ol class="multiple-choice">
  <li><code>if num &gt;= 150 and num &lt;= 0 :</code></li>
  <li class="correct"><code>if num &gt;= 0 and num &lt;= 150 :</code></li>
  <li><code>if num &gt;= 0 or num &lt;= 150 :</code></li>
  <li><code>if num &gt;= 150 or num &lt;= 0 :</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which expression checks whether a value falls between 0 and 150 inclusive?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-78</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-78</dd></dl></li><li>Which of the following expressions represents a legal way of
checking whether a value assigned to the <code>num</code> variable
is either less than 100 or more than 200?<ol class="multiple-choice">
  <li><code>if num &lt; 100 and num &gt; 200 :</code></li>
  <li><code>if num &lt; 100 and num &gt; 200 :</code></li>
  <li class="correct"><code>if num &lt; 100 or num &gt; 200 :</code></li>
  <li><code>if num &lt;= 100 or num &gt;= 200 :</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which of the following expressions represents a legal way of checking whether a value assigned to the num variable is either less than 100 or more than 200?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-79</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-79</dd></dl></li><li>Which of the following conditions is true only when the integer
  variable middle is between 0 and 10 inclusive?<ol class="multiple-choice">
    <li class="correct"><code>middle &gt;= 0 and middle &lt;= 10</code></li>
    <li><code>0 &lt; middle &lt; 10</code></li>
    <li><code>0 &lt;= middle or middle &lt;= 10</code></li>
    <li><code>middle &gt; 0 and middle &lt; 10</code></li></ol><dl><dt>Section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>Title</dt><dd>Which of the following conditions is true only when the integer variable middle is between 0 and 10?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-82</dd><dt>section</dt><dd>3.7 Boolean Variables and Operators</dd><dt>id</dt><dd>testbank-py-2-ch03-82</dd></dl></li><li>What string method can be used to determine if the string
contained in the variable <code>text</code> only consists of
numbers?
<ol class="multiple-choice"><li><code>text.isalnum()</code></li><li><code>text.isalpha()</code></li><li class="correct"><code>text.isdigit()</code></li><li><code>text.islower()</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>What String method checks for all numbers in a variable?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-100</dd></dl></li><li>What will be printed by the following code snippet?
<pre>
name = &quot;Ravi Avalon&quot;
counter = name.count(&quot;av&quot;)
print(counter) 
</pre><ol class="multiple-choice"><li><code>0</code></li><li class="correct"><code>1</code></li><li><code>2</code></li><li><code>-1</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>What value is returned when using the String method count?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-101</dd></dl></li><li>What will be printed by the following code snippet?
<pre>
name = &quot;Dino the Dinosaur&quot;
counter = name.count(&quot;Di&quot;)
print(counter)
</pre><ol class="multiple-choice"><li><code>0</code></li><li><code>1</code></li><li class="correct"><code>2</code></li><li><code>-1</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>What value is returned when using the String method count?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-102</dd></dl></li><li>Which of the following statements returns the number of blank
spaces contained in the string <code>sentence</code>?
<ol class="multiple-choice"><li class="correct"><code>sentence.count(&quot; &quot;)</code></li><li><code>&quot; &quot; in sentence</code></li><li><code>sentence.find(&quot; &quot;)</code></li><li><code>count(sentence)</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>What method is used to identify the number of spaces in a string variable?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-103</dd></dl></li><li>Review the code snippet below:
<pre>
name1 = &quot;Betty joe&quot;
name2 = &quot;Betty Jean&quot;
name3 = &quot;Betty Jane&quot;
if name1 &lt; name2 :
   if name1 &lt; name3 :
       print(name1, &quot;is first&quot;)
   else :
       print(name3, &quot;is first&quot;)
else :
   if name2 &lt; name3 :
      print(name2, &quot;is first&quot;)
   else :
      print(name3, &quot;is first&quot;) 
</pre>
what output is produced?
<ol class="multiple-choice"><li><code>Betty joe is first</code></li><li><code>Betty Jean is first</code></li><li class="correct"><code>Betty Jane is first</code></li><li><code>Betty joe is firstBetty Jean is firstBetty Jane is
first</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>Review the code snippet below; what output is produced?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-105</dd></dl></li><li>How do you test if a filename (given as a string) has an
extension of &quot;.png&quot;, &quot;.jpg&quot; or &quot;.gif&quot;?
<ol class="multiple-choice"><li><code>if filename.endswith(&quot;.png&quot; or &quot;.jpg&quot; or &quot;.gif&quot;)
:</code></li><li class="correct"><code>if filename.endswith(&quot;.png&quot;) or filename.endswith(&quot;.jpg&quot;)
or filename.endswith(&quot;.gif&quot;) :</code></li><li><code>if &quot;.png&quot; in filename or &quot;.jpg&quot; in filename or &quot;.gif&quot; in
filename :</code></li><li><code>if filename.contains(&quot;.jpg&quot;, &quot;.gif&quot;, &quot;.png&quot;)
:</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>How do you test if a filename (given as a string) has a valid extension?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-106</dd></dl></li><li>What value is displayed by the following code segment?
<pre>
s = &quot;Computer Science&quot;
x = s.find(&quot;TER&quot;)
print(x)
</pre><ol class="multiple-choice"><li class="correct">-1</li><li>0</li><li>5</li><li>6</li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>Search for a substring within a string</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-107</dd></dl></li><li>What value is displayed by the following code segment?
<pre>
name = &quot;John Smith&quot;
print(name.startswith(&quot;john&quot;))
</pre><ol class="multiple-choice"><li><code>-1</code></li><li><code>0</code></li><li class="correct"><code>False</code></li><li><code>True</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>Determine what is output by the starts with method</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-108</dd></dl></li><li>Which of the following checks to see if the string variable
<code>sentence</code> starts with the string <code>&quot;Dear&quot;</code>?
<ol class="multiple-choice"><li><code>if &quot;Dear&quot; in sentence :</code></li><li><code>if sentence.find(&quot;Dear&quot;) :</code></li><li><code>if &quot;Dear&quot; not in sentence :</code></li><li class="correct"><code>if sentence.startswith(&quot;Dear&quot;) :</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>Which statement tests if a string contains a substring at the beginning?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-95</dd></dl></li><li>What value is printed by the following code snippet?
<pre>
name = &quot;John R. Johnson&quot;
firstName = &quot;John&quot;
location = name.find(firstName)
print(location)
</pre><ol class="multiple-choice"><li><code>-1</code></li><li class="correct"><code>0</code></li><li><code>8</code></li><li><code>1</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>What value is returned when using the find substring command?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-96</dd></dl></li><li>What value is printed by the following code snippet?
<pre>
name = &quot;John R. Johnson&quot;
firstName = &quot;Joe&quot;
location = name.find(firstName)
print(location)
</pre><ol class="multiple-choice"><li class="correct"><code>-1</code></li><li><code>0</code></li><li><code>8</code></li><li><code>1</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>What value is returned when using the find substring command?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-97</dd></dl></li><li>What string method can be used to determine if the string
contained in the variable <code>text</code> only consists of
letters?
<ol class="multiple-choice"><li><code>text.isalnum()</code></li><li class="correct"><code>text.isalpha()</code></li><li><code>text.isdigit()</code></li><li><code>text.islower()</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>What String method checks for all characters in a variable?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-98</dd></dl></li><li>What string method can be used to determine if all characters
within a string are lowercase?
<ol class="multiple-choice"><li><code>text.isalnum()</code></li><li><code>text.isalpha()</code></li><li><code>text.isdigit()</code></li><li class="correct"><code>text.islower()</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>What String method checks for all lowercase characters?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-1-ch03-99</dd></dl></li><li>Review the code snippet below:
<pre>
sentence = input(&quot;Enter some text: &quot;)
firstCh = sentence[0]
</pre>
Which of the following statements correctly determines if the first
letter of the string contained in <code>sentence</code> is an
uppercase letter?
<ol class="multiple-choice">
  <li class="correct"><code>if firstCh.isupper() :</code></li>
  <li><code>if not (firstCh.isupper()) :</code></li>
  <li><code>if firstCh.isspace() :</code></li>
  <li><code>if not (firstCh.isspace()) :</code></li>
</ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>Which of the following statements correctly determines if the first letter of the string is an uppercase letter?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-104</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-2-ch03-104</dd></dl></li><li>
  What value is displayed when the following code segment is executed?

  <pre>
  s = &quot;Jonathan&quot;
  print(s.endswith(&quot;n&quot;))
  </pre>

  <ol class="multiple-choice">
    <li><code>-1</code></li>
    <li><code>0</code></li>
    <li><code>False</code></li>
    <li class="correct"><code>True</code></li>
  </ol>
<dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>Trace code involving the endswith method</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-2-ch03-123</dd></dl></li><li>Which of the following checks to see if there is a comma
  anywhere in the string variable <code>name</code>?<ol class="multiple-choice">
    <li class="correct"><code>if &quot;,&quot; in name :</code></li>
    <li><code>if name.contains(&quot;,&quot;) :</code></li>
    <li><code>if &quot;,&quot; not in name :</code></li>
    <li><code>if name.startswith(&quot;,&quot;) :</code></li></ol><dl><dt>Section</dt><dd>3.8 Analyzing Strings</dd><dt>Title</dt><dd>Which statement tests if a string contains a substring?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-94</dd><dt>section</dt><dd>3.8 Analyzing Strings</dd><dt>id</dt><dd>testbank-py-2-ch03-94</dd></dl></li><li>Which of the following statements can be used to validate
whether the value a user entered for a grade is in the range 0 to
100, including both 0 and 100?
<ol class="multiple-choice"><li><code>if grade &gt; 0 and grade &lt; 100 :</code></li><li class="correct"><code>if grade &gt;= 0 and grade &lt;= 100 :</code></li><li><code>if grade &lt;= 0 and grade &gt;= 100 :</code></li><li><code>if grade &lt;=0 or grade &gt;=100 :</code></li></ol><dl><dt>Section</dt><dd>3.9 Application: Input Validation</dd><dt>Title</dt><dd>Which statement validates the user input is between 0 and 100?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.9 Application: Input Validation</dd><dt>id</dt><dd>testbank-py-1-ch03-109</dd></dl></li><li>Which of the following statements is the best choice to validate user
input when entering a marital status as a single letter?
<ol class="multiple-choice"><li><pre>
if maritalStatus == &quot;s&quot; or maritalStatus == &quot;m&quot; :
</pre></li><li><pre>
if maritalStatus == &quot;S&quot; or maritalStatus == &quot;M&quot; :
</pre></li><li class="correct"><pre>
if (maritalStatus == &quot;s&quot; or maritalStatus == &quot;m&quot; or
    maritalStatus == &quot;S&quot; or maritalStatus == &quot;M&quot;) :
</pre></li><li><pre>
if maritalStatus == &quot;s&quot; or &quot;S&quot; or &quot;m&quot; or &quot;M&quot; :
</pre></li></ol><dl><dt>Section</dt><dd>3.9 Application: Input Validation</dd><dt>Title</dt><dd>Which statements can be used to validate the user entered a valid marital status?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-110</dd><dt>section</dt><dd>3.9 Application: Input Validation</dd><dt>id</dt><dd>testbank-py-2-ch03-110</dd></dl></li><li>Review the code snippet below:
<pre>
maritalStatus = input(&quot;Enter your marital status (s for single, m for married): &quot;)
maritalStatus = maritalStatus.upper()
</pre>
Which of the following statements can be used to validate whether
the user entered a valid marital status?
<ol class="multiple-choice"><li class="correct"><pre>
if maritalStatus == &quot;S&quot; or maritalStatus == &quot;M&quot; :
</pre></li><li><pre>
if maritalStatus == &quot;s&quot; or maritalStatus == &quot;m&quot; :
</pre></li><li><pre>
if (maritalStatus == &quot;s&quot; or maritalStatus == &quot;m&quot;) and 
   (maritalStatus == &quot;S&quot; or maritalStatus == &quot;M&quot;) :
</pre></li><li><pre>
if maritalStatus == &quot;s&quot; or &quot;S&quot; or &quot;m&quot; or &quot;M&quot; :
</pre></li></ol><dl><dt>Section</dt><dd>3.9 Application: Input Validation</dd><dt>Title</dt><dd>Which statements can be used to validate the user entered a valid marital status?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-111</dd><dt>section</dt><dd>3.9 Application: Input Validation</dd><dt>id</dt><dd>testbank-py-2-ch03-111</dd></dl></li><li>Review the code snippet below:
<pre>
month = int(input(&quot;Enter your two digit birth month: &quot;))
</pre>
Which of the following statements checks that the user entered a
valid month?
<ol class="multiple-choice">
  <li><code>if month &gt;= 1 or month &lt;= 12 :</code></li>
  <li class="correct"><code>if month &gt;= 1 and month &lt;= 12</code></li>
  <li><code>if month &gt; 1 or month &lt; 12 :</code></li>
  <li><code>if month &gt; 1 and month &lt; 12 :</code></li></ol><dl><dt>Section</dt><dd>3.9 Application: Input Validation</dd><dt>Title</dt><dd>Which statements can be used to validate the user entered a valid birth month?</dd><dt>type</dt><dd>mc</dd><dt>from</dt><dd>testbank-py-1-ch03-112</dd><dt>section</dt><dd>3.9 Application: Input Validation</dd><dt>id</dt><dd>testbank-py-2-ch03-112</dd></dl></li><li>
  Which statement will successfully import the pyplot submodule?

  <ol class="multiple-choice">
    <li><code>from math import pyplot</code></li>
    <li class="correct"><code>from matplotlib import pyplot</code></li>
    <li><code>import pyplot</code></li>
    <li><code>import * from pyplot</code></li>
  </ol>
<dl><dt>Section</dt><dd>3.9 Application: Input Validation</dd><dt>Title</dt><dd>Which statement will successfully import the pyplot submodule?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.9 Application: Input Validation</dd><dt>id</dt><dd>testbank-py-2-ch03-124</dd></dl></li><li>
  Which statement adds a bar to a pyplot graph after pyplot has been imported
  by the following statement?

  <pre>
from matplotlib import pyplot
  </pre>

  <ol class="multiple-choice">
    <li><code>bar(4, 44.5)</code></li>
    <li class="correct"><code>pyplot.bar(4, 44.5)</code></li>
    <li><code>pyplot(4, 44.5)</code></li>
    <li><code>bar.pyplot(4, 44.5)</code></li>
  </ol>
<dl><dt>Section</dt><dd>3.9 Application: Input Validation</dd><dt>Title</dt><dd>Which statement adds a bar to a pyplot graph?</dd><dt>type</dt><dd>mc</dd><dt>section</dt><dd>3.9 Application: Input Validation</dd><dt>id</dt><dd>testbank-py-2-ch03-125</dd></dl></li></ol></body>
    </html>
